name: Run K6 performance tests

on:
  workflow_call:
    inputs:
      apiVersion:
        required: true
        type: string
      environment:
        required: true
        type: string
      testSuitePath:
        required: true
        type: string
      vus:
        required: true
        type: number
      duration:
        required: true
        type: string
      parallelism:
        required: true
        type: number
      breakpoint:
        required: true
        type: boolean
      abortOnFail:
        required: true
        type: boolean
      numberOfEndUsers:
        required: true
        type: number
      ref:
        description: "The branch or tag ref to run the tests on. Using default checkout ref if not provided."
        required: false
        default: ${{ github.ref }}
        type: string
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
permissions:
  id-token: write
  contents: read
jobs:
  k6-test:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.ref }}
    - name: OIDC Login to Azure Public Cloud
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        allow-no-subscriptions: true
    - name: Populate kubeconfig with k6 context
      id: populate_kubeconfig_with_k6_context
      shell: bash
      run: |
        if ! az aks install-cli --client-version 1.32.2 ; then
          echo "Failed to install kubectl CLI"
          exit 1
        fi

        if ! az aks get-credentials --resource-group k6tests-rg --name k6tests-cluster; then
          echo "Failed to populate kubeconfig"
          exit 1
        fi

        if ! kubelogin convert-kubeconfig -l azurecli; then
          echo "Failed to convert kubeconfig"
          exit 1
        fi
    - name: Setup k6
      uses: grafana/setup-k6-action@v1
    - name: Run K6 tests (${{ inputs.testSuitePath }})
      run: |
        echo "Running k6 test suite ${{ inputs.testSuitePath }} with ${{ inputs.vus }} VUs for ${{ inputs.duration }} on ${{ inputs.parallelism }} parallelism"
        k6configName=$(basename "${{ inputs.testSuitePath }}" .js)
        k6configName="k6-${k6configName}"
        ./tests/k6/tests/scripts/run-test-in-k8s.sh -f ${{ inputs.testSuitePath }} -c $k6configName -n $k6configName -v ${{ inputs.vus }} -d ${{ inputs.duration }} -p ${{ inputs.parallelism }} -a ${{ inputs.abortOnFail }} -b ${{ inputs.breakpoint }} 
      env:
        API_ENVIRONMENT: ${{ inputs.environment }}
        API_VERSION: ${{ inputs.apiVersion }}
        NUMBER_OF_ENDUSERS: ${{ inputs.numberOfEndUsers }}
