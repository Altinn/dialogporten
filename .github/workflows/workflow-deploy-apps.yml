name: Deploy apps
env:
  AZ_CLI_VERSION: 2.67.0
on:
  workflow_call:
    outputs:
      deployment_executed:
        description: "Indicates if the deployment was actually executed"
        value: ${{ jobs.deploy-apps.result == 'success' && jobs.deploy-jobs.result == 'success' && !inputs.dryRun }}
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      AZURE_RESOURCE_GROUP_NAME:
        required: true
      AZURE_ENVIRONMENT_KEY_VAULT_NAME:
        required: true
      AZURE_CONTAINER_APP_ENVIRONMENT_NAME:
        required: true
      AZURE_APP_INSIGHTS_CONNECTION_STRING:
        required: true
      AZURE_APP_CONFIGURATION_NAME:
        required: true
      AZURE_SERVICE_BUS_NAMESPACE_NAME:
        required: true

    inputs:
      region:
        required: true
        type: string
      environment:
        required: true
        type: string
      dryRun:
        description: "If true, the deployment will be validated but not executed."
        required: false
        type: boolean
        default: false
      version:
        description: "Current version to use as tag"
        required: true
        type: string
      runMigration:
        description: "If true, the migration job will be run."
        required: false
        type: boolean
        default: false
concurrency:
  # Existing runs are cancelled if someone repeatedly commits to their own Pull Request (PR). However, it does not stop others' dry runs or actual deployments from the main branch.
  # Also, the cancellation does not occur on merges to the main branch. Therefore, if multiple merges to main are performed simultaneously, they will just be queued up.
  group: deploy-apps-${{ inputs.environment }}-${{ github.ref_name }}-${{ inputs.dryRun }}
  # if the dryrun input is true, we want to cancel any running deployments in order to not block the pipeline e.g for environment approvals
  cancel-in-progress: ${{ inputs.dryRun }}
jobs:
  deploy-apps:
    name: Deploy ${{ matrix.name }} to ${{ inputs.environment }}
    runs-on: ubuntu-latest
    # Should run even though the migration job was skipped
    if: ${{ always() && !failure() && !cancelled() }}
    strategy:
      fail-fast: true
      matrix:
        include:
          - name: web-api-eu
          - name: web-api-so
          - name: graphql
          - name: service
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
    env:
      REVISION_SUFFIX: "${{ github.run_id }}-${{ inputs.version }}-${{ github.run_attempt}}"
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v4

      - name: OIDC Login to Azure Public Cloud
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Upgrade bicep
        run: |
          az bicep upgrade

      - name: Dryrun Deploy app ${{ matrix.name }}(${{ inputs.environment }})
        uses: azure/arm-deploy@v2
        if: ${{ inputs.dryRun }}
        id: deploy-dry-run
        env:
          # parameters
          IMAGE_TAG: ${{ inputs.version }}
          REVISION_SUFFIX: ${{ env.REVISION_SUFFIX }}
          # secrets
          AZURE_CONTAINER_APP_ENVIRONMENT_NAME: ${{ secrets.AZURE_CONTAINER_APP_ENVIRONMENT_NAME }}
          AZURE_APP_INSIGHTS_CONNECTION_STRING: ${{ secrets.AZURE_APP_INSIGHTS_CONNECTION_STRING }}
          AZURE_APP_CONFIGURATION_NAME: ${{ secrets.AZURE_APP_CONFIGURATION_NAME }}
          AZURE_ENVIRONMENT_KEY_VAULT_NAME: ${{ secrets.AZURE_ENVIRONMENT_KEY_VAULT_NAME }}
          AZURE_SERVICE_BUS_NAMESPACE_NAME: ${{ secrets.AZURE_SERVICE_BUS_NAMESPACE_NAME }}
        with:
          scope: resourcegroup
          template: ./.azure/applications/${{ matrix.name }}/main.bicep
          resourceGroupName: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
          deploymentMode: Incremental
          deploymentName: "${{ matrix.name }}-${{ inputs.version }}"
          region: ${{ inputs.region }}
          failOnStdErr: false
          additionalArguments: '--what-if'
          parameters: ./.azure/applications/${{ matrix.name }}/${{ inputs.environment }}.bicepparam

      - name: Deploy app ${{ matrix.name }}(${{ inputs.environment }})
        uses: azure/arm-deploy@v2
        if: ${{!inputs.dryRun}}
        id: deploy
        env:
          # parameters
          IMAGE_TAG: ${{ inputs.version }}
          REVISION_SUFFIX: ${{ env.REVISION_SUFFIX }}
          # secrets
          AZURE_CONTAINER_APP_ENVIRONMENT_NAME: ${{ secrets.AZURE_CONTAINER_APP_ENVIRONMENT_NAME }}
          AZURE_APP_INSIGHTS_CONNECTION_STRING: ${{ secrets.AZURE_APP_INSIGHTS_CONNECTION_STRING }}
          AZURE_APP_CONFIGURATION_NAME: ${{ secrets.AZURE_APP_CONFIGURATION_NAME }}
          AZURE_ENVIRONMENT_KEY_VAULT_NAME: ${{ secrets.AZURE_ENVIRONMENT_KEY_VAULT_NAME }}
          AZURE_SERVICE_BUS_NAMESPACE_NAME: ${{ secrets.AZURE_SERVICE_BUS_NAMESPACE_NAME }}
        with:
          scope: resourcegroup
          template: ./.azure/applications/${{ matrix.name }}/main.bicep
          resourceGroupName: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
          deploymentMode: Incremental
          deploymentName: ${{ matrix.name }}-${{ inputs.version }}
          region: ${{ inputs.region }}
          failOnStdErr: false
          parameters: ./.azure/applications/${{ matrix.name }}/${{ inputs.environment }}.bicepparam

      - name: Verify deployment (${{ matrix.name }})
        uses: azure/CLI@v2
        if: ${{!inputs.dryRun}}
        id: verify-deployment
        timeout-minutes: 3
        with:
          azcliversion: ${{ env.AZ_CLI_VERSION }}
          inlineScript: |
            ./.github/tools/revisionVerifier.sh ${{ steps.deploy.outputs.revisionName }} ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}

      - name: Logout from azure
        if: ${{failure() || success()}}
        continue-on-error: true
        run: az logout
