version: '3.9'

services:
  dialogporten-postgres:
    image: postgres:15.5
    restart: always
    command: postgres -c wal_level=logical
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
      timeout: 20s
      retries: 5

  dialogporten-rabbitmq:
    build:
      context: .
      dockerfile: RabbitMq/Dockerfile
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmq-diagnostics check_running" ]
      interval: 5s
      timeout: 20s
      retries: 5
      
  dialogporten-service:
    build:
      context: .
      dockerfile: src/Digdir.Domain.Dialogporten.Service/Dockerfile
    restart: always
    depends_on:
      dialogporten-postgres:
        condition: service_healthy
      dialogporten-rabbitmq:
        condition: service_healthy
    environment:
      - Infrastructure:DialogDbConnectionString=${DB_CONNECTION_STRING}
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMq:Host=${RABBITMQ_HOST}
      - RabbitMq:Username=${RABBITMQ_USERNAME}
      - RabbitMq:Password=${RABBITMQ_PASSWORD}
  
  dialogporten-cdc:
    build:
      context: .
      dockerfile: src/Digdir.Domain.Dialogporten.ChangeDataCapture/Dockerfile
    restart: always
    depends_on:
      dialogporten-postgres:
        condition: service_healthy
      dialogporten-rabbitmq:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - Infrastructure:DialogDbConnectionString=${DB_CONNECTION_STRING}
      - ReplicationSlotName=outboxmessage_replication_slot
      - PublicationName=outboxmessage_publication
      - TableName=OutboxMessage
      - RabbitMq:Host=${RABBITMQ_HOST}
      - RabbitMq:Username=${RABBITMQ_USERNAME}
      - RabbitMq:Password=${RABBITMQ_PASSWORD}