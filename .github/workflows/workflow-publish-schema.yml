name: Publish Schema to NPM

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      ref:
        description: "The branch or tag ref to publish. Using default checkout ref if not provided."
        required: false
        default: ${{ github.ref }}
        type: string
    secrets:
      NPM_TOKEN:
        required: true
env:
  WORKING_DIRECTORY: docs/schema/V1

permissions:
  contents: read

jobs:
  check-published-version:
    runs-on: ubuntu-latest
    outputs:
      version-exists: ${{ steps.check-published-version.outputs.version-exists }}
    steps:
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ inputs.ref }}

      - name: Set up Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org/'

      - name: Fetch package name
        id: fetch-package-name
        run: echo "PACKAGE_NAME=$(jq -r '.name' package.json)" >> $GITHUB_ENV
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Check if version exists on NPM
        id: check-published-version
        run: |
          if npm view "${{ env.PACKAGE_NAME }}@${{ inputs.version }}" > /dev/null 2>&1; then
            echo "version-exists=true" >> $GITHUB_OUTPUT
            echo "Version ${{ inputs.version }} already exists"
          else
            echo "version-exists=false" >> $GITHUB_OUTPUT
            echo "Version ${{ inputs.version }} does not exist"
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-schema-to-npm:
    runs-on: ubuntu-latest
    needs: check-published-version
    if: needs.check-published-version.outputs.version-exists == 'false'
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ inputs.ref }}

      - name: Build and test schema
        uses: ./.github/actions/build-schema
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Update package version
        run: |
          jq '.version = "${{ inputs.version }}"' package.json > temp.json
          mv temp.json package.json
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Publish package
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        working-directory: ${{ env.WORKING_DIRECTORY }}
