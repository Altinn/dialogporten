name: Build and deploy ASP.Net Core app to Azure Web App - dialogporten-poc

on:
  workflow_dispatch:
  push:
    branches: [ feature/AddCleanArchitectureLayout ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x'
      
      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Test
        run: dotnet test --no-build --configuration Release

      - name: Publish web api
        run: dotnet publish src/Digdir.Domain.Dialogporten.WebApi --no-build -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Generate EF migration script
        run: | 
          dotnet tool install --global dotnet-ef
          dotnet tool restore
          dotnet ef migrations script --no-build --configuration Release --idempotent --startup-project src/Digdir.Domain.Dialogporten.Infrastructure --output ${{env.DOTNET_ROOT}}/myapp/migrate.sql

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app

      - name: Login to azure
        id: azureLogin
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # TODO: 
      # Preferably we should be using azure/postgresql when the following issue is resolved
      # https://github.com/Azure/postgresql/issues/33
      #- name: Apply EF migration script
      #  uses: azure/postgresql@v1
      #  with:
      #    connection-string: ${{ secrets.DIALOGPORTEN_PSQL_CONNECTIONSTRING }}
      #    server-name: dialogportenpgprod
      #    plsql-file: "./migrate.sql"
      #    arguments: "-q"

      - name: Fetch runners public IP
        id: ip
        uses: haythem/public-ip@v1.3

      - name: Open postgre firewall for migrations
        run: >
          az postgres flexible-server firewall-rule create 
          --rule-name GithubActions 
          --name dialogportenpgprod 
          --resource-group dialogporten-poc-rg 
          --start-ip-address ${{ steps.ip.outputs.ipv4 }}

      - name: Apply EF migration script
        run: ${{ secrets.DIALOGPORTEN_PSQL_CONNECTIONSTRING }} -f ./migrate.sql -q

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'dialogporten-poc'
          slot-name: 'production'
          package: .

      #- name: Update config
      #  uses: Azure/appservice-settings@v1
      #  with:
      #    app-name: 'dialogporten-poc'
      #    slot-name: 'production'
      #    app-settings-json: |
      #        [
      #            {
      #                "name": "InfrastructureSettings:DialogueDbConnectionString",
      #                "value": "${{ secrets.DIALOGPORTEN_ADO_CONNECTIONSTRING }}",
      #                "slotSetting": true
      #            }
      #        ]

      - name: Close postgre firewall
        if: ${{failure() || success()}}
        continue-on-error: true
        run: >
          az postgres flexible-server firewall-rule delete 
          --rule-name GithubActions 
          --name dialogportenpgprod 
          --resource-group dialogporten-poc-rg
          --yes

      - name: Logout from azure
        if: ${{failure() || success()}}
        continue-on-error: true
        run: az logout
