{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.25.53.49325",
      "templateHash": "18102634065330484612"
    }
  },
  "definitions": {
    "AppConfigurationSku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "allowedValues": [
            "standard"
          ]
        }
      },
      "metadata": {
        "__bicep_imported_from!": {
          "sourceTemplate": "../modules/appConfiguration/create.bicep"
        }
      }
    },
    "AppInsightsSku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "allowedValues": [
            "CapacityReservation",
            "Free",
            "LACluster",
            "PerGB2018",
            "PerNode",
            "Premium",
            "Standalone",
            "Standard"
          ]
        }
      },
      "metadata": {
        "__bicep_imported_from!": {
          "sourceTemplate": "../modules/applicationInsights/create.bicep"
        }
      }
    },
    "KeyVaultSku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "allowedValues": [
            "premium",
            "standard"
          ]
        },
        "family": {
          "type": "string",
          "allowedValues": [
            "A"
          ]
        }
      },
      "metadata": {
        "__bicep_imported_from!": {
          "sourceTemplate": "../modules/keyvault/create.bicep"
        }
      }
    },
    "PostgresSku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "allowedValues": [
            "Standard_B1ms"
          ]
        },
        "tier": {
          "type": "string",
          "allowedValues": [
            "Burstable",
            "GeneralPurpose",
            "MemoryOptimized"
          ]
        }
      },
      "metadata": {
        "__bicep_imported_from!": {
          "sourceTemplate": "../modules/postgreSql/create.bicep"
        }
      }
    },
    "SlackNotifierSku": {
      "type": "object",
      "properties": {
        "storageAccountName": {
          "type": "string",
          "allowedValues": [
            "Premium_LRS",
            "Premium_ZRS",
            "Standard_GRS",
            "Standard_LRS",
            "Standard_RAGRS",
            "Standard_ZRS"
          ]
        },
        "applicationServicePlanName": {
          "type": "string",
          "allowedValues": [
            "B1",
            "B2",
            "B3",
            "D1",
            "F1",
            "I1",
            "I2",
            "I3",
            "P1",
            "P1V2",
            "P2",
            "P2V2",
            "P3",
            "P3V2",
            "S1",
            "S2",
            "S3",
            "Y1",
            "Y1v2",
            "Y1v2Isolated",
            "Y2",
            "Y2v2",
            "Y2v2Isolated",
            "Y3",
            "Y3v2",
            "Y3v2Isolated"
          ]
        },
        "applicationServicePlanTier": {
          "type": "string",
          "allowedValues": [
            "Basic",
            "Dynamic",
            "Free",
            "Isolated",
            "Premium",
            "Shared",
            "Standard"
          ]
        }
      },
      "metadata": {
        "__bicep_imported_from!": {
          "sourceTemplate": "../modules/functionApp/slackNotifier.bicep"
        }
      }
    }
  },
  "parameters": {
    "environment": {
      "type": "string",
      "minLength": 3
    },
    "location": {
      "type": "string",
      "minLength": 3
    },
    "keyVaultSourceKeys": {
      "type": "array"
    },
    "dialogportenPgAdminPassword": {
      "type": "securestring",
      "minLength": 3
    },
    "sourceKeyVaultSubscriptionId": {
      "type": "securestring",
      "minLength": 3
    },
    "sourceKeyVaultResourceGroup": {
      "type": "securestring",
      "minLength": 3
    },
    "sourceKeyVaultName": {
      "type": "securestring",
      "minLength": 3
    },
    "keyVaultSku": {
      "$ref": "#/definitions/KeyVaultSku"
    },
    "appConfigurationSku": {
      "$ref": "#/definitions/AppConfigurationSku"
    },
    "appInsightsSku": {
      "$ref": "#/definitions/AppInsightsSku"
    },
    "slackNotifierSku": {
      "$ref": "#/definitions/SlackNotifierSku"
    },
    "postgresSku": {
      "$ref": "#/definitions/PostgresSku"
    }
  },
  "variables": {
    "secrets": {
      "dialogportenPgAdminPassword": "[parameters('dialogportenPgAdminPassword')]",
      "sourceKeyVaultSubscriptionId": "[parameters('sourceKeyVaultSubscriptionId')]",
      "sourceKeyVaultResourceGroup": "[parameters('sourceKeyVaultResourceGroup')]",
      "sourceKeyVaultName": "[parameters('sourceKeyVaultName')]"
    },
    "namePrefix": "[format('dp-be-{0}', parameters('environment'))]",
    "srcKeyVault": {
      "name": "[variables('secrets').sourceKeyVaultName]",
      "subscriptionId": "[variables('secrets').sourceKeyVaultSubscriptionId]",
      "resourceGroupName": "[variables('secrets').sourceKeyVaultResourceGroup]"
    }
  },
  "resources": {
    "resourceGroup": {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}-rg', variables('namePrefix'))]",
      "location": "[parameters('location')]"
    },
    "srcKeyVaultResource": {
      "existing": true,
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "subscriptionId": "[variables('secrets').sourceKeyVaultSubscriptionId]",
      "resourceGroup": "[variables('secrets').sourceKeyVaultResourceGroup]",
      "name": "[variables('secrets').sourceKeyVaultName]"
    },
    "keyVaultModule": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "keyVault",
      "resourceGroup": "[format('{0}-rg', variables('namePrefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "namePrefix": {
            "value": "[variables('namePrefix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "sku": {
            "value": "[parameters('keyVaultSku')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "2760954716125288010"
            }
          },
          "definitions": {
            "Sku": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "allowedValues": [
                    "premium",
                    "standard"
                  ]
                },
                "family": {
                  "type": "string",
                  "allowedValues": [
                    "A"
                  ]
                }
              },
              "metadata": {
                "__bicep_export!": true
              }
            }
          },
          "parameters": {
            "namePrefix": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "sku": {
              "$ref": "#/definitions/Sku"
            }
          },
          "variables": {
            "keyVaultName": "[take(format('{0}-kv-{1}', parameters('namePrefix'), uniqueString(resourceGroup().id)), 24)]"
          },
          "resources": {
            "keyVault": {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2023-07-01",
              "name": "[variables('keyVaultName')]",
              "location": "[parameters('location')]",
              "properties": {
                "enablePurgeProtection": null,
                "enabledForTemplateDeployment": false,
                "sku": "[parameters('sku')]",
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": []
              }
            }
          },
          "outputs": {
            "name": {
              "type": "string",
              "value": "[variables('keyVaultName')]"
            }
          }
        }
      },
      "dependsOn": [
        "resourceGroup"
      ]
    },
    "appConfiguration": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "appConfiguration",
      "resourceGroup": "[format('{0}-rg', variables('namePrefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "namePrefix": {
            "value": "[variables('namePrefix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "sku": {
            "value": "[parameters('appConfigurationSku')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "988952339729943041"
            }
          },
          "definitions": {
            "Sku": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "allowedValues": [
                    "standard"
                  ]
                }
              },
              "metadata": {
                "__bicep_export!": true
              }
            }
          },
          "parameters": {
            "namePrefix": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "sku": {
              "$ref": "#/definitions/Sku"
            }
          },
          "resources": {
            "appConfig::configStoreKeyValue": {
              "type": "Microsoft.AppConfiguration/configurationStores/keyValues",
              "apiVersion": "2023-03-01",
              "name": "[format('{0}/{1}', format('{0}-appConfiguration', parameters('namePrefix')), 'Sentinel')]",
              "properties": {
                "value": "1"
              },
              "dependsOn": [
                "appConfig"
              ]
            },
            "appConfig": {
              "type": "Microsoft.AppConfiguration/configurationStores",
              "apiVersion": "2023-03-01",
              "name": "[format('{0}-appConfiguration', parameters('namePrefix'))]",
              "location": "[parameters('location')]",
              "sku": "[parameters('sku')]",
              "properties": {
                "enablePurgeProtection": false
              }
            }
          },
          "outputs": {
            "endpoint": {
              "type": "string",
              "value": "[reference('appConfig').endpoint]"
            },
            "name": {
              "type": "string",
              "value": "[format('{0}-appConfiguration', parameters('namePrefix'))]"
            }
          }
        }
      },
      "dependsOn": [
        "resourceGroup"
      ]
    },
    "appInsights": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "appInsights",
      "resourceGroup": "[format('{0}-rg', variables('namePrefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "namePrefix": {
            "value": "[variables('namePrefix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "sku": {
            "value": "[parameters('appInsightsSku')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "10082346743241499787"
            }
          },
          "definitions": {
            "Sku": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "allowedValues": [
                    "CapacityReservation",
                    "Free",
                    "LACluster",
                    "PerGB2018",
                    "PerNode",
                    "Premium",
                    "Standalone",
                    "Standard"
                  ]
                }
              },
              "metadata": {
                "__bicep_export!": true
              }
            }
          },
          "parameters": {
            "namePrefix": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "sku": {
              "$ref": "#/definitions/Sku"
            }
          },
          "resources": {
            "appInsightsWorkspace": {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[format('{0}-insightsWorkspace', parameters('namePrefix'))]",
              "location": "[parameters('location')]",
              "properties": {
                "retentionInDays": 30,
                "sku": "[parameters('sku')]",
                "workspaceCapping": {
                  "dailyQuotaGb": -1
                }
              }
            },
            "appInsights": {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[format('{0}-applicationInsights', parameters('namePrefix'))]",
              "location": "[parameters('location')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-insightsWorkspace', parameters('namePrefix')))]",
                "Flow_Type": "Bluefield",
                "Request_Source": "rest"
              },
              "dependsOn": [
                "appInsightsWorkspace"
              ]
            }
          },
          "outputs": {
            "connectionString": {
              "type": "string",
              "value": "[reference('appInsights').ConnectionString]"
            },
            "appInsightsWorkspaceName": {
              "type": "string",
              "value": "[format('{0}-insightsWorkspace', parameters('namePrefix'))]"
            },
            "appInsightsName": {
              "type": "string",
              "value": "[format('{0}-applicationInsights', parameters('namePrefix'))]"
            }
          }
        }
      },
      "dependsOn": [
        "resourceGroup"
      ]
    },
    "postgresql": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "postgresql",
      "resourceGroup": "[format('{0}-rg', variables('namePrefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "namePrefix": {
            "value": "[variables('namePrefix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "keyVaultName": {
            "value": "[reference('keyVaultModule').outputs.name.value]"
          },
          "srcKeyVault": {
            "value": "[variables('srcKeyVault')]"
          },
          "srcSecretName": {
            "value": "[format('dialogportenPgAdminPassword{0}', parameters('environment'))]"
          },
          "administratorLoginPassword": "[if(contains(parameters('keyVaultSourceKeys'), format('dialogportenPgAdminPassword{0}', parameters('environment'))), createObject('reference', createObject('keyVault', createObject('id', extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('secrets').sourceKeyVaultSubscriptionId, variables('secrets').sourceKeyVaultResourceGroup), 'Microsoft.KeyVault/vaults', variables('secrets').sourceKeyVaultName)), 'secretName', format('dialogportenPgAdminPassword{0}', parameters('environment')))), createObject('value', variables('secrets').dialogportenPgAdminPassword))]",
          "sku": {
            "value": "[parameters('postgresSku')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "52111473636837092"
            }
          },
          "definitions": {
            "Sku": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "allowedValues": [
                    "Standard_B1ms"
                  ]
                },
                "tier": {
                  "type": "string",
                  "allowedValues": [
                    "Burstable",
                    "GeneralPurpose",
                    "MemoryOptimized"
                  ]
                }
              },
              "metadata": {
                "__bicep_export!": true
              }
            }
          },
          "parameters": {
            "namePrefix": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "keyVaultName": {
              "type": "string"
            },
            "srcSecretName": {
              "type": "string"
            },
            "sku": {
              "$ref": "#/definitions/Sku"
            },
            "srcKeyVault": {
              "type": "secureObject"
            },
            "administratorLoginPassword": {
              "type": "securestring"
            }
          },
          "variables": {
            "administratorLogin": "dialogportenPgAdmin",
            "databaseName": "dialogporten"
          },
          "resources": {
            "postgres::database": {
              "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
              "apiVersion": "2022-12-01",
              "name": "[format('{0}/{1}', format('{0}-postgres', parameters('namePrefix')), variables('databaseName'))]",
              "properties": {
                "charset": "UTF8",
                "collation": "en_US.utf8"
              },
              "dependsOn": [
                "postgres"
              ]
            },
            "postgres::allowAzureAccess": {
              "type": "Microsoft.DBforPostgreSQL/flexibleServers/firewallRules",
              "apiVersion": "2022-12-01",
              "name": "[format('{0}/{1}', format('{0}-postgres', parameters('namePrefix')), 'AllowAccessFromAzure')]",
              "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
              },
              "dependsOn": [
                "postgres"
              ]
            },
            "postgres": {
              "type": "Microsoft.DBforPostgreSQL/flexibleServers",
              "apiVersion": "2022-12-01",
              "name": "[format('{0}-postgres', parameters('namePrefix'))]",
              "location": "[parameters('location')]",
              "properties": {
                "version": "15",
                "administratorLogin": "[variables('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
                "storage": {
                  "storageSizeGB": 32
                },
                "dataEncryption": {
                  "type": "SystemManaged"
                },
                "replicationRole": "Primary"
              },
              "sku": "[parameters('sku')]"
            },
            "saveAdmPassword": {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('Save_{0}', parameters('srcSecretName'))]",
              "subscriptionId": "[parameters('srcKeyVault').subscriptionId]",
              "resourceGroup": "[parameters('srcKeyVault').resourceGroupName]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "destKeyVaultName": {
                    "value": "[parameters('srcKeyVault').name]"
                  },
                  "secretName": {
                    "value": "[parameters('srcSecretName')]"
                  },
                  "secretValue": {
                    "value": "[parameters('administratorLoginPassword')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.25.53.49325",
                      "templateHash": "4960712788860156215"
                    }
                  },
                  "parameters": {
                    "destKeyVaultName": {
                      "type": "string"
                    },
                    "secretName": {
                      "type": "string"
                    },
                    "secretValue": {
                      "type": "securestring"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2023-07-01",
                      "name": "[format('{0}/{1}', parameters('destKeyVaultName'), parameters('secretName'))]",
                      "properties": {
                        "value": "[parameters('secretValue')]"
                      }
                    }
                  ],
                  "outputs": {
                    "secretUri": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', split(format('{0}/{1}', parameters('destKeyVaultName'), parameters('secretName')), '/')[0], split(format('{0}/{1}', parameters('destKeyVaultName'), parameters('secretName')), '/')[1]), '2023-07-01').secretUri]"
                    }
                  }
                }
              }
            },
            "adoConnectionString": {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "adoConnectionString",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "destKeyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "secretName": {
                    "value": "dialogportenAdoConnectionString"
                  },
                  "secretValue": {
                    "value": "[format('Server={0};Database={1};Port=5432;User Id={2};Password={3};Ssl Mode=Require;Trust Server Certificate=true;', reference('postgres').fullyQualifiedDomainName, variables('databaseName'), variables('administratorLogin'), parameters('administratorLoginPassword'))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.25.53.49325",
                      "templateHash": "4960712788860156215"
                    }
                  },
                  "parameters": {
                    "destKeyVaultName": {
                      "type": "string"
                    },
                    "secretName": {
                      "type": "string"
                    },
                    "secretValue": {
                      "type": "securestring"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2023-07-01",
                      "name": "[format('{0}/{1}', parameters('destKeyVaultName'), parameters('secretName'))]",
                      "properties": {
                        "value": "[parameters('secretValue')]"
                      }
                    }
                  ],
                  "outputs": {
                    "secretUri": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', split(format('{0}/{1}', parameters('destKeyVaultName'), parameters('secretName')), '/')[0], split(format('{0}/{1}', parameters('destKeyVaultName'), parameters('secretName')), '/')[1]), '2023-07-01').secretUri]"
                    }
                  }
                }
              },
              "dependsOn": [
                "postgres"
              ]
            },
            "psqlConnectionString": {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "psqlConnectionString",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "destKeyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "secretName": {
                    "value": "dialogportenPsqlConnectionString"
                  },
                  "secretValue": {
                    "value": "[format('psql ''host={0} port=5432 dbname={1} user={2} password={3} sslmode=require''', reference('postgres').fullyQualifiedDomainName, variables('databaseName'), variables('administratorLogin'), parameters('administratorLoginPassword'))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.25.53.49325",
                      "templateHash": "4960712788860156215"
                    }
                  },
                  "parameters": {
                    "destKeyVaultName": {
                      "type": "string"
                    },
                    "secretName": {
                      "type": "string"
                    },
                    "secretValue": {
                      "type": "securestring"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2023-07-01",
                      "name": "[format('{0}/{1}', parameters('destKeyVaultName'), parameters('secretName'))]",
                      "properties": {
                        "value": "[parameters('secretValue')]"
                      }
                    }
                  ],
                  "outputs": {
                    "secretUri": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', split(format('{0}/{1}', parameters('destKeyVaultName'), parameters('secretName')), '/')[0], split(format('{0}/{1}', parameters('destKeyVaultName'), parameters('secretName')), '/')[1]), '2023-07-01').secretUri]"
                    }
                  }
                }
              },
              "dependsOn": [
                "postgres"
              ]
            }
          },
          "outputs": {
            "adoConnectionStringSecretUri": {
              "type": "string",
              "value": "[reference('adoConnectionString').outputs.secretUri.value]"
            },
            "psqlConnectionStringSecretUri": {
              "type": "string",
              "value": "[reference('psqlConnectionString').outputs.secretUri.value]"
            }
          }
        }
      },
      "dependsOn": [
        "keyVaultModule",
        "resourceGroup",
        "srcKeyVaultResource"
      ]
    },
    "copyEnvironmentSecrets": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "copyEnvironmentSecrets",
      "resourceGroup": "[format('{0}-rg', variables('namePrefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "srcKeyVaultKeys": {
            "value": "[parameters('keyVaultSourceKeys')]"
          },
          "srcKeyVaultName": {
            "value": "[variables('secrets').sourceKeyVaultName]"
          },
          "srcKeyVaultRGNName": {
            "value": "[variables('secrets').sourceKeyVaultResourceGroup]"
          },
          "srcKeyVaultSubId": {
            "value": "[variables('secrets').sourceKeyVaultSubscriptionId]"
          },
          "destKeyVaultName": {
            "value": "[reference('keyVaultModule').outputs.name.value]"
          },
          "secretPrefix": {
            "value": "[format('dialogporten--{0}--', parameters('environment'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "44147448919080552"
            }
          },
          "parameters": {
            "srcKeyVaultKeys": {
              "type": "array"
            },
            "srcKeyVaultName": {
              "type": "string"
            },
            "srcKeyVaultRGNName": {
              "type": "string",
              "defaultValue": "[resourceGroup().name]"
            },
            "srcKeyVaultSubId": {
              "type": "string",
              "defaultValue": "[subscription().subscriptionId]"
            },
            "destKeyVaultName": {
              "type": "string"
            },
            "destKeyVaultRGName": {
              "type": "string",
              "defaultValue": "[resourceGroup().name]"
            },
            "destKeyVaultSubId": {
              "type": "string",
              "defaultValue": "[subscription().subscriptionId]"
            },
            "secretPrefix": {
              "type": "string"
            },
            "removeSecretPrefix": {
              "type": "bool",
              "defaultValue": true
            }
          },
          "variables": {
            "copy": [
              {
                "name": "environmentKeys",
                "count": "[length(parameters('srcKeyVaultKeys'))]",
                "input": {
                  "isEnvironmentKey": "[startsWith(parameters('srcKeyVaultKeys')[copyIndex('environmentKeys')], parameters('secretPrefix'))]",
                  "value": "[if(parameters('removeSecretPrefix'), replace(parameters('srcKeyVaultKeys')[copyIndex('environmentKeys')], parameters('secretPrefix'), ''), parameters('srcKeyVaultKeys')[copyIndex('environmentKeys')])]",
                  "fullName": "[parameters('srcKeyVaultKeys')[copyIndex('environmentKeys')]]"
                }
              }
            ]
          },
          "resources": [
            {
              "copy": {
                "name": "secrets",
                "count": "[length(variables('environmentKeys'))]"
              },
              "condition": "[variables('environmentKeys')[copyIndex()].isEnvironmentKey]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[variables('environmentKeys')[copyIndex()].value]",
              "subscriptionId": "[parameters('destKeyVaultSubId')]",
              "resourceGroup": "[parameters('destKeyVaultRGName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "destKeyVaultName": {
                    "value": "[parameters('destKeyVaultName')]"
                  },
                  "secretName": {
                    "value": "[variables('environmentKeys')[copyIndex()].value]"
                  },
                  "secretValue": {
                    "reference": {
                      "keyVault": {
                        "id": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('srcKeyVaultSubId'), parameters('srcKeyVaultRGNName')), 'Microsoft.KeyVault/vaults', parameters('srcKeyVaultName'))]"
                      },
                      "secretName": "[variables('environmentKeys')[copyIndex()].fullName]"
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.25.53.49325",
                      "templateHash": "4960712788860156215"
                    }
                  },
                  "parameters": {
                    "destKeyVaultName": {
                      "type": "string"
                    },
                    "secretName": {
                      "type": "string"
                    },
                    "secretValue": {
                      "type": "securestring"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2023-07-01",
                      "name": "[format('{0}/{1}', parameters('destKeyVaultName'), parameters('secretName'))]",
                      "properties": {
                        "value": "[parameters('secretValue')]"
                      }
                    }
                  ],
                  "outputs": {
                    "secretUri": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', split(format('{0}/{1}', parameters('destKeyVaultName'), parameters('secretName')), '/')[0], split(format('{0}/{1}', parameters('destKeyVaultName'), parameters('secretName')), '/')[1]), '2023-07-01').secretUri]"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "keyVaultModule",
        "resourceGroup"
      ]
    },
    "copyCrossEnvironmentSecrets": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "copyCrossEnvironmentSecrets",
      "resourceGroup": "[format('{0}-rg', variables('namePrefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "srcKeyVaultKeys": {
            "value": "[parameters('keyVaultSourceKeys')]"
          },
          "srcKeyVaultName": {
            "value": "[variables('secrets').sourceKeyVaultName]"
          },
          "srcKeyVaultRGNName": {
            "value": "[variables('secrets').sourceKeyVaultResourceGroup]"
          },
          "srcKeyVaultSubId": {
            "value": "[variables('secrets').sourceKeyVaultSubscriptionId]"
          },
          "destKeyVaultName": {
            "value": "[reference('keyVaultModule').outputs.name.value]"
          },
          "secretPrefix": {
            "value": "dialogporten--any--"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "44147448919080552"
            }
          },
          "parameters": {
            "srcKeyVaultKeys": {
              "type": "array"
            },
            "srcKeyVaultName": {
              "type": "string"
            },
            "srcKeyVaultRGNName": {
              "type": "string",
              "defaultValue": "[resourceGroup().name]"
            },
            "srcKeyVaultSubId": {
              "type": "string",
              "defaultValue": "[subscription().subscriptionId]"
            },
            "destKeyVaultName": {
              "type": "string"
            },
            "destKeyVaultRGName": {
              "type": "string",
              "defaultValue": "[resourceGroup().name]"
            },
            "destKeyVaultSubId": {
              "type": "string",
              "defaultValue": "[subscription().subscriptionId]"
            },
            "secretPrefix": {
              "type": "string"
            },
            "removeSecretPrefix": {
              "type": "bool",
              "defaultValue": true
            }
          },
          "variables": {
            "copy": [
              {
                "name": "environmentKeys",
                "count": "[length(parameters('srcKeyVaultKeys'))]",
                "input": {
                  "isEnvironmentKey": "[startsWith(parameters('srcKeyVaultKeys')[copyIndex('environmentKeys')], parameters('secretPrefix'))]",
                  "value": "[if(parameters('removeSecretPrefix'), replace(parameters('srcKeyVaultKeys')[copyIndex('environmentKeys')], parameters('secretPrefix'), ''), parameters('srcKeyVaultKeys')[copyIndex('environmentKeys')])]",
                  "fullName": "[parameters('srcKeyVaultKeys')[copyIndex('environmentKeys')]]"
                }
              }
            ]
          },
          "resources": [
            {
              "copy": {
                "name": "secrets",
                "count": "[length(variables('environmentKeys'))]"
              },
              "condition": "[variables('environmentKeys')[copyIndex()].isEnvironmentKey]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[variables('environmentKeys')[copyIndex()].value]",
              "subscriptionId": "[parameters('destKeyVaultSubId')]",
              "resourceGroup": "[parameters('destKeyVaultRGName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "destKeyVaultName": {
                    "value": "[parameters('destKeyVaultName')]"
                  },
                  "secretName": {
                    "value": "[variables('environmentKeys')[copyIndex()].value]"
                  },
                  "secretValue": {
                    "reference": {
                      "keyVault": {
                        "id": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('srcKeyVaultSubId'), parameters('srcKeyVaultRGNName')), 'Microsoft.KeyVault/vaults', parameters('srcKeyVaultName'))]"
                      },
                      "secretName": "[variables('environmentKeys')[copyIndex()].fullName]"
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.25.53.49325",
                      "templateHash": "4960712788860156215"
                    }
                  },
                  "parameters": {
                    "destKeyVaultName": {
                      "type": "string"
                    },
                    "secretName": {
                      "type": "string"
                    },
                    "secretValue": {
                      "type": "securestring"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2023-07-01",
                      "name": "[format('{0}/{1}', parameters('destKeyVaultName'), parameters('secretName'))]",
                      "properties": {
                        "value": "[parameters('secretValue')]"
                      }
                    }
                  ],
                  "outputs": {
                    "secretUri": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', split(format('{0}/{1}', parameters('destKeyVaultName'), parameters('secretName')), '/')[0], split(format('{0}/{1}', parameters('destKeyVaultName'), parameters('secretName')), '/')[1]), '2023-07-01').secretUri]"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "keyVaultModule",
        "resourceGroup"
      ]
    },
    "slackNotifier": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "slackNotifier",
      "resourceGroup": "[format('{0}-rg', variables('namePrefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "keyVaultName": {
            "value": "[reference('keyVaultModule').outputs.name.value]"
          },
          "namePrefix": {
            "value": "[variables('namePrefix')]"
          },
          "applicationInsightsName": {
            "value": "[reference('appInsights').outputs.appInsightsName.value]"
          },
          "sku": {
            "value": "[parameters('slackNotifierSku')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "14801988153889955025"
            }
          },
          "definitions": {
            "Sku": {
              "type": "object",
              "properties": {
                "storageAccountName": {
                  "type": "string",
                  "allowedValues": [
                    "Premium_LRS",
                    "Premium_ZRS",
                    "Standard_GRS",
                    "Standard_LRS",
                    "Standard_RAGRS",
                    "Standard_ZRS"
                  ]
                },
                "applicationServicePlanName": {
                  "type": "string",
                  "allowedValues": [
                    "B1",
                    "B2",
                    "B3",
                    "D1",
                    "F1",
                    "I1",
                    "I2",
                    "I3",
                    "P1",
                    "P1V2",
                    "P2",
                    "P2V2",
                    "P3",
                    "P3V2",
                    "S1",
                    "S2",
                    "S3",
                    "Y1",
                    "Y1v2",
                    "Y1v2Isolated",
                    "Y2",
                    "Y2v2",
                    "Y2v2Isolated",
                    "Y3",
                    "Y3v2",
                    "Y3v2Isolated"
                  ]
                },
                "applicationServicePlanTier": {
                  "type": "string",
                  "allowedValues": [
                    "Basic",
                    "Dynamic",
                    "Free",
                    "Isolated",
                    "Premium",
                    "Shared",
                    "Standard"
                  ]
                }
              },
              "metadata": {
                "__bicep_export!": true
              }
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "applicationInsightsName": {
              "type": "string"
            },
            "namePrefix": {
              "type": "string"
            },
            "keyVaultName": {
              "type": "string"
            },
            "sku": {
              "$ref": "#/definitions/Sku"
            }
          },
          "variables": {
            "storageAccountName": "[format('{0}{1}sa', replace(parameters('namePrefix'), '-', ''), substring('slacknotifier', 0, 10))]",
            "functionAppName": "[format('{0}-slacknotifier-fa', parameters('namePrefix'))]"
          },
          "resources": {
            "storageAccount": {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2023-01-01",
              "name": "[variables('storageAccountName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('sku').storageAccountName]"
              },
              "kind": "Storage",
              "properties": {
                "supportsHttpsTrafficOnly": true,
                "defaultToOAuthAuthentication": true
              }
            },
            "applicationServicePlan": {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}-slacknotifier-asp', parameters('namePrefix'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('sku').applicationServicePlanName]",
                "tier": "[parameters('sku').applicationServicePlanTier]"
              },
              "properties": {}
            },
            "applicationInsights": {
              "existing": true,
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[parameters('applicationInsightsName')]"
            },
            "functionApp": {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2023-01-01",
              "name": "[variables('functionAppName')]",
              "location": "[parameters('location')]",
              "kind": "functionapp",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-slacknotifier-asp', parameters('namePrefix')))]",
                "publicNetworkAccess": "Enabled",
                "siteConfig": {},
                "httpsOnly": true
              },
              "dependsOn": [
                "applicationServicePlan"
              ]
            },
            "notifyDevTeam": {
              "type": "Microsoft.Insights/actionGroups",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}-notify-devteam-ag', parameters('namePrefix'))]",
              "location": "Global",
              "properties": {
                "enabled": true,
                "groupShortName": "DevNotify",
                "azureFunctionReceivers": [
                  {
                    "name": "[reference('functionApp').defaultHostName]",
                    "functionName": "ForwardAlertToSlack",
                    "functionAppResourceId": "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
                    "httpTriggerUrl": "[format('https://{0}/api/forwardalerttoslack?code={1}', reference('functionApp').defaultHostName, listkeys(format('{0}/host/default', resourceId('Microsoft.Web/sites', variables('functionAppName'))), '2023-01-01').functionKeys.default)]",
                    "useCommonAlertSchema": true
                  }
                ]
              },
              "dependsOn": [
                "functionApp"
              ]
            },
            "exceptionOccuredAlertRule": {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "apiVersion": "2023-03-15-preview",
              "name": "[format('{0}-exception-occured-sqr', parameters('namePrefix'))]",
              "location": "[parameters('location')]",
              "properties": {
                "enabled": true,
                "severity": 1,
                "evaluationFrequency": "PT5M",
                "windowSize": "PT5M",
                "scopes": [
                  "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]"
                ],
                "autoMitigate": false,
                "targetResourceTypes": [
                  "microsoft.insights/components"
                ],
                "criteria": {
                  "allOf": [
                    {
                      "query": "exceptions | summarize count = count() by environment = tostring(customDimensions.AspNetCoreEnvironment), problemId",
                      "operator": "GreaterThan",
                      "threshold": 0,
                      "timeAggregation": "Count",
                      "failingPeriods": {
                        "numberOfEvaluationPeriods": 1,
                        "minFailingPeriodsToAlert": 1
                      }
                    }
                  ]
                },
                "actions": {
                  "actionGroups": [
                    "[resourceId('Microsoft.Insights/actionGroups', format('{0}-notify-devteam-ag', parameters('namePrefix')))]"
                  ]
                }
              },
              "dependsOn": [
                "applicationInsights",
                "notifyDevTeam"
              ]
            },
            "updateAppSettings": {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-appsettings', variables('functionAppName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "webAppName": {
                    "value": "[variables('functionAppName')]"
                  },
                  "currentAppSettings": {
                    "value": "[list(resourceId('Microsoft.Web/sites/config', variables('functionAppName'), 'appsettings'), '2023-01-01').properties]"
                  },
                  "appSettings": {
                    "value": {
                      "AzureWebJobsStorage": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2023-01-01').keys[0].value)]",
                      "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2023-01-01').keys[0].value)]",
                      "WEBSITE_CONTENTSHARE": "[toLower(variables('functionAppName'))]",
                      "FUNCTIONS_EXTENSION_VERSION": "~4",
                      "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference('applicationInsights').InstrumentationKey]",
                      "Slack__WebhookUrl": "[format('@Microsoft.KeyVault(VaultName={0};SecretName=Slack--Webhook--Url)', parameters('keyVaultName'))]",
                      "FUNCTIONS_WORKER_RUNTIME": "dotnet-isolated"
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.25.53.49325",
                      "templateHash": "10763973054038990940"
                    }
                  },
                  "parameters": {
                    "webAppName": {
                      "type": "string"
                    },
                    "appSettings": {
                      "type": "object"
                    },
                    "currentAppSettings": {
                      "type": "object"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Web/sites/config",
                      "apiVersion": "2023-01-01",
                      "name": "[format('{0}/{1}', parameters('webAppName'), 'appsettings')]",
                      "properties": "[union(parameters('currentAppSettings'), parameters('appSettings'))]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "applicationInsights",
                "storageAccount"
              ]
            }
          },
          "outputs": {
            "functionAppPrincipalId": {
              "type": "string",
              "value": "[reference('functionApp', '2023-01-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "appInsights",
        "keyVaultModule",
        "resourceGroup"
      ]
    },
    "containerAppEnv": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "containerAppEnv",
      "resourceGroup": "[format('{0}-rg', variables('namePrefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "namePrefix": {
            "value": "[variables('namePrefix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "appInsightWorkspaceName": {
            "value": "[reference('appInsights').outputs.appInsightsWorkspaceName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "10299501857515385890"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "namePrefix": {
              "type": "string"
            },
            "appInsightWorkspaceName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.App/managedEnvironments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}-cae', parameters('namePrefix'))]",
              "location": "[parameters('location')]",
              "properties": {
                "appLogsConfiguration": {
                  "destination": "log-analytics",
                  "logAnalyticsConfiguration": {
                    "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('appInsightWorkspaceName')), '2022-10-01').customerId]",
                    "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', parameters('appInsightWorkspaceName')), '2022-10-01').primarySharedKey]"
                  }
                }
              }
            }
          ],
          "outputs": {
            "containerAppEnvId": {
              "type": "string",
              "value": "[resourceId('Microsoft.App/managedEnvironments', format('{0}-cae', parameters('namePrefix')))]"
            }
          }
        }
      },
      "dependsOn": [
        "appInsights",
        "resourceGroup"
      ]
    },
    "appInsightsReaderAccessPolicy": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "appInsightsReaderAccessPolicy",
      "resourceGroup": "[format('{0}-rg', variables('namePrefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appInsightsName": {
            "value": "[reference('appInsights').outputs.appInsightsName.value]"
          },
          "principalIds": {
            "value": [
              "[reference('slackNotifier').outputs.functionAppPrincipalId.value]"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "17437758389307278342"
            }
          },
          "parameters": {
            "appInsightsName": {
              "type": "string"
            },
            "principalIds": {
              "type": "array"
            }
          },
          "resources": [
            {
              "copy": {
                "name": "roleAssignments",
                "count": "[length(parameters('principalIds'))]"
              },
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Insights/components/{0}', parameters('appInsightsName'))]",
              "name": "[guid(subscription().id, parameters('principalIds')[copyIndex()], subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7'))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
                "principalId": "[parameters('principalIds')[copyIndex()]]",
                "principalType": "ServicePrincipal"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "appInsights",
        "resourceGroup",
        "slackNotifier"
      ]
    },
    "appConfigConfigurations": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "AppConfig_Add_DialogDbConnectionString",
      "resourceGroup": "[format('{0}-rg', variables('namePrefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "configStoreName": {
            "value": "[reference('appConfiguration').outputs.name.value]"
          },
          "key": {
            "value": "Infrastructure:DialogDbConnectionString"
          },
          "value": {
            "value": "[reference('postgresql').outputs.adoConnectionStringSecretUri.value]"
          },
          "keyValueType": {
            "value": "keyVaultReference"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "12264379860409378346"
            }
          },
          "parameters": {
            "configStoreName": {
              "type": "string",
              "metadata": {
                "description": "Specifies the name of the App Configuration store."
              }
            },
            "key": {
              "type": "string",
              "metadata": {
                "description": "Specifies the names of the key-value resources. The name is a combination of key and label with $ as delimiter. The label is optional."
              }
            },
            "value": {
              "type": "string",
              "metadata": {
                "description": "Specifies the values of the key-value resources"
              }
            },
            "contentType": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Specifies the content type of the key-value resources. For feature flag set keyValueType=featureFlag. For Key Value reference set keyValueType=featureFlag. Otherwise, it's optional."
              }
            },
            "keyValueType": {
              "type": "string",
              "defaultValue": "custom",
              "allowedValues": [
                "keyVaultReference",
                "featureFlag",
                "custom"
              ],
              "metadata": {
                "description": "Specifies the type of the key-value resources"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Adds tags for the key-value resources"
              }
            }
          },
          "variables": {
            "parsedContentType": "[if(equals(parameters('keyValueType'), 'keyVaultReference'), 'application/vnd.microsoft.appconfig.keyvaultref+json;charset=utf-8', if(equals(parameters('keyValueType'), 'featureFlag'), 'application/vnd.microsoft.appconfig.ff+json;charset=utf-8', parameters('contentType')))]",
            "parsedValue": "[if(equals(parameters('keyValueType'), 'keyVaultReference'), format('{{\"uri\":\"{0}\"}}', parameters('value')), parameters('value'))]"
          },
          "resources": [
            {
              "type": "Microsoft.AppConfiguration/configurationStores/keyValues",
              "apiVersion": "2023-03-01",
              "name": "[format('{0}/{1}', parameters('configStoreName'), parameters('key'))]",
              "properties": {
                "value": "[variables('parsedValue')]",
                "contentType": "[variables('parsedContentType')]",
                "tags": "[parameters('tags')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "appConfiguration",
        "postgresql",
        "resourceGroup"
      ]
    },
    "keyVaultReaderAccessPolicy": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "keyVaultReaderAccessPolicyFunctions",
      "resourceGroup": "[format('{0}-rg', variables('namePrefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyvaultName": {
            "value": "[reference('keyVaultModule').outputs.name.value]"
          },
          "principalIds": {
            "value": [
              "[reference('slackNotifier').outputs.functionAppPrincipalId.value]"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "8309515987304945736"
            }
          },
          "parameters": {
            "keyvaultName": {
              "type": "string"
            },
            "principalIds": {
              "type": "array"
            }
          },
          "variables": {
            "copy": [
              {
                "name": "readerAccessPoliciesArray",
                "count": "[length(parameters('principalIds'))]",
                "input": {
                  "objectId": "[parameters('principalIds')[copyIndex('readerAccessPoliciesArray')]]",
                  "tenantId": "[subscription().tenantId]",
                  "permissions": {
                    "certificates": [
                      "get",
                      "list"
                    ],
                    "keys": [
                      "get",
                      "list"
                    ],
                    "secrets": [
                      "get",
                      "list"
                    ]
                  }
                }
              }
            ]
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults/accessPolicies",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', parameters('keyvaultName'), 'add')]",
              "properties": {
                "accessPolicies": "[variables('readerAccessPoliciesArray')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "keyVaultModule",
        "resourceGroup",
        "slackNotifier"
      ]
    }
  },
  "outputs": {
    "resourceGroupName": {
      "type": "string",
      "value": "[format('{0}-rg', variables('namePrefix'))]"
    },
    "containerAppEnvId": {
      "type": "string",
      "value": "[reference('containerAppEnv').outputs.containerAppEnvId.value]"
    },
    "environmentKeyVaultName": {
      "type": "string",
      "value": "[reference('keyVaultModule').outputs.name.value]"
    }
  }
}