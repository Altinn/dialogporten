name: "Check for file changes"

on:
  workflow_call:
#    inputs:
#      infra_base_sha:
#        description: "Base SHA for infrastructure changes"
#        required: false
#        default: ''
#        type: string
#      apps_base_sha:
#        description: "Base SHA for application changes"
#        required: false
#        default: ''
#        type: string
    outputs:
      hasInfraChanges:
        description: "Infrastructure related files changed"
        value: ${{ jobs.check-for-changes.outputs.hasInfraChanges }}
      hasBackendChanges:
        description: "Backend related files changed"
        value: ${{ jobs.check-for-changes.outputs.hasBackendChanges }}
      hasWebApiClientChanges:
        description: "WebApiClient related files changed"
        value: ${{ jobs.check-for-changes.outputs.hasWebApiClientChanges }}
      hasTestChanges:
        description: "Test related files changed"
        value: ${{ jobs.check-for-changes.outputs.hasTestChanges }}
      hasSlackNotifierChanges:
        description: "Slack Notifier function related files changed"
        value: ${{ jobs.check-for-changes.outputs.hasSlackNotifierChanges }}
      hasSwaggerSchemaChanges:
        description: "Swagger schema has changed"
        value: ${{ jobs.check-for-changes.outputs.hasSwaggerSchemaChanges }}
      hasGqlSchemaChanges:
        description: "GraphQL schema has changed"
        value: ${{ jobs.check-for-changes.outputs.hasGqlSchemaChanges }}
      hasMigrationChanges:
        description: "Migration related files changed"
        value: ${{ jobs.check-for-changes.outputs.hasMigrationChanges }}

jobs:
  check-for-changes:
    name: Filter
    runs-on: ubuntu-latest
    outputs:
      hasInfraChanges: ${{ steps.check-changes.outputs.hasInfraChanges == 'true' }}
      hasSlackNotifierChanges: ${{ steps.check-changes.outputs.hasSlackNotifierChanges == 'true' }}
      hasBackendChanges: ${{ steps.check-changes.outputs.hasBackendChanges == 'true' }}
      hasTestChanges: ${{ steps.check-changes.outputs.hasTestChanges == 'true' }}
      hasSwaggerSchemaChanges: ${{ steps.check-changes.outputs.hasSwaggerSchemaChanges == 'true' }}
      hasGqlSchemaChanges: ${{ steps.check-changes.outputs.hasGqlSchemaChanges == 'true' }}
      hasMigrationChanges: ${{ steps.check-changes.outputs.hasMigrationChanges == 'true' }}
      hasWebApiClientChanges: ${{ steps.check-changes.outputs.hasWebApiClientChanges == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for file changes
        id: check-changes
        run: |
          set_output() {
            echo "$1=$2" >> "$GITHUB_ENV"
            echo "$1=$2" >> "$GITHUB_OUTPUT"
          }

#          BASE_SHA="${{ inputs.infra_base_sha || inputs.apps_base_sha }}"
          if [ -z "$BASE_SHA" ]; then
            BASE_SHA=$(git rev-parse origin/main)
          fi

          CHANGED_FILES=$(git diff --name-only "$BASE_SHA" HEAD)

          check_changes() {
            local pattern="$1"
            local output_var="$2"
            if echo "$CHANGED_FILES" | grep -E "$pattern" > /dev/null; then
              set_output "$output_var" "true"
            else
              set_output "$output_var" "false"
            fi
          }

          check_changes "^.github/|^.azure/infrastructure/|^.azure/modules/" "hasInfraChanges"
          check_changes "^.github/|^src/Digdir.Tool.Dialogporten.SlackNotifier/" "hasSlackNotifierChanges"
          check_changes "^.github/|^src/|^.azure/applications/|^.azure/modules/containerApp/" "hasBackendChanges"
          check_changes "^tests/" "hasTestChanges"
          check_changes "^src/Digdir.Library.Dialogporten.WebApiClient/" "hasWebApiClientChanges"
          check_changes "^docs/schema/V1/swagger.verified.json" "hasSwaggerSchemaChanges"
          check_changes "^docs/schema/V1/schema.verified.graphql" "hasGqlSchemaChanges"
          check_changes "^src/Digdir.Domain.Dialogporten.Infrastructure/Persistence/Migrations/" "hasMigrationChanges"
