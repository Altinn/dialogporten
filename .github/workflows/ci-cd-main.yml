name: CI/CD Main

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths-ignore:
      - "tests/k6/**" # ignore changes to k6 tests
      - "CHANGELOG.md" # ignore changes to changelog. This will effectively skip the workflow if a release is made

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}

jobs:
  release-please:
    name: Release please
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: simple

  generate-git-short-sha:
    name: Generate git short sha
    uses: ./.github/workflows/action-generate-git-short-sha.yml
  
  # might use previous tag as a version instead of the current version in file
  # https://github.com/WyriHaximus/github-action-get-previous-tag
  get-current-version:
    name: Get current version
    runs-on: ubuntu-latest
    needs: [generate-git-short-sha]
    outputs:
      # todo: use something else to increment instead of sha? Sha should be good enough for now
      version: ${{ steps.set-current-version.outputs.version }}-${{ needs.generate-git-short-sha.outputs.gitShortSha }}
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v4
      # Current workaround to create a short git sha. Not supported as a global variable yet. https://stackoverflow.com/questions/59810838/how-to-get-the-short-sha-for-the-github-workflow
      - name: Set current version
        id: set-current-version
        run: echo "version=$(cat version.txt)" >> $GITHUB_OUTPUT

  check-for-changes:
    name: Check for changes
    uses: ./.github/workflows/action-check-for-changes.yml

  build-and-test:
    name: Build and test backend
    uses: ./.github/workflows/action-build-and-test.yml
    needs: [check-for-changes]
    if: ${{ needs.check-for-changes.outputs.hasBackendChanges == 'true' }}

  publish:
    name: Build and publish docker images
    uses: ./.github/workflows/action-publish.yml
    needs: [get-current-version, check-for-changes, build-and-test]
    if: ${{ always() && !failure() && !cancelled() && needs.check-for-changes.outputs.hasBackendChanges == 'true' }}
    secrets:
      GCR_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
    with:
      dockerImageBaseName: ghcr.io/digdir/dialogporten-
      version: ${{ needs.get-current-version.outputs.version }}

  deploy-infra-test:
    name: Deploy infra to test
    needs: [get-current-version, check-for-changes, publish]
    if: ${{ always() && !failure() && !cancelled() && needs.check-for-changes.outputs.hasAzureChanges == 'true' }}
    uses: ./.github/workflows/action-deploy-infra.yml
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_SOURCE_KEY_VAULT_NAME: ${{ secrets.AZURE_SOURCE_KEY_VAULT_NAME }}
      AZURE_SOURCE_KEY_VAULT_SUBSCRIPTION_ID: ${{ secrets.AZURE_SOURCE_KEY_VAULT_SUBSCRIPTION_ID }}
      AZURE_SOURCE_KEY_VAULT_RESOURCE_GROUP: ${{ secrets.AZURE_SOURCE_KEY_VAULT_RESOURCE_GROUP }}
    with:
      environment: test
      region: norwayeast
      version: ${{ needs.get-current-version.outputs.version }}

  deploy-apps-test:
    name: Deploy apps to test
    needs: [get-current-version, check-for-changes, deploy-infra-test]
    if: ${{ always() && !failure() && !cancelled() && needs.check-for-changes.outputs.hasBackendChanges == 'true' }}
    uses: ./.github/workflows/action-deploy-apps.yml
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      # todo: consider resolving these in another way since they are created in the infra-step
      AZURE_RESOURCE_GROUP_NAME: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
      AZURE_ADO_CONNECTION_STRING_SECRET_URI: ${{ secrets.AZURE_ADO_CONNECTION_STRING_SECRET_URI }}
      AZURE_ENVIRONMENT_KEY_VAULT_NAME: ${{ secrets.AZURE_ENVIRONMENT_KEY_VAULT_NAME }}
      AZURE_CONTAINER_APP_ENVIRONMENT_NAME: ${{ secrets.AZURE_CONTAINER_APP_ENVIRONMENT_NAME }}
      AZURE_APP_INSIGHTS_CONNECTION_STRING: ${{ secrets.AZURE_APP_INSIGHTS_CONNECTION_STRING }}
      AZURE_APP_CONFIGURATION_NAME: ${{ secrets.AZURE_APP_CONFIGURATION_NAME }}
    with:
      environment: test
      region: norwayeast
      version: ${{ needs.get-current-version.outputs.version }}

  deploy-slack-notifier-test:
    name: Deploy slack notifier (test)
    needs: [check-for-changes, deploy-apps-test]
    if: ${{ always() && !failure() && !cancelled() && needs.check-for-changes.outputs.hasSlackNotifierChanges == 'true' }}
    uses: ./.github/workflows/action-deploy-function.yml
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    with:
      function-app-name: "dp-be-test-slacknotifier-fa"
      function-project-path: "./src/Digdir.Tool.Dialogporten.SlackNotifier"
      environment: test
