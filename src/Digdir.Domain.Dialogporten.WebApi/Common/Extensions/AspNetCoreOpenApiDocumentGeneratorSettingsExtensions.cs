using Digdir.Domain.Dialogporten.WebApi.Common.Json;
using NSwag.Generation.AspNetCore;

namespace Digdir.Domain.Dialogporten.WebApi.Common.Extensions;

internal static class AspNetCoreOpenApiDocumentGeneratorSettingsExtensions
{
    public static AspNetCoreOpenApiDocumentGeneratorSettings CleanupPaginatedLists(
        this AspNetCoreOpenApiDocumentGeneratorSettings settings)
    {
        settings.OperationProcessors.Add(new PaginatedListParametersProcessor());

        // These schemas are generated by NSwag, but are not referenced by anuthung since
        // PaginatedListParametersProcessor change the types for ContinuationToken
        // and OrderBy. Should look into a more typed approach here instead of these magic
        // strings (maybe use ExcludedTypes)
        var schemasToRemove = new[]
        {
            "ContinuationTokenSetOfListDialogQueryOrderDefinitionAndListDialogDto",
            "ContinuationTokenSetOfListDialogQueryOrderDefinitionAndListDialogDto2",
            "OrderSetOfListDialogQueryOrderDefinitionAndListDialogDto",
            "OrderSetOfListDialogQueryOrderDefinitionAndListDialogDto2",
            "OrderOfListDialogDto",
            "OrderOfListDialogDto2",
        };

        settings.PostProcess = doc =>
        {
            foreach (var schema in schemasToRemove)
            {
                doc.Definitions.Remove(schema);
            }
        };

        return settings;
    }

    public static AspNetCoreOpenApiDocumentGeneratorSettings AddServiceOwnerSuffixToSchemas(
        this AspNetCoreOpenApiDocumentGeneratorSettings settings)
    {
        settings.SchemaNameGenerator = new SuffixedSchemaNameGenerator();

        return settings;
    }
}
