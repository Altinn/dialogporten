{
  "components": {
    "schemas": {
      "ActorType_Values": {
        "description": "",
        "enum": [
          "PartyRepresentative",
          "ServiceOwner"
        ],
        "type": "string",
        "x-enumNames": [
          "PartyRepresentative",
          "ServiceOwner"
        ]
      },
      "AttachmentUrlConsumerType_Values": {
        "description": "",
        "enum": [
          "Gui",
          "Api"
        ],
        "type": "string",
        "x-enumNames": [
          "Gui",
          "Api"
        ]
      },
      "AuthorizedPartyDto": {
        "additionalProperties": false,
        "properties": {
          "hasKeyRole": {
            "type": "boolean"
          },
          "hasOnlyAccessToSubParties": {
            "type": "boolean"
          },
          "isAccessManager": {
            "type": "boolean"
          },
          "isCurrentEndUser": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isMainAdministrator": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "party": {
            "type": "string"
          },
          "partyType": {
            "type": "string"
          },
          "subParties": {
            "items": {
              "$ref": "#/components/schemas/AuthorizedPartyDto"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ContentValueDto": {
        "additionalProperties": false,
        "properties": {
          "mediaType": {
            "type": "string"
          },
          "value": {
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ContinuationTokenSetOfTOrderDefinitionAndTTarget": {},
      "CreateDialogActivityRequest": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            },
            "type": "array"
          },
          "extendedType": {
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "performedBy": {
            "$ref": "#/components/schemas/UpdateDialogDialogActivityPerformedByActorDto"
          },
          "relatedActivityId": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "transmissionId": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/DialogActivityType_Values"
          }
        },
        "type": "object"
      },
      "CreateDialogCommand": {
        "additionalProperties": false,
        "properties": {
          "activities": {
            "items": {
              "$ref": "#/components/schemas/CreateDialogDialogActivityDto"
            },
            "type": "array"
          },
          "apiActions": {
            "items": {
              "$ref": "#/components/schemas/CreateDialogDialogApiActionDto"
            },
            "type": "array"
          },
          "attachments": {
            "items": {
              "$ref": "#/components/schemas/CreateDialogDialogAttachmentDto"
            },
            "type": "array"
          },
          "content": {
            "$ref": "#/components/schemas/CreateDialogContentDto"
          },
          "dueAt": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "expiresAt": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "extendedStatus": {
            "nullable": true,
            "type": "string"
          },
          "externalReference": {
            "nullable": true,
            "type": "string"
          },
          "guiActions": {
            "items": {
              "$ref": "#/components/schemas/CreateDialogDialogGuiActionDto"
            },
            "type": "array"
          },
          "id": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "party": {
            "type": "string"
          },
          "progress": {
            "format": "int32",
            "nullable": true,
            "type": "integer"
          },
          "searchTags": {
            "items": {
              "$ref": "#/components/schemas/CreateDialogSearchTagDto"
            },
            "type": "array"
          },
          "serviceResource": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/DialogStatus_Values"
          },
          "transmissions": {
            "items": {
              "$ref": "#/components/schemas/CreateDialogDialogTransmissionDto"
            },
            "type": "array"
          },
          "visibleFrom": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateDialogContentDto": {
        "additionalProperties": false,
        "properties": {
          "additionalInfo": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContentValueDto"
              }
            ]
          },
          "extendedStatus": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContentValueDto"
              }
            ]
          },
          "mainContentReference": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContentValueDto"
              }
            ]
          },
          "senderName": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContentValueDto"
              }
            ]
          },
          "summary": {
            "$ref": "#/components/schemas/ContentValueDto"
          },
          "title": {
            "$ref": "#/components/schemas/ContentValueDto"
          }
        },
        "type": "object"
      },
      "CreateDialogDialogActivityDto": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            },
            "type": "array"
          },
          "extendedType": {
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "performedBy": {
            "$ref": "#/components/schemas/CreateDialogDialogActivityPerformedByActorDto"
          },
          "relatedActivityId": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "transmissionId": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/DialogActivityType_Values"
          }
        },
        "type": "object"
      },
      "CreateDialogDialogActivityPerformedByActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "nullable": true,
            "type": "string"
          },
          "actorName": {
            "nullable": true,
            "type": "string"
          },
          "actorType": {
            "$ref": "#/components/schemas/ActorType_Values"
          }
        },
        "type": "object"
      },
      "CreateDialogDialogApiActionDto": {
        "additionalProperties": false,
        "properties": {
          "action": {
            "type": "string"
          },
          "authorizationAttribute": {
            "nullable": true,
            "type": "string"
          },
          "endpoints": {
            "items": {
              "$ref": "#/components/schemas/CreateDialogDialogApiActionEndpointDto"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CreateDialogDialogApiActionEndpointDto": {
        "additionalProperties": false,
        "properties": {
          "deprecated": {
            "type": "boolean"
          },
          "documentationUrl": {
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "httpMethod": {
            "$ref": "#/components/schemas/HttpVerb_Values"
          },
          "requestSchema": {
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "responseSchema": {
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "sunsetAt": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          },
          "version": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateDialogDialogAttachmentDto": {
        "additionalProperties": false,
        "properties": {
          "displayName": {
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            },
            "type": "array"
          },
          "id": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "urls": {
            "items": {
              "$ref": "#/components/schemas/CreateDialogDialogAttachmentUrlDto"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CreateDialogDialogAttachmentUrlDto": {
        "additionalProperties": false,
        "properties": {
          "consumerType": {
            "$ref": "#/components/schemas/AttachmentUrlConsumerType_Values"
          },
          "mediaType": {
            "nullable": true,
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateDialogDialogGuiActionDto": {
        "additionalProperties": false,
        "properties": {
          "action": {
            "type": "string"
          },
          "authorizationAttribute": {
            "nullable": true,
            "type": "string"
          },
          "httpMethod": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/HttpVerb_Values"
              }
            ]
          },
          "isDeleteDialogAction": {
            "type": "boolean"
          },
          "priority": {
            "$ref": "#/components/schemas/DialogGuiActionPriority_Values"
          },
          "prompt": {
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            },
            "nullable": true,
            "type": "array"
          },
          "title": {
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            },
            "type": "array"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateDialogDialogTransmissionContentDto": {
        "additionalProperties": false,
        "properties": {
          "summary": {
            "$ref": "#/components/schemas/ContentValueDto"
          },
          "title": {
            "$ref": "#/components/schemas/ContentValueDto"
          }
        },
        "type": "object"
      },
      "CreateDialogDialogTransmissionDto": {
        "additionalProperties": false,
        "properties": {
          "attachments": {
            "items": {
              "$ref": "#/components/schemas/CreateDialogTransmissionAttachmentDto"
            },
            "type": "array"
          },
          "authorizationAttribute": {
            "nullable": true,
            "type": "string"
          },
          "content": {
            "$ref": "#/components/schemas/CreateDialogDialogTransmissionContentDto"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "extendedType": {
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "relatedTransmissionId": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "sender": {
            "$ref": "#/components/schemas/CreateDialogDialogTransmissionSenderActorDto"
          },
          "type": {
            "$ref": "#/components/schemas/DialogTransmissionType_Values"
          }
        },
        "type": "object"
      },
      "CreateDialogDialogTransmissionSenderActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "type": "string"
          },
          "actorName": {
            "type": "string"
          },
          "actorType": {
            "$ref": "#/components/schemas/ActorType_Values"
          }
        },
        "type": "object"
      },
      "CreateDialogSearchTagDto": {
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateDialogTransmissionAttachmentDto": {
        "additionalProperties": false,
        "properties": {
          "displayName": {
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            },
            "type": "array"
          },
          "id": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "urls": {
            "items": {
              "$ref": "#/components/schemas/CreateDialogTransmissionAttachmentUrlDto"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CreateDialogTransmissionAttachmentUrlDto": {
        "additionalProperties": false,
        "properties": {
          "consumerType": {
            "$ref": "#/components/schemas/AttachmentUrlConsumerType_Values"
          },
          "mediaType": {
            "nullable": true,
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateDialogTransmissionRequest": {
        "additionalProperties": false,
        "properties": {
          "attachments": {
            "items": {
              "$ref": "#/components/schemas/UpdateDialogTransmissionAttachmentDto"
            },
            "type": "array"
          },
          "authorizationAttribute": {
            "nullable": true,
            "type": "string"
          },
          "content": {
            "$ref": "#/components/schemas/UpdateDialogDialogTransmissionContentDto"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "extendedType": {
            "nullable": true,
            "type": "string"
          },
          "id": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "relatedTransmissionId": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "sender": {
            "$ref": "#/components/schemas/UpdateDialogDialogTransmissionSenderActorDto"
          },
          "type": {
            "$ref": "#/components/schemas/DialogTransmissionType_Values"
          }
        },
        "type": "object"
      },
      "DialogActivityType_Values": {
        "description": "",
        "enum": [
          "DialogCreated",
          "DialogClosed",
          "Information",
          "TransmissionOpened",
          "PaymentMade",
          "SignatureProvided"
        ],
        "type": "string",
        "x-enumNames": [
          "DialogCreated",
          "DialogClosed",
          "Information",
          "TransmissionOpened",
          "PaymentMade",
          "SignatureProvided"
        ]
      },
      "DialogGuiActionPriority_Values": {
        "description": "",
        "enum": [
          "Primary",
          "Secondary",
          "Tertiary"
        ],
        "type": "string",
        "x-enumNames": [
          "Primary",
          "Secondary",
          "Tertiary"
        ]
      },
      "DialogStatus_Values": {
        "description": "",
        "enum": [
          "New",
          "InProgress",
          "Signing",
          "Processing",
          "RequiresAttention",
          "Completed"
        ],
        "type": "string",
        "x-enumNames": [
          "New",
          "InProgress",
          "Signing",
          "Processing",
          "RequiresAttention",
          "Completed"
        ]
      },
      "DialogTransmissionType_Values": {
        "description": "",
        "enum": [
          "Information",
          "Acceptance",
          "Rejection",
          "Request",
          "Alert",
          "Decision",
          "Submission",
          "Correction"
        ],
        "type": "string",
        "x-enumNames": [
          "Information",
          "Acceptance",
          "Rejection",
          "Request",
          "Alert",
          "Decision",
          "Submission",
          "Correction"
        ]
      },
      "GetDialogContentDto": {
        "additionalProperties": false,
        "properties": {
          "additionalInfo": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContentValueDto"
              }
            ]
          },
          "extendedStatus": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContentValueDto"
              }
            ]
          },
          "mainContentReference": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContentValueDto"
              }
            ]
          },
          "senderName": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContentValueDto"
              }
            ]
          },
          "summary": {
            "$ref": "#/components/schemas/ContentValueDto"
          },
          "title": {
            "$ref": "#/components/schemas/ContentValueDto"
          }
        },
        "type": "object"
      },
      "GetDialogContentDtoSO": {
        "additionalProperties": false,
        "properties": {
          "additionalInfo": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContentValueDto"
              }
            ]
          },
          "extendedStatus": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContentValueDto"
              }
            ]
          },
          "mainContentReference": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContentValueDto"
              }
            ]
          },
          "senderName": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContentValueDto"
              }
            ]
          },
          "summary": {
            "$ref": "#/components/schemas/ContentValueDto"
          },
          "title": {
            "$ref": "#/components/schemas/ContentValueDto"
          }
        },
        "type": "object"
      },
      "GetDialogDialogActivityDto": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            },
            "type": "array"
          },
          "extendedType": {
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "format": "guid",
            "type": "string"
          },
          "performedBy": {
            "$ref": "#/components/schemas/GetDialogDialogActivityPerformedByActorDto"
          },
          "relatedActivityId": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "transmissionId": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/DialogActivityType_Values"
          }
        },
        "type": "object"
      },
      "GetDialogDialogActivityDtoSO": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            },
            "type": "array"
          },
          "extendedType": {
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "format": "guid",
            "type": "string"
          },
          "performedBy": {
            "$ref": "#/components/schemas/GetDialogDialogActivityPerformedByActorDtoSO"
          },
          "relatedActivityId": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "transmissionId": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/DialogActivityType_Values"
          }
        },
        "type": "object"
      },
      "GetDialogDialogActivityPerformedByActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "nullable": true,
            "type": "string"
          },
          "actorName": {
            "nullable": true,
            "type": "string"
          },
          "actorType": {
            "$ref": "#/components/schemas/ActorType_Values"
          },
          "id": {
            "format": "guid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetDialogDialogActivityPerformedByActorDtoSO": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "nullable": true,
            "type": "string"
          },
          "actorName": {
            "nullable": true,
            "type": "string"
          },
          "actorType": {
            "$ref": "#/components/schemas/ActorType_Values"
          },
          "id": {
            "format": "guid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetDialogDialogApiActionDto": {
        "additionalProperties": false,
        "properties": {
          "action": {
            "type": "string"
          },
          "authorizationAttribute": {
            "nullable": true,
            "type": "string"
          },
          "endpoints": {
            "items": {
              "$ref": "#/components/schemas/GetDialogDialogApiActionEndpointDto"
            },
            "type": "array"
          },
          "id": {
            "format": "guid",
            "type": "string"
          },
          "isAuthorized": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GetDialogDialogApiActionDtoSO": {
        "additionalProperties": false,
        "properties": {
          "action": {
            "type": "string"
          },
          "authorizationAttribute": {
            "nullable": true,
            "type": "string"
          },
          "endpoints": {
            "items": {
              "$ref": "#/components/schemas/GetDialogDialogApiActionEndpointDtoSO"
            },
            "type": "array"
          },
          "id": {
            "format": "guid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetDialogDialogApiActionEndpointDto": {
        "additionalProperties": false,
        "properties": {
          "deprecated": {
            "type": "boolean"
          },
          "documentationUrl": {
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "httpMethod": {
            "$ref": "#/components/schemas/HttpVerb_Values"
          },
          "id": {
            "format": "guid",
            "type": "string"
          },
          "requestSchema": {
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "responseSchema": {
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "sunsetAt": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          },
          "version": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetDialogDialogApiActionEndpointDtoSO": {
        "additionalProperties": false,
        "properties": {
          "deprecated": {
            "type": "boolean"
          },
          "documentationUrl": {
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "httpMethod": {
            "$ref": "#/components/schemas/HttpVerb_Values"
          },
          "id": {
            "format": "guid",
            "type": "string"
          },
          "requestSchema": {
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "responseSchema": {
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "sunsetAt": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          },
          "version": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetDialogDialogAttachmentDto": {
        "additionalProperties": false,
        "properties": {
          "displayName": {
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            },
            "type": "array"
          },
          "id": {
            "format": "guid",
            "type": "string"
          },
          "urls": {
            "items": {
              "$ref": "#/components/schemas/GetDialogDialogAttachmentUrlDto"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetDialogDialogAttachmentDtoSO": {
        "additionalProperties": false,
        "properties": {
          "displayName": {
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            },
            "type": "array"
          },
          "id": {
            "format": "guid",
            "type": "string"
          },
          "urls": {
            "items": {
              "$ref": "#/components/schemas/GetDialogDialogAttachmentUrlDtoSO"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetDialogDialogAttachmentUrlDto": {
        "additionalProperties": false,
        "properties": {
          "consumerType": {
            "$ref": "#/components/schemas/AttachmentUrlConsumerType_Values"
          },
          "id": {
            "format": "guid",
            "type": "string"
          },
          "mediaType": {
            "nullable": true,
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetDialogDialogAttachmentUrlDtoSO": {
        "additionalProperties": false,
        "properties": {
          "consumerType": {
            "$ref": "#/components/schemas/AttachmentUrlConsumerType_Values"
          },
          "id": {
            "format": "guid",
            "type": "string"
          },
          "mediaType": {
            "nullable": true,
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetDialogDialogGuiActionDto": {
        "additionalProperties": false,
        "properties": {
          "action": {
            "type": "string"
          },
          "authorizationAttribute": {
            "nullable": true,
            "type": "string"
          },
          "httpMethod": {
            "$ref": "#/components/schemas/HttpVerb_Values"
          },
          "id": {
            "format": "guid",
            "type": "string"
          },
          "isAuthorized": {
            "type": "boolean"
          },
          "isDeleteDialogAction": {
            "type": "boolean"
          },
          "priority": {
            "$ref": "#/components/schemas/DialogGuiActionPriority_Values"
          },
          "prompt": {
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            },
            "nullable": true,
            "type": "array"
          },
          "title": {
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            },
            "type": "array"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetDialogDialogGuiActionDtoSO": {
        "additionalProperties": false,
        "properties": {
          "action": {
            "type": "string"
          },
          "authorizationAttribute": {
            "nullable": true,
            "type": "string"
          },
          "httpMethod": {
            "$ref": "#/components/schemas/HttpVerb_Values"
          },
          "id": {
            "format": "guid",
            "type": "string"
          },
          "isDeleteDialogAction": {
            "type": "boolean"
          },
          "priority": {
            "$ref": "#/components/schemas/DialogGuiActionPriority_Values"
          },
          "prompt": {
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            },
            "nullable": true,
            "type": "array"
          },
          "title": {
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            },
            "type": "array"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetDialogDialogSeenLogDto": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "format": "guid",
            "type": "string"
          },
          "isCurrentEndUser": {
            "type": "boolean"
          },
          "isViaServiceOwner": {
            "nullable": true,
            "type": "boolean"
          },
          "seenAt": {
            "format": "date-time",
            "type": "string"
          },
          "seenBy": {
            "$ref": "#/components/schemas/GetDialogDialogSeenLogSeenByActorDto"
          }
        },
        "type": "object"
      },
      "GetDialogDialogSeenLogDtoSO": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "format": "guid",
            "type": "string"
          },
          "isViaServiceOwner": {
            "type": "boolean"
          },
          "seenAt": {
            "format": "date-time",
            "type": "string"
          },
          "seenBy": {
            "$ref": "#/components/schemas/GetDialogDialogSeenLogSeenByActorDtoSO"
          }
        },
        "type": "object"
      },
      "GetDialogDialogSeenLogSeenByActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "type": "string"
          },
          "actorName": {
            "type": "string"
          },
          "id": {
            "format": "guid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetDialogDialogSeenLogSeenByActorDtoSO": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "type": "string"
          },
          "actorName": {
            "type": "string"
          },
          "id": {
            "format": "guid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetDialogDialogTransmissionContentDto": {
        "additionalProperties": false,
        "properties": {
          "summary": {
            "$ref": "#/components/schemas/ContentValueDto"
          },
          "title": {
            "$ref": "#/components/schemas/ContentValueDto"
          }
        },
        "type": "object"
      },
      "GetDialogDialogTransmissionContentDtoSO": {
        "additionalProperties": false,
        "properties": {
          "summary": {
            "$ref": "#/components/schemas/ContentValueDto"
          },
          "title": {
            "$ref": "#/components/schemas/ContentValueDto"
          }
        },
        "type": "object"
      },
      "GetDialogDialogTransmissionDto": {
        "additionalProperties": false,
        "properties": {
          "attachments": {
            "items": {
              "$ref": "#/components/schemas/GetDialogTransmissionAttachmentDto"
            },
            "type": "array"
          },
          "authorizationAttribute": {
            "nullable": true,
            "type": "string"
          },
          "content": {
            "$ref": "#/components/schemas/GetDialogDialogTransmissionContentDto"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "extendedType": {
            "nullable": true,
            "type": "string"
          },
          "id": {
            "format": "guid",
            "type": "string"
          },
          "isAuthorized": {
            "type": "boolean"
          },
          "relatedTransmissionId": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "sender": {
            "$ref": "#/components/schemas/GetDialogDialogTransmissionSenderActorDto"
          },
          "type": {
            "$ref": "#/components/schemas/DialogTransmissionType_Values"
          }
        },
        "type": "object"
      },
      "GetDialogDialogTransmissionDtoSO": {
        "additionalProperties": false,
        "properties": {
          "attachments": {
            "items": {
              "$ref": "#/components/schemas/GetDialogTransmissionAttachmentDtoSO"
            },
            "type": "array"
          },
          "authorizationAttribute": {
            "nullable": true,
            "type": "string"
          },
          "content": {
            "$ref": "#/components/schemas/GetDialogDialogTransmissionContentDtoSO"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "extendedType": {
            "nullable": true,
            "type": "string"
          },
          "id": {
            "format": "guid",
            "type": "string"
          },
          "relatedTransmissionId": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "sender": {
            "$ref": "#/components/schemas/GetDialogDialogTransmissionSenderActorDtoSO"
          },
          "type": {
            "$ref": "#/components/schemas/DialogTransmissionType_Values"
          }
        },
        "type": "object"
      },
      "GetDialogDialogTransmissionSenderActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "type": "string"
          },
          "actorName": {
            "type": "string"
          },
          "actorType": {
            "$ref": "#/components/schemas/ActorType_Values"
          },
          "id": {
            "format": "guid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetDialogDialogTransmissionSenderActorDtoSO": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "type": "string"
          },
          "actorName": {
            "type": "string"
          },
          "actorType": {
            "$ref": "#/components/schemas/ActorType_Values"
          },
          "id": {
            "format": "guid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetDialogDto": {
        "additionalProperties": false,
        "properties": {
          "activities": {
            "items": {
              "$ref": "#/components/schemas/GetDialogDialogActivityDto"
            },
            "type": "array"
          },
          "apiActions": {
            "items": {
              "$ref": "#/components/schemas/GetDialogDialogApiActionDto"
            },
            "type": "array"
          },
          "attachments": {
            "items": {
              "$ref": "#/components/schemas/GetDialogDialogAttachmentDto"
            },
            "type": "array"
          },
          "content": {
            "$ref": "#/components/schemas/GetDialogContentDto"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "dialogToken": {
            "nullable": true,
            "type": "string"
          },
          "dueAt": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "expiresAt": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "extendedStatus": {
            "nullable": true,
            "type": "string"
          },
          "externalReference": {
            "nullable": true,
            "type": "string"
          },
          "guiActions": {
            "items": {
              "$ref": "#/components/schemas/GetDialogDialogGuiActionDto"
            },
            "type": "array"
          },
          "id": {
            "format": "guid",
            "type": "string"
          },
          "org": {
            "type": "string"
          },
          "party": {
            "type": "string"
          },
          "progress": {
            "format": "int32",
            "nullable": true,
            "type": "integer"
          },
          "revision": {
            "format": "guid",
            "type": "string"
          },
          "seenSinceLastUpdate": {
            "items": {
              "$ref": "#/components/schemas/GetDialogDialogSeenLogDto"
            },
            "type": "array"
          },
          "serviceResource": {
            "type": "string"
          },
          "serviceResourceType": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/DialogStatus_Values"
          },
          "transmissions": {
            "items": {
              "$ref": "#/components/schemas/GetDialogDialogTransmissionDto"
            },
            "type": "array"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "visibleFrom": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetDialogDtoSO": {
        "additionalProperties": false,
        "properties": {
          "activities": {
            "items": {
              "$ref": "#/components/schemas/GetDialogDialogActivityDtoSO"
            },
            "type": "array"
          },
          "apiActions": {
            "items": {
              "$ref": "#/components/schemas/GetDialogDialogApiActionDtoSO"
            },
            "type": "array"
          },
          "attachments": {
            "items": {
              "$ref": "#/components/schemas/GetDialogDialogAttachmentDtoSO"
            },
            "type": "array"
          },
          "content": {
            "$ref": "#/components/schemas/GetDialogContentDtoSO"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "dueAt": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "expiresAt": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "extendedStatus": {
            "nullable": true,
            "type": "string"
          },
          "externalReference": {
            "nullable": true,
            "type": "string"
          },
          "guiActions": {
            "items": {
              "$ref": "#/components/schemas/GetDialogDialogGuiActionDtoSO"
            },
            "type": "array"
          },
          "id": {
            "format": "guid",
            "type": "string"
          },
          "org": {
            "type": "string"
          },
          "party": {
            "type": "string"
          },
          "progress": {
            "format": "int32",
            "nullable": true,
            "type": "integer"
          },
          "revision": {
            "format": "guid",
            "type": "string"
          },
          "searchTags": {
            "items": {
              "$ref": "#/components/schemas/GetDialogSearchTagDtoSO"
            },
            "nullable": true,
            "type": "array"
          },
          "seenSinceLastUpdate": {
            "items": {
              "$ref": "#/components/schemas/GetDialogDialogSeenLogDtoSO"
            },
            "type": "array"
          },
          "serviceResource": {
            "type": "string"
          },
          "serviceResourceType": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/DialogStatus_Values"
          },
          "transmissions": {
            "items": {
              "$ref": "#/components/schemas/GetDialogDialogTransmissionDtoSO"
            },
            "type": "array"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "visibleFrom": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetDialogSearchTagDtoSO": {
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetDialogSeenLogDto": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "format": "guid",
            "type": "string"
          },
          "isCurrentEndUser": {
            "type": "boolean"
          },
          "isViaServiceOwner": {
            "type": "boolean"
          },
          "seenAt": {
            "format": "date-time",
            "type": "string"
          },
          "seenBy": {
            "$ref": "#/components/schemas/GetDialogSeenLogSeenByActorDto"
          }
        },
        "type": "object"
      },
      "GetDialogSeenLogDtoSO": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "format": "guid",
            "type": "string"
          },
          "isViaServiceOwner": {
            "nullable": true,
            "type": "boolean"
          },
          "seenAt": {
            "format": "date-time",
            "type": "string"
          },
          "seenBy": {
            "$ref": "#/components/schemas/GetDialogSeenLogSeenByActorDtoSO"
          }
        },
        "type": "object"
      },
      "GetDialogSeenLogSeenByActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "type": "string"
          },
          "actorName": {
            "type": "string"
          },
          "id": {
            "format": "guid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetDialogSeenLogSeenByActorDtoSO": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "type": "string"
          },
          "actorName": {
            "type": "string"
          },
          "id": {
            "format": "guid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetDialogTransmissionAttachmentDto": {
        "additionalProperties": false,
        "properties": {
          "displayName": {
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            },
            "type": "array"
          },
          "id": {
            "format": "guid",
            "type": "string"
          },
          "urls": {
            "items": {
              "$ref": "#/components/schemas/GetDialogTransmissionAttachmentUrlDto"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetDialogTransmissionAttachmentDtoSO": {
        "additionalProperties": false,
        "properties": {
          "displayName": {
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            },
            "type": "array"
          },
          "id": {
            "format": "guid",
            "type": "string"
          },
          "urls": {
            "items": {
              "$ref": "#/components/schemas/GetDialogTransmissionAttachmentUrlDtoSO"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetDialogTransmissionAttachmentUrlDto": {
        "additionalProperties": false,
        "properties": {
          "consumerType": {
            "$ref": "#/components/schemas/AttachmentUrlConsumerType_Values"
          },
          "id": {
            "format": "guid",
            "type": "string"
          },
          "mediaType": {
            "nullable": true,
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetDialogTransmissionAttachmentUrlDtoSO": {
        "additionalProperties": false,
        "properties": {
          "consumerType": {
            "$ref": "#/components/schemas/AttachmentUrlConsumerType_Values"
          },
          "id": {
            "format": "guid",
            "type": "string"
          },
          "mediaType": {
            "nullable": true,
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetJwksDto": {
        "additionalProperties": false,
        "properties": {
          "keys": {
            "items": {
              "$ref": "#/components/schemas/Jwk"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetOauthAuthorizationServerDto": {
        "additionalProperties": false,
        "properties": {
          "issuer": {
            "type": "string"
          },
          "jwks_uri": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetPartiesDto": {
        "additionalProperties": false,
        "properties": {
          "authorizedParties": {
            "items": {
              "$ref": "#/components/schemas/AuthorizedPartyDto"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "HttpVerb_Values": {
        "description": "",
        "enum": [
          "GET",
          "POST",
          "PUT",
          "PATCH",
          "DELETE",
          "HEAD",
          "OPTIONS",
          "TRACE",
          "CONNECT"
        ],
        "type": "string",
        "x-enumNames": [
          "GET",
          "POST",
          "PUT",
          "PATCH",
          "DELETE",
          "HEAD",
          "OPTIONS",
          "TRACE",
          "CONNECT"
        ]
      },
      "Jwk": {
        "additionalProperties": false,
        "properties": {
          "alg": {
            "type": "string"
          },
          "crv": {
            "type": "string"
          },
          "kid": {
            "type": "string"
          },
          "kty": {
            "type": "string"
          },
          "use": {
            "type": "string"
          },
          "x": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "LocalizationDto": {
        "additionalProperties": false,
        "properties": {
          "languageCode": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "NotificationConditionType": {
        "description": "",
        "enum": [
          "NotExists",
          "Exists"
        ],
        "type": "string",
        "x-enumNames": [
          "NotExists",
          "Exists"
        ]
      },
      "Operation": {
        "additionalProperties": false,
        "properties": {
          "from": {
            "nullable": true,
            "type": "string"
          },
          "op": {
            "nullable": true,
            "type": "string"
          },
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "nullable": true,
            "type": "string"
          },
          "value": {
            "nullable": true
          }
        },
        "type": "object"
      },
      "OperationType": {
        "description": "",
        "enum": [
          "Add",
          "Remove",
          "Replace",
          "Move",
          "Copy",
          "Test",
          "Invalid"
        ],
        "type": "string",
        "x-enumNames": [
          "Add",
          "Remove",
          "Replace",
          "Move",
          "Copy",
          "Test",
          "Invalid"
        ]
      },
      "OrderSetOfTOrderDefinitionAndTTarget": {},
      "PaginatedListOfSearchDialogDto": {
        "additionalProperties": false,
        "properties": {
          "continuationToken": {
            "nullable": true,
            "type": "string"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SearchDialogDto"
            },
            "type": "array"
          },
          "orderBy": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaginatedListOfSearchDialogDtoSO": {
        "additionalProperties": false,
        "properties": {
          "continuationToken": {
            "nullable": true,
            "type": "string"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SearchDialogDtoSO"
            },
            "type": "array"
          },
          "orderBy": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProblemDetails": {
        "additionalProperties": false,
        "properties": {
          "detail": {
            "nullable": true,
            "type": "string"
          },
          "errors": {
            "items": {
              "$ref": "#/components/schemas/ProblemDetails_Error"
            },
            "type": "array"
          },
          "instance": {
            "default": "/api/route",
            "type": "string"
          },
          "status": {
            "default": 400,
            "format": "int32",
            "type": "integer"
          },
          "title": {
            "default": "One or more validation errors occurred.",
            "type": "string"
          },
          "traceId": {
            "default": "0HMPNHL0JHL76:00000001",
            "type": "string"
          },
          "type": {
            "default": "https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProblemDetails_Error": {
        "additionalProperties": false,
        "properties": {
          "code": {
            "nullable": true,
            "type": "string"
          },
          "name": {
            "default": "Error or field name",
            "type": "string"
          },
          "reason": {
            "default": "Error reason",
            "type": "string"
          },
          "severity": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SearchDialogContentDto": {
        "additionalProperties": false,
        "properties": {
          "extendedStatus": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContentValueDto"
              }
            ]
          },
          "senderName": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContentValueDto"
              }
            ]
          },
          "summary": {
            "$ref": "#/components/schemas/ContentValueDto"
          },
          "title": {
            "$ref": "#/components/schemas/ContentValueDto"
          }
        },
        "type": "object"
      },
      "SearchDialogContentDtoSO": {
        "additionalProperties": false,
        "properties": {
          "extendedStatus": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContentValueDto"
              }
            ]
          },
          "senderName": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContentValueDto"
              }
            ]
          },
          "summary": {
            "$ref": "#/components/schemas/ContentValueDto"
          },
          "title": {
            "$ref": "#/components/schemas/ContentValueDto"
          }
        },
        "type": "object"
      },
      "SearchDialogDialogActivityDto": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            },
            "type": "array"
          },
          "extendedType": {
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "format": "guid",
            "type": "string"
          },
          "performedBy": {
            "$ref": "#/components/schemas/SearchDialogDialogActivityPerformedByActorDto"
          },
          "relatedActivityId": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "transmissionId": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/DialogActivityType_Values"
          }
        },
        "type": "object"
      },
      "SearchDialogDialogActivityDtoSO": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            },
            "type": "array"
          },
          "extendedType": {
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "format": "guid",
            "type": "string"
          },
          "performedBy": {
            "$ref": "#/components/schemas/SearchDialogDialogActivityPerformedByActorDtoSO"
          },
          "relatedActivityId": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "transmissionId": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/DialogActivityType_Values"
          }
        },
        "type": "object"
      },
      "SearchDialogDialogActivityPerformedByActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "nullable": true,
            "type": "string"
          },
          "actorName": {
            "nullable": true,
            "type": "string"
          },
          "actorType": {
            "$ref": "#/components/schemas/ActorType_Values"
          },
          "id": {
            "format": "guid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SearchDialogDialogActivityPerformedByActorDtoSO": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "nullable": true,
            "type": "string"
          },
          "actorName": {
            "nullable": true,
            "type": "string"
          },
          "actorType": {
            "$ref": "#/components/schemas/ActorType_Values"
          },
          "id": {
            "format": "guid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SearchDialogDialogSeenLogDto": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "format": "guid",
            "type": "string"
          },
          "isCurrentEndUser": {
            "type": "boolean"
          },
          "isViaServiceOwner": {
            "nullable": true,
            "type": "boolean"
          },
          "seenAt": {
            "format": "date-time",
            "type": "string"
          },
          "seenBy": {
            "$ref": "#/components/schemas/SearchDialogDialogSeenLogSeenByActorDto"
          }
        },
        "type": "object"
      },
      "SearchDialogDialogSeenLogDtoSO": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "format": "guid",
            "type": "string"
          },
          "isCurrentEndUser": {
            "type": "boolean"
          },
          "isViaServiceOwner": {
            "nullable": true,
            "type": "boolean"
          },
          "seenAt": {
            "format": "date-time",
            "type": "string"
          },
          "seenBy": {
            "$ref": "#/components/schemas/SearchDialogDialogSeenLogSeenByActorDtoSO"
          }
        },
        "type": "object"
      },
      "SearchDialogDialogSeenLogSeenByActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "type": "string"
          },
          "actorName": {
            "type": "string"
          },
          "id": {
            "format": "guid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SearchDialogDialogSeenLogSeenByActorDtoSO": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "type": "string"
          },
          "actorName": {
            "type": "string"
          },
          "id": {
            "format": "guid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SearchDialogDto": {
        "additionalProperties": false,
        "properties": {
          "content": {
            "$ref": "#/components/schemas/SearchDialogContentDto"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "dueAt": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "extendedStatus": {
            "nullable": true,
            "type": "string"
          },
          "guiAttachmentCount": {
            "format": "int32",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "format": "guid",
            "type": "string"
          },
          "latestActivity": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SearchDialogDialogActivityDto"
              }
            ]
          },
          "org": {
            "type": "string"
          },
          "party": {
            "type": "string"
          },
          "progress": {
            "format": "int32",
            "nullable": true,
            "type": "integer"
          },
          "seenSinceLastUpdate": {
            "items": {
              "$ref": "#/components/schemas/SearchDialogDialogSeenLogDto"
            },
            "type": "array"
          },
          "serviceResource": {
            "type": "string"
          },
          "serviceResourceType": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/DialogStatus_Values"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SearchDialogDtoSO": {
        "additionalProperties": false,
        "properties": {
          "content": {
            "$ref": "#/components/schemas/SearchDialogContentDtoSO"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "dueAt": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "endUserId": {
            "nullable": true,
            "type": "string"
          },
          "extendedStatus": {
            "nullable": true,
            "type": "string"
          },
          "guiAttachmentCount": {
            "format": "int32",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "format": "guid",
            "type": "string"
          },
          "latestActivity": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SearchDialogDialogActivityDtoSO"
              }
            ]
          },
          "org": {
            "type": "string"
          },
          "party": {
            "type": "string"
          },
          "progress": {
            "format": "int32",
            "nullable": true,
            "type": "integer"
          },
          "seenSinceLastUpdate": {
            "items": {
              "$ref": "#/components/schemas/SearchDialogDialogSeenLogDtoSO"
            },
            "type": "array"
          },
          "serviceResource": {
            "type": "string"
          },
          "serviceResourceType": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/DialogStatus_Values"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "visibleFrom": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SearchDialogSeenLogDto": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "format": "guid",
            "type": "string"
          },
          "isCurrentEndUser": {
            "type": "boolean"
          },
          "isViaServiceOwner": {
            "type": "boolean"
          },
          "seenAt": {
            "format": "date-time",
            "type": "string"
          },
          "seenBy": {
            "$ref": "#/components/schemas/SearchDialogSeenLogSeenByActorDto"
          }
        },
        "type": "object"
      },
      "SearchDialogSeenLogSeenByActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "type": "string"
          },
          "actorName": {
            "type": "string"
          },
          "id": {
            "format": "guid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SearchSeenLogDto": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "format": "guid",
            "type": "string"
          },
          "isViaServiceOwner": {
            "nullable": true,
            "type": "boolean"
          },
          "seenAt": {
            "format": "date-time",
            "type": "string"
          },
          "seenBy": {
            "$ref": "#/components/schemas/SearchSeenLogSeenByActorDto"
          }
        },
        "type": "object"
      },
      "SearchSeenLogSeenByActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "type": "string"
          },
          "actorName": {
            "type": "string"
          },
          "id": {
            "format": "guid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateDialogContentDto": {
        "additionalProperties": false,
        "properties": {
          "additionalInfo": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContentValueDto"
              }
            ]
          },
          "extendedStatus": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContentValueDto"
              }
            ]
          },
          "mainContentReference": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContentValueDto"
              }
            ]
          },
          "senderName": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContentValueDto"
              }
            ]
          },
          "summary": {
            "$ref": "#/components/schemas/ContentValueDto"
          },
          "title": {
            "$ref": "#/components/schemas/ContentValueDto"
          }
        },
        "type": "object"
      },
      "UpdateDialogDialogActivityDto": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            },
            "type": "array"
          },
          "extendedType": {
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "performedBy": {
            "$ref": "#/components/schemas/UpdateDialogDialogActivityPerformedByActorDto"
          },
          "relatedActivityId": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "transmissionId": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/DialogActivityType_Values"
          }
        },
        "type": "object"
      },
      "UpdateDialogDialogActivityPerformedByActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "nullable": true,
            "type": "string"
          },
          "actorName": {
            "nullable": true,
            "type": "string"
          },
          "actorType": {
            "$ref": "#/components/schemas/ActorType_Values"
          }
        },
        "type": "object"
      },
      "UpdateDialogDialogApiActionDto": {
        "additionalProperties": false,
        "properties": {
          "action": {
            "type": "string"
          },
          "authorizationAttribute": {
            "nullable": true,
            "type": "string"
          },
          "endpoints": {
            "items": {
              "$ref": "#/components/schemas/UpdateDialogDialogApiActionEndpointDto"
            },
            "type": "array"
          },
          "id": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateDialogDialogApiActionEndpointDto": {
        "additionalProperties": false,
        "properties": {
          "deprecated": {
            "type": "boolean"
          },
          "documentationUrl": {
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "httpMethod": {
            "$ref": "#/components/schemas/HttpVerb_Values"
          },
          "id": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "requestSchema": {
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "responseSchema": {
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "sunsetAt": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          },
          "version": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateDialogDialogAttachmentDto": {
        "additionalProperties": false,
        "properties": {
          "displayName": {
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            },
            "type": "array"
          },
          "id": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "urls": {
            "items": {
              "$ref": "#/components/schemas/UpdateDialogDialogAttachmentUrlDto"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UpdateDialogDialogAttachmentUrlDto": {
        "additionalProperties": false,
        "properties": {
          "consumerType": {
            "$ref": "#/components/schemas/AttachmentUrlConsumerType_Values"
          },
          "id": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "mediaType": {
            "nullable": true,
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateDialogDialogGuiActionDto": {
        "additionalProperties": false,
        "properties": {
          "action": {
            "type": "string"
          },
          "authorizationAttribute": {
            "nullable": true,
            "type": "string"
          },
          "httpMethod": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/HttpVerb_Values"
              }
            ]
          },
          "id": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "isDeleteDialogAction": {
            "type": "boolean"
          },
          "priority": {
            "$ref": "#/components/schemas/DialogGuiActionPriority_Values"
          },
          "prompt": {
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            },
            "nullable": true,
            "type": "array"
          },
          "title": {
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            },
            "type": "array"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateDialogDialogTransmissionContentDto": {
        "additionalProperties": false,
        "properties": {
          "summary": {
            "$ref": "#/components/schemas/ContentValueDto"
          },
          "title": {
            "$ref": "#/components/schemas/ContentValueDto"
          }
        },
        "type": "object"
      },
      "UpdateDialogDialogTransmissionDto": {
        "additionalProperties": false,
        "properties": {
          "attachments": {
            "items": {
              "$ref": "#/components/schemas/UpdateDialogTransmissionAttachmentDto"
            },
            "type": "array"
          },
          "authorizationAttribute": {
            "nullable": true,
            "type": "string"
          },
          "content": {
            "$ref": "#/components/schemas/UpdateDialogDialogTransmissionContentDto"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "extendedType": {
            "nullable": true,
            "type": "string"
          },
          "id": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "relatedTransmissionId": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "sender": {
            "$ref": "#/components/schemas/UpdateDialogDialogTransmissionSenderActorDto"
          },
          "type": {
            "$ref": "#/components/schemas/DialogTransmissionType_Values"
          }
        },
        "type": "object"
      },
      "UpdateDialogDialogTransmissionSenderActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "type": "string"
          },
          "actorName": {
            "type": "string"
          },
          "actorType": {
            "$ref": "#/components/schemas/ActorType_Values"
          }
        },
        "type": "object"
      },
      "UpdateDialogDto": {
        "additionalProperties": false,
        "properties": {
          "activities": {
            "items": {
              "$ref": "#/components/schemas/UpdateDialogDialogActivityDto"
            },
            "type": "array"
          },
          "apiActions": {
            "items": {
              "$ref": "#/components/schemas/UpdateDialogDialogApiActionDto"
            },
            "type": "array"
          },
          "attachments": {
            "items": {
              "$ref": "#/components/schemas/UpdateDialogDialogAttachmentDto"
            },
            "type": "array"
          },
          "content": {
            "$ref": "#/components/schemas/UpdateDialogContentDto"
          },
          "dueAt": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "expiresAt": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "extendedStatus": {
            "nullable": true,
            "type": "string"
          },
          "externalReference": {
            "nullable": true,
            "type": "string"
          },
          "guiActions": {
            "items": {
              "$ref": "#/components/schemas/UpdateDialogDialogGuiActionDto"
            },
            "type": "array"
          },
          "progress": {
            "format": "int32",
            "nullable": true,
            "type": "integer"
          },
          "searchTags": {
            "items": {
              "$ref": "#/components/schemas/UpdateDialogSearchTagDto"
            },
            "type": "array"
          },
          "status": {
            "$ref": "#/components/schemas/DialogStatus_Values"
          },
          "transmissions": {
            "items": {
              "$ref": "#/components/schemas/UpdateDialogDialogTransmissionDto"
            },
            "type": "array"
          },
          "visibleFrom": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateDialogRequest": {
        "additionalProperties": false,
        "properties": {
          "dto": {
            "$ref": "#/components/schemas/UpdateDialogDto"
          }
        },
        "type": "object"
      },
      "UpdateDialogSearchTagDto": {
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateDialogTransmissionAttachmentDto": {
        "additionalProperties": false,
        "properties": {
          "displayName": {
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            },
            "type": "array"
          },
          "id": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "urls": {
            "items": {
              "$ref": "#/components/schemas/UpdateDialogTransmissionAttachmentUrlDto"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UpdateDialogTransmissionAttachmentUrlDto": {
        "additionalProperties": false,
        "properties": {
          "consumerType": {
            "$ref": "#/components/schemas/AttachmentUrlConsumerType_Values"
          },
          "id": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "mediaType": {
            "nullable": true,
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "JWTBearerAuth": {
        "bearerFormat": "JWT",
        "description": "Enter a JWT token to authorize the requests...",
        "scheme": "Bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "title": "Dialogporten",
    "version": "v1"
  },
  "openapi": "3.0.0",
  "paths": {
    "/api/v1/.well-known/jwks.json": {
      "get": {
        "description": "This endpoint can be used by client integrations supporting automatic discovery of \u0022OAuth 2.0 Authorization Server\u0022 metadata, enabling verification of dialog tokens issues by Dialogporten.",
        "operationId": "GetJwks",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetJwksDto"
                }
              }
            },
            "description": "The OAuth 2.0 Authorization Server Metadata"
          }
        },
        "summary": "Gets the JSON Web Key Set (JWKS) containing the public keys used to verify dialog token signatures",
        "tags": [
          "Metadata"
        ]
      }
    },
    "/api/v1/.well-known/oauth-authorization-server": {
      "get": {
        "description": "This endpoint can be used by client integrations supporting automatic discovery of \u0022OAuth 2.0 Authorization Server\u0022 metadata, enabling verification of dialog tokens issues by Dialogporten.",
        "operationId": "GetOauthAuthorizationServer",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOauthAuthorizationServerDto"
                }
              }
            },
            "description": "The OAuth 2.0 Authorization Server Metadata"
          }
        },
        "summary": "Gets the OAuth 2.0 Metadata for automatic configuration of clients verifying dialog tokens.",
        "tags": [
          "Metadata"
        ]
      }
    },
    "/api/v1/enduser/dialogs": {
      "get": {
        "description": "Performs a search for dialogs, returning a paginated list of dialogs. For more information see the documentation (link TBD).\n\n* All date parameters must contain explicit time zone. Example: 2023-10-27T10:00:00Z or 2023-10-27T10:00:00\u002B01:00\n* See \u0022continuationToken\u0022 in the response for how to get the next page of results.\n* hasNextPage will be set to true if there are more items to get.",
        "operationId": "GetDialogList",
        "parameters": [
          {
            "description": "Filter by one or more service owner codes",
            "explode": true,
            "in": "query",
            "name": "org",
            "schema": {
              "items": {
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Filter by one or more service resources",
            "explode": true,
            "in": "query",
            "name": "serviceResource",
            "schema": {
              "items": {
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Filter by one or more owning parties",
            "explode": true,
            "in": "query",
            "name": "party",
            "schema": {
              "items": {
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Filter by one or more extended statuses",
            "explode": true,
            "in": "query",
            "name": "extendedStatus",
            "schema": {
              "items": {
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Filter by external reference",
            "in": "query",
            "name": "externalReference",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filter by status",
            "explode": true,
            "in": "query",
            "name": "status",
            "schema": {
              "items": {
                "$ref": "#/components/schemas/DialogStatus_Values"
              },
              "nullable": true,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Only return dialogs created after this date",
            "in": "query",
            "name": "createdAfter",
            "schema": {
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Only return dialogs created before this date",
            "in": "query",
            "name": "createdBefore",
            "schema": {
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Only return dialogs updated after this date",
            "in": "query",
            "name": "updatedAfter",
            "schema": {
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Only return dialogs updated before this date",
            "in": "query",
            "name": "updatedBefore",
            "schema": {
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Only return dialogs with due date after this date",
            "in": "query",
            "name": "dueAfter",
            "schema": {
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Only return dialogs with due date before this date",
            "in": "query",
            "name": "dueBefore",
            "schema": {
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Search string for free text search. Will attempt to fuzzily match in all free text fields in the aggregate",
            "in": "query",
            "name": "search",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Limit free text search to texts with this language code, e.g. \u0027no\u0027, \u0027en\u0027. Culture codes will be normalized to neutral language codes (ISO 639). Default: search all culture codes",
            "in": "query",
            "name": "searchLanguageCode",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OrderSetOfTOrderDefinitionAndTTarget"
                }
              ]
            }
          },
          {
            "description": "Supply \u0022continuationToken\u0022 for the response to get the next page of results, if hasNextPage is true",
            "in": "query",
            "name": "continuationToken",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ContinuationTokenSetOfTOrderDefinitionAndTTarget"
                }
              ]
            }
          },
          {
            "description": "Limit the number of results per page (1-1000, default: 100)",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "nullable": true,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfSearchDialogDto"
                }
              }
            },
            "description": "Successfully returned the dialog list."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten\u0022."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets a list of dialogs",
        "tags": [
          "Enduser"
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}": {
      "get": {
        "description": "Gets a single dialog aggregate. For more information see the documentation (link TBD).",
        "operationId": "GetDialog",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDialogDto"
                }
              }
            },
            "description": "Successfully returned the dialog aggregate."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten\u0022."
          },
          "403": {
            "description": "Unauthorized to get the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The given dialog ID was not found or is already deleted."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets a single dialog",
        "tags": [
          "Enduser"
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}/activities": {
      "get": {
        "description": "Gets the list of activities belonging to a dialog",
        "operationId": "GetDialogActivityList",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              },
              "text/plain": {
                "schema": {}
              }
            },
            "description": "Successfully returned the dialog activity list."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten\u0022."
          },
          "403": {
            "description": "Unauthorized to get the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets a list of dialog activities",
        "tags": [
          "Enduser"
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}/activities/{activityId}": {
      "get": {
        "description": "Gets a single activity belonging to a dialog. For more information see the documentation (link TBD).",
        "operationId": "GetDialogActivity",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "activityId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the dialog activity."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten\u0022."
          },
          "403": {
            "description": "Unauthorized to get child entity for the given dialog (dialog not owned by authenticated organization or has additional scope requirements defined in service identifiers policy)."
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The given dialog ID was not found or was deleted, or the given activity ID was not found."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets a single dialog activity",
        "tags": [
          "Enduser"
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}/seenlog": {
      "get": {
        "description": "Gets all seen log records for a dialog. For more information see the documentation (link TBD).",
        "operationId": "SearchDialogSeenLog",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SearchDialogSeenLogDto"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successfully returned the dialog seen log records."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten\u0022."
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets all seen log records for a dialog",
        "tags": [
          "Enduser"
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}/seenlog/{seenLogId}": {
      "get": {
        "description": "Gets a single dialog seen log record. For more information see the documentation (link TBD).",
        "operationId": "GetDialogSeenLog",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "seenLogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDialogSeenLogDto"
                }
              }
            },
            "description": "Successfully returned the dialog seen log record."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten\u0022."
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets a single dialog seen log record",
        "tags": [
          "Enduser"
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}/transmissions": {
      "get": {
        "description": "Gets the list of transmissions belonging to a dialog",
        "operationId": "GetDialogTransmissionListEU",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              },
              "text/plain": {
                "schema": {}
              }
            },
            "description": "Successfully returned the dialog transmission list."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten\u0022."
          },
          "403": {
            "description": "Unauthorized to get the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets a list of dialog transmissions",
        "tags": [
          "Enduser"
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}/transmissions/{transmissionId}": {
      "get": {
        "description": "Gets a single transmission belonging to a dialog. For more information see the documentation (link TBD).",
        "operationId": "GetDialogTransmissionEU",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "transmissionId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the dialog transmission."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten\u0022."
          },
          "403": {
            "description": "Unauthorized to get child entity for the given dialog (dialog not owned by authenticated organization or has additional scope requirements defined in service identifiers policy)."
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The given dialog ID was not found or was deleted, or the given transmission ID was not found."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets a single dialog transmission",
        "tags": [
          "Enduser"
        ]
      }
    },
    "/api/v1/enduser/parties": {
      "get": {
        "description": "Gets the list of authorized parties for the end user. For more information see the documentation (link TBD).",
        "operationId": "GetParties",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GetPartiesDto"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The list of authorized parties for the end user"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets the list of authorized parties for the end user",
        "tags": [
          "Enduser"
        ]
      }
    },
    "/api/v1/serviceowner/dialogs": {
      "get": {
        "description": "Performs a search for dialogs, returning a paginated list of dialogs. For more information see the documentation (link TBD).\n\n* All date parameters must contain explicit time zone. Example: 2023-10-27T10:00:00Z or 2023-10-27T10:00:00\u002B01:00\n* See \u0022continuationToken\u0022 in the response for how to get the next page of results.\n* hasNextPage will be set to true if there are more items to get.",
        "operationId": "GetDialogListSO",
        "parameters": [
          {
            "description": "Filter by one or more service resources",
            "explode": true,
            "in": "query",
            "name": "serviceResource",
            "schema": {
              "items": {
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Filter by one or more owning parties",
            "explode": true,
            "in": "query",
            "name": "party",
            "schema": {
              "items": {
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Filter by end user id",
            "in": "query",
            "name": "endUserId",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filter by one or more extended statuses",
            "explode": true,
            "in": "query",
            "name": "extendedStatus",
            "schema": {
              "items": {
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Filter by external reference",
            "in": "query",
            "name": "externalReference",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filter by status",
            "explode": true,
            "in": "query",
            "name": "status",
            "schema": {
              "items": {
                "$ref": "#/components/schemas/DialogStatus_Values"
              },
              "nullable": true,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Only return dialogs created after this date",
            "in": "query",
            "name": "createdAfter",
            "schema": {
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Only return dialogs created before this date",
            "in": "query",
            "name": "createdBefore",
            "schema": {
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Only return dialogs updated after this date",
            "in": "query",
            "name": "updatedAfter",
            "schema": {
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Only return dialogs updated before this date",
            "in": "query",
            "name": "updatedBefore",
            "schema": {
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Only return dialogs with due date after this date",
            "in": "query",
            "name": "dueAfter",
            "schema": {
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Only return dialogs with due date before this date",
            "in": "query",
            "name": "dueBefore",
            "schema": {
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Only return dialogs with visible-from date after this date",
            "in": "query",
            "name": "visibleAfter",
            "schema": {
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Only return dialogs with visible-from date before this date",
            "in": "query",
            "name": "visibleBefore",
            "schema": {
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Search string for free text search. Will attempt to fuzzily match in all free text fields in the aggregate",
            "in": "query",
            "name": "search",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Limit free text search to texts with this language code, e.g. \u0027no\u0027, \u0027en\u0027. Culture codes will be normalized to neutral language codes (ISO 639). Default: search all culture codes",
            "in": "query",
            "name": "searchLanguageCode",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OrderSetOfTOrderDefinitionAndTTarget"
                }
              ]
            }
          },
          {
            "description": "Supply \u0022continuationToken\u0022 for the response to get the next page of results, if hasNextPage is true",
            "in": "query",
            "name": "continuationToken",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ContinuationTokenSetOfTOrderDefinitionAndTTarget"
                }
              ]
            }
          },
          {
            "description": "Limit the number of results per page (1-1000, default: 100)",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "nullable": true,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfSearchDialogDtoSO"
                }
              }
            },
            "description": "Successfully returned the dialog list."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten.serviceprovider.search\u0022."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets a list of dialogs",
        "tags": [
          "Serviceowner"
        ]
      },
      "post": {
        "description": "The dialog is created with the given configuration. For more information see the documentation (link TBD).\n\nFor detailed information on validation rules, see [the source for CreateDialogCommandValidator](https://github.com/digdir/dialogporten/blob/main/src/Digdir.Domain.Dialogporten.Application/Features/V1/ServiceOwner/Dialogs/Commands/Create/CreateDialogCommandValidator.cs)",
        "operationId": "CreateDialog",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDialogCommand"
              }
            }
          },
          "description": "",
          "required": true,
          "x-name": "CreateDialogCommand",
          "x-position": 1
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "018bb8e5-d9d0-7434-8ec5-569a6c8e01fc",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "The UUID of the created the dialog aggregate. A relative URL to the newly created activity is set in the \u0022Location\u0022 header."
          },
          "400": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Validation error occured. See problem details for a list of errors."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten.serviceprovider\u0022."
          },
          "403": {
            "description": "Unauthorized to create a dialog for the given serviceResource (not owned by authenticated organization or has additional scope requirements defined in policy)."
          },
          "422": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Domain error occured. See problem details for a list of errors."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Creates a new dialog",
        "tags": [
          "Serviceowner"
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}": {
      "delete": {
        "description": "Deletes a given dialog (soft delete). For more information see the documentation (link TBD).\n\nNote that the dialog will still be available on the single details endpoint, but will have a deleted status. It will not appear on the list endpoint for either service owners nor end users.\nIf end users attempt to access the dialog via the details endpoint, they will get a 410 Gone response.\n\nOptimistic concurrency control is implemented using the If-Match header. Supply the Revision value from the GetDialog endpoint to ensure that the dialog is not deleted by another request in the meantime.",
        "operationId": "DeleteDialog",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "if-Match",
            "schema": {
              "format": "guid",
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The dialog aggregate was deleted successfully."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten.serviceprovider\u0022."
          },
          "403": {
            "description": "Unauthorized to delete the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The given dialog ID was not found or is already deleted."
          },
          "412": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The supplied If-Match header did not match the current Revision value for the dialog. The request was not applied."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Deletes a dialog",
        "tags": [
          "Serviceowner"
        ]
      },
      "get": {
        "description": "Gets a single dialog aggregate. For more information see the documentation (link TBD).\n\nNote that this operation may return deleted dialogs (see the field \u0060DeletedAt\u0060).",
        "operationId": "GetDialogSO",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDialogDtoSO"
                }
              }
            },
            "description": "Successfully returned the dialog aggregate."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten.serviceprovider\u0022."
          },
          "403": {
            "description": "Unauthorized to get the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The given dialog ID was not found or is already deleted."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets a single dialog",
        "tags": [
          "Serviceowner"
        ]
      },
      "patch": {
        "description": "Patches a dialog aggregate with a RFC6902 JSON Patch document. The patch document must be a JSON array of RFC6902 operations.\nSee [https://tools.ietf.org/html/rfc6902](https://tools.ietf.org/html/rfc6902) for more information.\n            \nOptimistic concurrency control is implemented using the If-Match header. Supply the Revision value from the GetDialog endpoint to ensure that the dialog is not modified/deleted by another request in the meantime.",
        "operationId": "PatchDialogs_Patch",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            },
            "x-position": 1
          },
          {
            "in": "header",
            "name": "If-Match",
            "schema": {
              "format": "guid",
              "nullable": true,
              "type": "string"
            },
            "x-originalName": "etag",
            "x-position": 2
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/Operation"
                },
                "type": "array"
              }
            }
          },
          "required": true,
          "x-name": "patchDocument",
          "x-position": 3
        },
        "responses": {
          "204": {
            "description": "Patch was successfully applied."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Validation error occured. See problem details for a list of errors."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \\\u0022digdir:dialogporten.serviceprovider\\\u0022"
          },
          "403": {
            "description": "Unauthorized to update a dialog for the given serviceResource (not owned by authenticated organization or has additional scope requirements defined in policy)"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The given dialog ID was not found or is deleted"
          },
          "412": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The supplied Revision does not match the current Revision of the dialog"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Domain error occured. See problem details for a list of errors."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Patch a single dialog",
        "tags": [
          "Serviceowner"
        ]
      },
      "put": {
        "description": "Replaces a given dialog with the supplied model. For more information see the documentation (link TBD).\n\nOptimistic concurrency control is implemented using the If-Match header. Supply the Revision value from the GetDialog endpoint to ensure that the dialog is not modified/deleted by another request in the meantime.",
        "operationId": "ReplaceDialog",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "if-Match",
            "schema": {
              "format": "guid",
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "Activities": [
                  {
                    "CreatedAt": null,
                    "Description": [
                      {
                        "LanguageCode": "en",
                        "Value": "Some description"
                      },
                      {
                        "LanguageCode": "nb",
                        "Value": "En beskrivelse"
                      }
                    ],
                    "ExtendedType": null,
                    "Id": "8b95d42d-d2b6-4c01-8ca0-a817a4b3c50d",
                    "PerformedBy": {
                      "ActorId": null,
                      "ActorName": null,
                      "ActorType": 2
                    },
                    "RelatedActivityId": null,
                    "TransmissionId": null,
                    "Type": 3
                  }
                ],
                "ApiActions": [
                  {
                    "Action": "submit",
                    "AuthorizationAttribute": null,
                    "Endpoints": [
                      {
                        "Deprecated": false,
                        "DocumentationUrl": "https://example.com/some-api-action-doc",
                        "HttpMethod": 2,
                        "Id": null,
                        "RequestSchema": "https://example.com/some-api-action-request-schema",
                        "ResponseSchema": "https://example.com/some-api-action-response-schema",
                        "SunsetAt": null,
                        "Url": "https://example.com/some-api-action",
                        "Version": "20231015"
                      }
                    ],
                    "Id": "948b07ba-1a82-403e-8eaa-2e5784af07a9"
                  }
                ],
                "Attachments": [
                  {
                    "DisplayName": [
                      {
                        "LanguageCode": "en",
                        "Value": "Some display name"
                      }
                    ],
                    "Id": "02a72809-eddd-4192-864d-8f1755d72f4e",
                    "Urls": [
                      {
                        "ConsumerType": 0,
                        "Id": "858177cb-8584-4d10-a086-3a5defa7a6c3",
                        "MediaType": null,
                        "Url": "https://example.com/some-url"
                      }
                    ]
                  }
                ],
                "Content": {
                  "AdditionalInfo": {
                    "MediaType": "text/markdown",
                    "Value": [
                      {
                        "LanguageCode": "en",
                        "Value": "Some description with *markdown* support"
                      }
                    ]
                  },
                  "ExtendedStatus": null,
                  "MainContentReference": null,
                  "SenderName": null,
                  "Summary": {
                    "MediaType": "text/plain",
                    "Value": [
                      {
                        "LanguageCode": "en",
                        "Value": "Some Summary"
                      }
                    ]
                  },
                  "Title": {
                    "MediaType": "text/plain",
                    "Value": [
                      {
                        "LanguageCode": "en",
                        "Value": "Some title"
                      }
                    ]
                  }
                },
                "DueAt": "2084-04-04T12:13:10.01344\u002B00:00",
                "ExpiresAt": "2095-05-04T12:13:10.01344\u002B00:00",
                "ExtendedStatus": "Some extended status",
                "ExternalReference": "Some external reference",
                "GuiActions": [
                  {
                    "Action": "submit",
                    "AuthorizationAttribute": null,
                    "HttpMethod": 1,
                    "Id": "8c64ecc8-7678-44b2-8788-0b5852dd8fa0",
                    "IsDeleteDialogAction": false,
                    "Priority": 1,
                    "Prompt": null,
                    "Title": [
                      {
                        "LanguageCode": "en",
                        "Value": "GUI action title"
                      },
                      {
                        "LanguageCode": "nb",
                        "Value": "GUI action-tittel"
                      }
                    ],
                    "Url": "https://example.com/some-url"
                  }
                ],
                "Progress": 42,
                "SearchTags": [
                  {
                    "Value": "searchTag"
                  },
                  {
                    "Value": "anotherSearchTag"
                  }
                ],
                "Status": 1,
                "VisibleFrom": "2054-03-04T12:13:10.01344\u002B00:00"
              },
              "schema": {
                "$ref": "#/components/schemas/UpdateDialogDto"
              }
            }
          },
          "required": true,
          "x-name": "dto"
        },
        "responses": {
          "204": {
            "description": "The dialog aggregate was updated successfully."
          },
          "400": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Validation error occured. See problem details for a list of errors."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten.serviceprovider\u0022."
          },
          "403": {
            "description": "Unauthorized to update the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The given dialog ID was not found or is already deleted."
          },
          "412": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The supplied If-Match header did not match the current Revision value for the dialog. The request was not applied."
          },
          "422": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Domain error occured. See problem details for a list of errors."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Replaces a dialog",
        "tags": [
          "Serviceowner"
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/actions/purge": {
      "post": {
        "description": "Deletes a given dialog (hard delete). For more information see the documentation (link TBD).\n\nOptimistic concurrency control is implemented using the If-Match header. Supply the Revision value from the GetDialog endpoint to ensure that the dialog is not deleted by another request in the meantime.",
        "operationId": "PurgeDialog",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "if-Match",
            "schema": {
              "format": "guid",
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The dialog aggregate was deleted successfully."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten.serviceprovider\u0022."
          },
          "403": {
            "description": "Unauthorized to delete the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The given dialog ID was not found or is already deleted."
          },
          "412": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The supplied If-Match header did not match the current Revision value for the dialog. The request was not applied."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Permanently deletes a dialog",
        "tags": [
          "Serviceowner"
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/activities": {
      "get": {
        "description": "Gets the list of activities belonging to a dialog",
        "operationId": "GetDialogActivityListSO",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              },
              "text/plain": {
                "schema": {}
              }
            },
            "description": "Successfully returned the dialog activity list."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten.serviceprovider\u0022."
          },
          "403": {
            "description": "Unauthorized to get the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets a list of dialog activities",
        "tags": [
          "Serviceowner"
        ]
      },
      "post": {
        "description": "The activity is created with the given configuration. For more information see the documentation (link TBD).\n\nOptimistic concurrency control is implemented using the If-Match header. Supply the Revision value from the GetDialog endpoint to ensure that the dialog is not modified/deleted by another request in the meantime.",
        "operationId": "CreateDialogActivity",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "if-Match",
            "schema": {
              "format": "guid",
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDialogActivityRequest"
              }
            }
          },
          "description": "",
          "required": true,
          "x-name": "CreateDialogActivityRequest",
          "x-position": 1
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "018bb8e5-d9d0-7434-8ec5-569a6c8e01fc",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "The UUID of the created the dialog activity. A relative URL to the newly created activity is set in the \u0022Location\u0022 header."
          },
          "400": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Validation error occured. See problem details for a list of errors."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten.serviceprovider\u0022."
          },
          "403": {
            "description": "Unauthorized to create child entity for the given dialog (dialog not owned by authenticated organization or has additional scope requirements defined in service identifiers policy)."
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The given dialog ID was not found or is already deleted."
          },
          "412": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The supplied If-Match header did not match the current Revision value for the dialog. The request was not applied."
          },
          "422": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Domain error occured. See problem details for a list of errors."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Adds a activity to a dialogs activity history",
        "tags": [
          "Serviceowner"
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/activities/{activityId}": {
      "get": {
        "description": "Gets a single activity belonging to a dialog. For more information see the documentation (link TBD).",
        "operationId": "GetDialogActivitySO",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "activityId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the dialog activity."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten.serviceprovider\u0022."
          },
          "403": {
            "description": "Unauthorized to get child entity for the given dialog (dialog not owned by authenticated organization or has additional scope requirements defined in service identifiers policy)."
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The given dialog ID was not found or was deleted, or the given activity ID was not found."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets a single dialog activity",
        "tags": [
          "Serviceowner"
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/notification-condition": {
      "get": {
        "description": "Used by Altinn Notification only. Takes a dialogId and returns a boolean value based on conditions used to determine if a notification is to be sent.",
        "operationId": "GetDialogActivityNotificationConditionSO",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "conditionType",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NotificationConditionType"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "activityType",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DialogActivityType_Values"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "transmissionId",
            "schema": {
              "format": "guid",
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              },
              "text/plain": {
                "schema": {}
              }
            },
            "description": "Successfully returned the notification determination."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022altinn:system/notifications.condition.check\u0022."
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Returns a boolean value based on conditions used to determine if a notification is to be sent.",
        "tags": [
          "Serviceowner"
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/seenlog": {
      "get": {
        "description": "Gets all seen log records for a dialog. For more information see the documentation (link TBD).",
        "operationId": "SearchDialogSeenLogSO",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SearchSeenLogDto"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successfully returned the dialog seen log records."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets all seen log records for a dialog",
        "tags": [
          "Serviceowner"
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/seenlog/{seenLogId}": {
      "get": {
        "description": "Gets a single dialog seen log record. For more information see the documentation (link TBD).",
        "operationId": "GetDialogSeenLogSO",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "seenLogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDialogSeenLogDtoSO"
                }
              }
            },
            "description": "Successfully returned the dialog seen log record."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets a single dialog seen log record",
        "tags": [
          "Serviceowner"
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/transmissions": {
      "get": {
        "description": "Gets the list of transmissions belonging to a dialog",
        "operationId": "GetDialogTransmissionListSO",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              },
              "text/plain": {
                "schema": {}
              }
            },
            "description": "Successfully returned the dialog transmission list."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten.serviceprovider\u0022."
          },
          "403": {
            "description": "Unauthorized to get the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets a list of dialog transmissions",
        "tags": [
          "Serviceowner"
        ]
      },
      "post": {
        "description": "The transmission is created with the given configuration. For more information see the documentation (link TBD).\n\nOptimistic concurrency control is implemented using the If-Match header. Supply the Revision value from the GetDialog endpoint to ensure that the dialog is not modified/deleted by another request in the meantime.",
        "operationId": "CreateDialogTransmission",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "if-Match",
            "schema": {
              "format": "guid",
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDialogTransmissionRequest"
              }
            }
          },
          "description": "",
          "required": true,
          "x-name": "CreateDialogTransmissionRequest",
          "x-position": 1
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "018bb8e5-d9d0-7434-8ec5-569a6c8e01fc",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "The UUID of the created the dialog transmission. A relative URL to the newly created activity is set in the \u0022Location\u0022 header."
          },
          "400": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Validation error occured. See problem details for a list of errors."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten.serviceprovider\u0022."
          },
          "403": {
            "description": "Unauthorized to create child entity for the given dialog (dialog not owned by authenticated organization or has additional scope requirements defined in service identifiers policy)."
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The given dialog ID was not found or is already deleted."
          },
          "412": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The supplied If-Match header did not match the current Revision value for the dialog. The request was not applied."
          },
          "422": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Domain error occured. See problem details for a list of errors."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Adds a transmission to a dialog",
        "tags": [
          "Serviceowner"
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/transmissions/{transmissionId}": {
      "get": {
        "description": "Gets a single transmission belonging to a dialog. For more information see the documentation (link TBD).",
        "operationId": "GetDialogTransmissionSO",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "transmissionId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the dialog transmission."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten.serviceprovider\u0022."
          },
          "403": {
            "description": "Unauthorized to get child entity for the given dialog (dialog not owned by authenticated organization or has additional scope requirements defined in service identifiers policy)."
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The given dialog ID was not found or was deleted, or the given transmission ID was not found."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets a single dialog transmission",
        "tags": [
          "Serviceowner"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://altinn-dev-api.azure-api.net/dialogporten"
    }
  ]
}