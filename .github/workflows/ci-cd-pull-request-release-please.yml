name: CI/CD Pull Request Release Please
description: Run dry-runs of staging deployment on release PRs
on:
  pull_request:
    branches: [main]
    paths-ignore:
      - "tests/k6/**"

jobs:
  verify-release-please-branch:
    if: startsWith(github.head_ref, 'release-please-')
    runs-on: ubuntu-latest
    steps:
      - run: echo "Confirmed to be a release please branch"

  get-current-version:
    name: Get current version
    needs: [verify-release-please-branch]
    uses: ./.github/workflows/workflow-get-current-version.yml

  check-for-changes:
    name: Check for changes
    needs: [verify-release-please-branch]
    uses: ./.github/workflows/workflow-check-for-changes.yml

  generate-git-short-sha:
    name: Generate git short sha
    needs: [verify-release-please-branch]
    uses: ./.github/workflows/workflow-generate-git-short-sha.yml

  dry-run-deploy-infra-staging:
    name: Deploy infra to staging (dry run)
    needs: [generate-git-short-sha, get-current-version, check-for-changes]
    uses: ./.github/workflows/workflow-deploy-infra.yml
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_SOURCE_KEY_VAULT_NAME: ${{ secrets.AZURE_SOURCE_KEY_VAULT_NAME }}
      AZURE_SOURCE_KEY_VAULT_SUBSCRIPTION_ID: ${{ secrets.AZURE_SOURCE_KEY_VAULT_SUBSCRIPTION_ID }}
      AZURE_SOURCE_KEY_VAULT_RESOURCE_GROUP: ${{ secrets.AZURE_SOURCE_KEY_VAULT_RESOURCE_GROUP }}
      AZURE_SOURCE_KEY_VAULT_SSH_JUMPER_SSH_PUBLIC_KEY: ${{ secrets.AZURE_SOURCE_KEY_VAULT_SSH_JUMPER_SSH_PUBLIC_KEY }}
    with:
      environment: staging
      region: norwayeast
      dryRun: true
      version: ${{ needs.get-current-version.outputs.version }}-${{ needs.generate-git-short-sha.outputs.gitShortSha }}

  dry-run-deploy-apps-staging:
    name: Deploy apps to staging (dry run)
    needs: [generate-git-short-sha, get-current-version, check-for-changes]
    uses: ./.github/workflows/workflow-deploy-apps.yml
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      # todo: consider resolving these in another way since they are created in the infra-step
      AZURE_RESOURCE_GROUP_NAME: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
      AZURE_ENVIRONMENT_KEY_VAULT_NAME: ${{ secrets.AZURE_ENVIRONMENT_KEY_VAULT_NAME }}
      AZURE_CONTAINER_APP_ENVIRONMENT_NAME: ${{ secrets.AZURE_CONTAINER_APP_ENVIRONMENT_NAME }}
      AZURE_APP_INSIGHTS_CONNECTION_STRING: ${{ secrets.AZURE_APP_INSIGHTS_CONNECTION_STRING }}
      AZURE_APP_CONFIGURATION_NAME: ${{ secrets.AZURE_APP_CONFIGURATION_NAME }}
      AZURE_SERVICE_BUS_NAMESPACE_NAME: ${{ secrets.AZURE_SERVICE_BUS_NAMESPACE_NAME }}
    with:
      environment: staging
      region: norwayeast
      dryRun: true
      version: ${{ needs.get-current-version.outputs.version }}-${{ needs.generate-git-short-sha.outputs.gitShortSha }}

  send-slack-message:
    name: Send Slack message
    needs: [dry-run-deploy-infra-staging, dry-run-deploy-apps-staging]
    runs-on: ubuntu-latest
    steps:
      - name: Slackify markdown in pull request body
        id: slackify
        uses: LoveToKnow/slackify-markdown-action@v1.1.1
        with:
          text: ${{ github.event.pull_request.body }}
      - name: Send GitHub slack message
        id: slack
        uses: slackapi/slack-github-action@v2.0.0
        with:
          errors: true
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            {
              "channel": "${{ secrets.SLACK_CHANNEL_ID_FOR_RELEASES }}",
              "blocks": [
                {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": ${{ toJson(steps.slackify.outputs.text) }}
                    }
                  },
                  { "type": "divider" },
                  {
                    "type": "actions",
                    "elements": [
                      {
                        "type": "button",
                        "text": {
                          "type": "plain_text",
                          "text": "Approve Release"
                        },
                        "url": "https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}"
                      }
                    ]
                  }
                ]
            }
