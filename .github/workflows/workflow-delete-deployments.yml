name: Delete temporary GitHub deployments

on:
  workflow_call:
    inputs:
      gitSha:
        required: true
        type: string

permissions:
  contents: read
  deployments: write

jobs:
  delete_github_deployments:
    name: Delete GitHub deployments
    runs-on: ubuntu-latest
    steps:
    - uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
      with:
        egress-policy: audit

    - name: Delete Previous deployments
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      env:
        GITHUB_SHA_HEAD: ${{ github.event.pull_request.head.sha }}
      with:
        script: |
          const { GITHUB_SHA_HEAD } = process.env
          const deployments = await github.rest.repos.listDeployments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: GITHUB_SHA_HEAD
          });
          await Promise.all(
            deployments.data.map(async (deployment) => {
              await github.rest.repos.createDeploymentStatus({ 
                owner: context.repo.owner, 
                repo: context.repo.repo, 
                deployment_id: deployment.id, 
                state: 'inactive' 
              });
              return github.rest.repos.deleteDeployment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                deployment_id: deployment.id
              });
            })
          );
