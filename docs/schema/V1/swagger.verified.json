{
  "components": {
    "schemas": {
      "ContinuationTokenSetOfTOrderDefinitionAndTTarget": {},
      "DigdirDomainDialogportenDomainActors_ActorType_Values": {
        "description": "",
        "enum": [
          "PartyRepresentative",
          "ServiceOwner"
        ],
        "type": "string",
        "x-enumNames": [
          "PartyRepresentative",
          "ServiceOwner"
        ]
      },
      "DigdirDomainDialogportenDomainAttachments_AttachmentUrlConsumerType_Values": {
        "description": "",
        "enum": [
          "Gui",
          "Api"
        ],
        "type": "string",
        "x-enumNames": [
          "Gui",
          "Api"
        ]
      },
      "DigdirDomainDialogportenDomainDialogEndUserContextsEntities_SystemLabel_Values": {
        "description": "",
        "enum": [
          "Default",
          "Bin",
          "Archive"
        ],
        "type": "string",
        "x-enumNames": [
          "Default",
          "Bin",
          "Archive"
        ]
      },
      "DigdirDomainDialogportenDomainDialogsEntities_DialogStatus_Values": {
        "description": "",
        "enum": [
          "New",
          "InProgress",
          "Draft",
          "Sent",
          "RequiresAttention",
          "Completed"
        ],
        "type": "string",
        "x-enumNames": [
          "New",
          "InProgress",
          "Draft",
          "Sent",
          "RequiresAttention",
          "Completed"
        ]
      },
      "DigdirDomainDialogportenDomainDialogsEntitiesActions_DialogGuiActionPriority_Values": {
        "description": "",
        "enum": [
          "Primary",
          "Secondary",
          "Tertiary"
        ],
        "type": "string",
        "x-enumNames": [
          "Primary",
          "Secondary",
          "Tertiary"
        ]
      },
      "DigdirDomainDialogportenDomainDialogsEntitiesActivities_DialogActivityType_Values": {
        "description": "",
        "enum": [
          "DialogCreated",
          "DialogClosed",
          "Information",
          "TransmissionOpened",
          "PaymentMade",
          "SignatureProvided",
          "DialogOpened"
        ],
        "type": "string",
        "x-enumNames": [
          "DialogCreated",
          "DialogClosed",
          "Information",
          "TransmissionOpened",
          "PaymentMade",
          "SignatureProvided",
          "DialogOpened"
        ]
      },
      "DigdirDomainDialogportenDomainDialogsEntitiesTransmissions_DialogTransmissionType_Values": {
        "description": "",
        "enum": [
          "Information",
          "Acceptance",
          "Rejection",
          "Request",
          "Alert",
          "Decision",
          "Submission",
          "Correction"
        ],
        "type": "string",
        "x-enumNames": [
          "Information",
          "Acceptance",
          "Rejection",
          "Request",
          "Alert",
          "Decision",
          "Submission",
          "Correction"
        ]
      },
      "DigdirDomainDialogportenDomainHttp_HttpVerb_Values": {
        "description": "",
        "enum": [
          "GET",
          "POST",
          "PUT",
          "PATCH",
          "DELETE",
          "HEAD",
          "OPTIONS",
          "TRACE",
          "CONNECT"
        ],
        "type": "string",
        "x-enumNames": [
          "GET",
          "POST",
          "PUT",
          "PATCH",
          "DELETE",
          "HEAD",
          "OPTIONS",
          "TRACE",
          "CONNECT"
        ]
      },
      "MicrosoftAspNetCoreJsonPatchOperations_Operation": {
        "additionalProperties": false,
        "properties": {
          "from": {
            "nullable": true,
            "type": "string"
          },
          "op": {
            "nullable": true,
            "type": "string"
          },
          "operationType": {
            "$ref": "#/components/schemas/MicrosoftAspNetCoreJsonPatchOperations_OperationType"
          },
          "path": {
            "nullable": true,
            "type": "string"
          },
          "value": {
            "nullable": true
          }
        },
        "type": "object"
      },
      "MicrosoftAspNetCoreJsonPatchOperations_OperationType": {
        "description": "",
        "enum": [
          "Add",
          "Remove",
          "Replace",
          "Move",
          "Copy",
          "Test",
          "Invalid"
        ],
        "type": "string",
        "x-enumNames": [
          "Add",
          "Remove",
          "Replace",
          "Move",
          "Copy",
          "Test",
          "Invalid"
        ]
      },
      "OrderSetOfTOrderDefinitionAndTTarget": {},
      "PaginatedListOfV1EndUserDialogsQueriesSearch_SearchDialogDto": {
        "additionalProperties": false,
        "properties": {
          "continuationToken": {
            "description": "The continuation token to be used to fetch the next page of items",
            "example": "createdat_2024-07-31T09:09:03.0257090Z,id_0c089101-b7cf-a476-955c-f00a78d74a4e",
            "nullable": true,
            "type": "string"
          },
          "hasNextPage": {
            "description": "Whether there are more items available that can be fetched by supplying the continuation token",
            "type": "boolean"
          },
          "items": {
            "description": "The paginated list of items",
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogsQueriesSearch_SearchDialogDto"
            },
            "type": "array"
          },
          "orderBy": {
            "description": "The current sorting order of the items",
            "example": "createdat_desc,id_desc",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaginatedListOfV1ServiceOwnerDialogsQueriesSearch_SearchDialogDto": {
        "additionalProperties": false,
        "properties": {
          "continuationToken": {
            "description": "The continuation token to be used to fetch the next page of items",
            "example": "createdat_2024-07-31T09:09:03.0257090Z,id_0c089101-b7cf-a476-955c-f00a78d74a4e",
            "nullable": true,
            "type": "string"
          },
          "hasNextPage": {
            "description": "Whether there are more items available that can be fetched by supplying the continuation token",
            "type": "boolean"
          },
          "items": {
            "description": "The paginated list of items",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesSearch_SearchDialogDto"
            },
            "type": "array"
          },
          "orderBy": {
            "description": "The current sorting order of the items",
            "example": "createdat_desc,id_desc",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProblemDetails": {
        "additionalProperties": false,
        "properties": {
          "detail": {
            "nullable": true,
            "type": "string"
          },
          "errors": {
            "items": {
              "$ref": "#/components/schemas/ProblemDetails_Error"
            },
            "type": "array"
          },
          "instance": {
            "default": "/api/route",
            "type": "string"
          },
          "status": {
            "default": 400,
            "format": "int32",
            "type": "integer"
          },
          "title": {
            "default": "One or more validation errors occurred.",
            "type": "string"
          },
          "traceId": {
            "default": "0HMPNHL0JHL76:00000001",
            "type": "string"
          },
          "type": {
            "default": "https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProblemDetails_Error": {
        "additionalProperties": false,
        "properties": {
          "code": {
            "nullable": true,
            "type": "string"
          },
          "name": {
            "default": "Error or field name",
            "type": "string"
          },
          "reason": {
            "default": "Error reason",
            "type": "string"
          },
          "severity": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1CommonContent_ContentValueDto": {
        "additionalProperties": false,
        "properties": {
          "mediaType": {
            "description": "Media type of the content (plaintext, Markdown). Can also indicate that the content is embeddable.",
            "type": "string"
          },
          "value": {
            "description": "A list of localizations for the content",
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_LocalizationDto"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "V1CommonLocalizations_LocalizationDto": {
        "additionalProperties": false,
        "properties": {
          "languageCode": {
            "description": "The language code of the localization in ISO 639-1 format",
            "example": "nb",
            "type": "string"
          },
          "value": {
            "description": "The localized text or URI reference",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1EndUserDialogActivitiesQueriesGet_GetDialogActivityDto": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_LocalizationDto"
            },
            "type": "array"
          },
          "extendedType": {
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "format": "guid",
            "type": "string"
          },
          "performedBy": {
            "$ref": "#/components/schemas/V1EndUserDialogActivitiesQueriesGet_GetDialogActivityPerformedByActorDto"
          },
          "transmissionId": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntitiesActivities_DialogActivityType_Values"
          }
        },
        "type": "object"
      },
      "V1EndUserDialogActivitiesQueriesGet_GetDialogActivityPerformedByActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "nullable": true,
            "type": "string"
          },
          "actorName": {
            "nullable": true,
            "type": "string"
          },
          "actorType": {
            "$ref": "#/components/schemas/DigdirDomainDialogportenDomainActors_ActorType_Values"
          },
          "id": {
            "format": "guid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1EndUserDialogActivitiesQueriesSearch_SearchDialogActivityDto": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "extendedType": {
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "format": "guid",
            "type": "string"
          },
          "seenByEndUserIdHash": {
            "nullable": true,
            "type": "string"
          },
          "transmissionId": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntitiesActivities_DialogActivityType_Values"
          }
        },
        "type": "object"
      },
      "V1EndUserDialogLabelAssignmentLogQueriesSearch_LabelAssignmentLogActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "type": "string"
          },
          "actorName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1EndUserDialogLabelAssignmentLogQueriesSearch_SearchDialogLabelAssignmentLogDto": {
        "additionalProperties": false,
        "properties": {
          "action": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "performedBy": {
            "$ref": "#/components/schemas/V1EndUserDialogLabelAssignmentLogQueriesSearch_LabelAssignmentLogActorDto"
          }
        },
        "type": "object"
      },
      "V1EndUserDialogSeenLogsQueriesGet_GetDialogSeenLogDto": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "format": "guid",
            "type": "string"
          },
          "isCurrentEndUser": {
            "type": "boolean"
          },
          "isViaServiceOwner": {
            "type": "boolean"
          },
          "seenAt": {
            "format": "date-time",
            "type": "string"
          },
          "seenBy": {
            "$ref": "#/components/schemas/V1EndUserDialogSeenLogsQueriesGet_GetDialogSeenLogSeenByActorDto"
          }
        },
        "type": "object"
      },
      "V1EndUserDialogSeenLogsQueriesGet_GetDialogSeenLogSeenByActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "type": "string"
          },
          "actorName": {
            "type": "string"
          },
          "id": {
            "format": "guid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1EndUserDialogSeenLogsQueriesSearch_SearchDialogSeenLogDto": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "format": "guid",
            "type": "string"
          },
          "isCurrentEndUser": {
            "type": "boolean"
          },
          "isViaServiceOwner": {
            "type": "boolean"
          },
          "seenAt": {
            "format": "date-time",
            "type": "string"
          },
          "seenBy": {
            "$ref": "#/components/schemas/V1EndUserDialogSeenLogsQueriesSearch_SearchDialogSeenLogSeenByActorDto"
          }
        },
        "type": "object"
      },
      "V1EndUserDialogSeenLogsQueriesSearch_SearchDialogSeenLogSeenByActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "type": "string"
          },
          "actorName": {
            "type": "string"
          },
          "id": {
            "format": "guid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1EndUserDialogsQueriesGet_GetDialogContentDto": {
        "additionalProperties": false,
        "properties": {
          "additionalInfo": {
            "description": "Additional information about the dialog, this may contain Markdown.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "extendedStatus": {
            "description": "Used as the human-readable label used to describe the \u0022ExtendedStatus\u0022 field.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "mainContentReference": {
            "description": "Front-channel embedded content. Used to dynamically embed content in the frontend from an external URL.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "senderName": {
            "description": "Overridden sender name. If not supplied, assume \u0022org\u0022 as the sender name.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "summary": {
            "description": "A short summary of the dialog and its current state.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "title": {
            "description": "The title of the dialog.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1EndUserDialogsQueriesGet_GetDialogDialogActivityDto": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "description": "The date and time when the activity was created.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Unstructured text describing the activity. Only set if the activity type is \u0022Information\u0022.",
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_LocalizationDto"
            },
            "type": "array"
          },
          "extendedType": {
            "description": "An arbitrary URI/URN with a service-specific activity type.\n            \nConsult the service-specific documentation provided by the service owner for details (if in use).",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The unique identifier for the activity in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "performedBy": {
            "description": "The actor that performed the activity.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1EndUserDialogsQueriesGet_GetDialogDialogActivityPerformedByActorDto"
              }
            ]
          },
          "transmissionId": {
            "description": "If the activity is related to a particular transmission, this field will contain the transmission identifier.",
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "The type of activity.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntitiesActivities_DialogActivityType_Values"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1EndUserDialogsQueriesGet_GetDialogDialogActivityPerformedByActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "description": "The identifier of the person or organization that performed the activity.\nMay be omitted if ActorType is \u0022ServiceOwner\u0022.",
            "nullable": true,
            "type": "string"
          },
          "actorName": {
            "description": "The name of the person or organization that performed the activity.\nOnly set if the actor type is \u0022PartyRepresentative\u0022.",
            "nullable": true,
            "type": "string"
          },
          "actorType": {
            "description": "The type of actor that performed the activity.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainActors_ActorType_Values"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1EndUserDialogsQueriesGet_GetDialogDialogApiActionDto": {
        "additionalProperties": false,
        "properties": {
          "action": {
            "description": "String identifier for the action, corresponding to the \u0022action\u0022 attributeId used in the XACML service policy,\nwhich by default is the policy belonging to the service referred to by \u0022serviceResource\u0022 in the dialog",
            "example": "write",
            "type": "string"
          },
          "authorizationAttribute": {
            "description": "Contains an authorization resource attributeId, that can used in custom authorization rules in the XACML service\npolicy, which by default is the policy belonging to the service referred to by \u0022serviceResource\u0022 in the dialog.\n            \nCan also be used to refer to other service policies.",
            "example": "mycustomresource\n/* equivalent to the above */\nurn:altinn:subresource:mycustomresource\nurn:altinn:task:Task_1\n/* refer to another service */\nurn:altinn:resource:some-other-service-identifier",
            "nullable": true,
            "type": "string"
          },
          "endpoints": {
            "description": "The endpoints associated with the action.",
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogsQueriesGet_GetDialogDialogApiActionEndpointDto"
            },
            "type": "array"
          },
          "id": {
            "description": "The unique identifier for the action in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "isAuthorized": {
            "description": "True if the authenticated user is authorized for this action. If not, the action will not be available\nand all endpoints will be replaced with a fixed placeholder.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "V1EndUserDialogsQueriesGet_GetDialogDialogApiActionEndpointDto": {
        "additionalProperties": false,
        "properties": {
          "deprecated": {
            "description": "Boolean indicating if the endpoint is deprecated. Integrators should migrate to endpoints with a higher version.",
            "type": "boolean"
          },
          "documentationUrl": {
            "description": "Link to service provider documentation for the endpoint. Used for service owners to provide documentation for\nintegrators. Should be a URL to a human-readable page.",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "httpMethod": {
            "description": "The HTTP method that the endpoint expects for this action.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainHttp_HttpVerb_Values"
              }
            ]
          },
          "id": {
            "description": "The unique identifier for the endpoint in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "requestSchema": {
            "description": "Link to the request schema for the endpoint. Used by service owners to provide documentation for integrators.\nDialogporten will not validate information on this endpoint.",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "responseSchema": {
            "description": "Link to the response schema for the endpoint. Used for service owners to provide documentation for integrators.\nDialogporten will not validate information on this endpoint.",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "sunsetAt": {
            "description": "Date and time when the service owner has indicated that endpoint will no longer function. Only set if the endpoint\nis deprecated. Dialogporten will not enforce this date.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "The fully qualified URL of the API endpoint. Will be set to \u0022urn:dialogporten:unauthorized\u0022 if the user is\nnot authorized to perform the action.",
            "example": "https://someendpoint.com/api/v1/someaction\nurn:dialogporten:unauthorized",
            "format": "uri",
            "type": "string"
          },
          "version": {
            "description": "Arbitrary string indicating the version of the endpoint.\n            \nConsult the service-specific documentation provided by the service owner for details (if in use).",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1EndUserDialogsQueriesGet_GetDialogDialogAttachmentDto": {
        "additionalProperties": false,
        "properties": {
          "displayName": {
            "description": "The display name of the attachment that should be used in GUIs.",
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_LocalizationDto"
            },
            "type": "array"
          },
          "id": {
            "description": "The unique identifier for the attachment in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "urls": {
            "description": "The URLs associated with the attachment, each referring to a different representation of the attachment.",
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogsQueriesGet_GetDialogDialogAttachmentUrlDto"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "V1EndUserDialogsQueriesGet_GetDialogDialogAttachmentUrlDto": {
        "additionalProperties": false,
        "properties": {
          "consumerType": {
            "description": "What type of consumer the URL is intended for.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainAttachments_AttachmentUrlConsumerType_Values"
              }
            ]
          },
          "id": {
            "description": "The unique identifier for the attachment URL in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "mediaType": {
            "description": "The media type of the attachment.",
            "example": "application/pdf\napplication/zip",
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "The fully qualified URL of the attachment.",
            "example": "https://someendpoint.com/someattachment.pdf",
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1EndUserDialogsQueriesGet_GetDialogDialogGuiActionDto": {
        "additionalProperties": false,
        "properties": {
          "action": {
            "description": "The action identifier for the action, corresponding to the \u0022action\u0022 attributeId used in the XACML service policy,",
            "type": "string"
          },
          "authorizationAttribute": {
            "description": "Contains an authorization resource attributeId, that can used in custom authorization rules in the XACML service\npolicy, which by default is the policy belonging to the service referred to by \u0022serviceResource\u0022 in the dialog.\n            \nCan also be used to refer to other service policies.",
            "example": "mycustomresource\n/* equivalent to the above */\nurn:altinn:subresource:mycustomresource\nurn:altinn:task:Task_1\n/* refer to another service */\nurn:altinn:resource:some-other-service-identifier",
            "nullable": true,
            "type": "string"
          },
          "httpMethod": {
            "description": "The HTTP method that the frontend should use when redirecting the user.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainHttp_HttpVerb_Values"
              }
            ]
          },
          "id": {
            "description": "The unique identifier for the action in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "isAuthorized": {
            "description": "Whether the user is authorized to perform the action.",
            "type": "boolean"
          },
          "isDeleteDialogAction": {
            "description": "Indicates whether the action results in the dialog being deleted. Used by frontends to implement custom UX\nfor delete actions.",
            "type": "boolean"
          },
          "priority": {
            "description": "Indicates a priority for the action, making it possible for frontends to adapt GUI elements based on action\npriority.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntitiesActions_DialogGuiActionPriority_Values"
              }
            ]
          },
          "prompt": {
            "description": "If there should be a prompt asking the user for confirmation before the action is executed,\nthis field should contain the prompt text.",
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_LocalizationDto"
            },
            "nullable": true,
            "type": "array"
          },
          "title": {
            "description": "The title of the action, this should be short and in verb form.",
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_LocalizationDto"
            },
            "type": "array"
          },
          "url": {
            "description": "The fully qualified URL of the action, to which the user will be redirected when the action is triggered. Will be set to\n\u0022urn:dialogporten:unauthorized\u0022 if the user is not authorized to perform the action.",
            "example": "urn:dialogporten:unauthorized\nhttps://someendpoint.com/gui/some-service-instance-id",
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1EndUserDialogsQueriesGet_GetDialogDialogSeenLogDto": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "description": "The unique identifier for the seen log entry in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "isCurrentEndUser": {
            "description": "Flag indicating whether the seen log entry was created by the current end user.",
            "type": "boolean"
          },
          "isViaServiceOwner": {
            "description": "Flag indicating whether the seen log entry was created via the service owner.\n            \nThis is used when the service owner uses the service owner API to implement its own frontend.",
            "nullable": true,
            "type": "boolean"
          },
          "seenAt": {
            "description": "The timestamp when the dialog revision was seen",
            "format": "date-time",
            "type": "string"
          },
          "seenBy": {
            "description": "The actor that saw the dialog revision",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1EndUserDialogsQueriesGet_GetDialogDialogSeenLogSeenByActorDto"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1EndUserDialogsQueriesGet_GetDialogDialogSeenLogSeenByActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "description": "The identifier of the person/business that saw the dialog revision.",
            "example": "urn:altinn:person:identifier-no:01125512345\nurn:altinn:organization:identifier-no:912345678",
            "type": "string"
          },
          "actorName": {
            "description": "The natural name of the person/business that saw the dialog revision.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1EndUserDialogsQueriesGet_GetDialogDialogTransmissionAttachmentDto": {
        "additionalProperties": false,
        "properties": {
          "displayName": {
            "description": "The display name of the attachment that should be used in GUIs.",
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_LocalizationDto"
            },
            "type": "array"
          },
          "id": {
            "description": "The unique identifier for the attachment in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "urls": {
            "description": "The URLs associated with the attachment, each referring to a different representation of the attachment.",
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogsQueriesGet_GetDialogDialogTransmissionAttachmentUrlDto"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "V1EndUserDialogsQueriesGet_GetDialogDialogTransmissionAttachmentUrlDto": {
        "additionalProperties": false,
        "properties": {
          "consumerType": {
            "description": "The type of consumer the URL is intended for.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainAttachments_AttachmentUrlConsumerType_Values"
              }
            ]
          },
          "mediaType": {
            "description": "The media type of the attachment.",
            "example": "application/pdf\napplication/zip",
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "The fully qualified URL of the attachment. Will be set to \u0022urn:dialogporten:unauthorized\u0022 if the user is\nnot authorized to access the transmission.",
            "example": "https://someendpoint.com/someattachment.pdf\nurn:dialogporten:unauthorized",
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1EndUserDialogsQueriesGet_GetDialogDialogTransmissionContentDto": {
        "additionalProperties": false,
        "properties": {
          "contentReference": {
            "description": "Front-channel embedded content. Used to dynamically embed content in the frontend from an external URL.\nAllowed media types: application/vnd.dialogporten.frontchannelembed\u002Bjson;type=markdown",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "summary": {
            "description": "The transmission summary.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "title": {
            "description": "The transmission title.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1EndUserDialogsQueriesGet_GetDialogDialogTransmissionDto": {
        "additionalProperties": false,
        "properties": {
          "attachments": {
            "description": "The transmission-level attachments",
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogsQueriesGet_GetDialogDialogTransmissionAttachmentDto"
            },
            "type": "array"
          },
          "authorizationAttribute": {
            "description": "Contains an authorization resource attributeId, that can used in custom authorization rules in the XACML service\npolicy, which by default is the policy belonging to the service referred to by \u0022serviceResource\u0022 in the dialog.\n            \nCan also be used to refer to other service policies.",
            "example": "mycustomresource\n/* equivalent to the above */\nurn:altinn:subresource:mycustomresource\nurn:altinn:task:Task_1\n/* refer to another service */\nurn:altinn:resource:some-other-service-identifier",
            "nullable": true,
            "type": "string"
          },
          "content": {
            "description": "The transmission unstructured text content",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1EndUserDialogsQueriesGet_GetDialogDialogTransmissionContentDto"
              }
            ]
          },
          "createdAt": {
            "description": "The date and time when the transmission was created.",
            "format": "date-time",
            "type": "string"
          },
          "extendedType": {
            "description": "Arbitrary URI/URN describing a service-specific transmission type.\n            \nRefer to the service-specific documentation provided by the service owner for details (if in use).",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The unique identifier for the transmission in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "isAuthorized": {
            "description": "Flag indicating if the authenticated user is authorized for this transmission. If not, embedded content and\nthe attachments will not be available",
            "type": "boolean"
          },
          "relatedTransmissionId": {
            "description": "Reference to any other transmission that this transmission is related to.",
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "sender": {
            "description": "The actor that sent the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1EndUserDialogsQueriesGet_GetDialogDialogTransmissionSenderActorDto"
              }
            ]
          },
          "type": {
            "description": "The type of transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntitiesTransmissions_DialogTransmissionType_Values"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1EndUserDialogsQueriesGet_GetDialogDialogTransmissionSenderActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "description": "The identifier of the person or organization that sent the transmission.",
            "example": "urn:altinn:person:identifier-no:12018212345",
            "type": "string"
          },
          "actorName": {
            "description": "The name of the person or organization that sent the transmission.",
            "example": "Ola Nordmann",
            "type": "string"
          },
          "actorType": {
            "description": "The type of actor that sent the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainActors_ActorType_Values"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1EndUserDialogsQueriesGet_GetDialogDto": {
        "additionalProperties": false,
        "properties": {
          "activities": {
            "description": "An immutable list of activities associated with the dialog.",
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogsQueriesGet_GetDialogDialogActivityDto"
            },
            "type": "array"
          },
          "apiActions": {
            "description": "The API actions associated with the dialog. Should be used in specialized, non-browser-based integrations.",
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogsQueriesGet_GetDialogDialogApiActionDto"
            },
            "type": "array"
          },
          "attachments": {
            "description": "The attachments associated with the dialog (on an aggregate level)",
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogsQueriesGet_GetDialogDialogAttachmentDto"
            },
            "type": "array"
          },
          "content": {
            "description": "The dialog unstructured text content",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1EndUserDialogsQueriesGet_GetDialogContentDto"
              }
            ]
          },
          "createdAt": {
            "description": "The date and time when the dialog was created.",
            "example": "2022-12-31T23:59:59Z",
            "format": "date-time",
            "type": "string"
          },
          "dialogToken": {
            "description": "The dialog token. May be used (if supported) against external URLs referred to in this dialog\u0027s apiActions,\ntransmissions or attachments. Should also be used for front-channel embeds.",
            "nullable": true,
            "type": "string"
          },
          "dueAt": {
            "description": "The due date for the dialog. Dialogs past due date might be marked as such in frontends but will still be available.",
            "example": "2022-12-31T23:59:59Z",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "expiresAt": {
            "description": "The expiration date for the dialog. This is the last date when the dialog is available for the end user.\n            \nAfter this date is passed, the dialog will be considered expired and no longer available for the end user in any\nAPI. If not supplied, the dialog will be considered to never expire. This field can be changed by the service\nowner after the dialog has been created.",
            "example": "2022-12-31T23:59:59Z",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "extendedStatus": {
            "description": "Arbitrary string with a service-specific indicator of status, typically used to indicate a fine-grained state of\nthe dialog to further specify the \u0022status\u0022 enum.\n            \nRefer to the service-specific documentation provided by the service owner for details on the possible values (if\nin use).",
            "nullable": true,
            "type": "string"
          },
          "externalReference": {
            "description": "Arbitrary string with a service-specific reference to an external system or service.\n            \nRefer to the service-specific documentation provided by the service owner for details (if in use).",
            "nullable": true,
            "type": "string"
          },
          "guiActions": {
            "description": "The GUI actions associated with the dialog. Should be used in browser-based interactive frontends.",
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogsQueriesGet_GetDialogDialogGuiActionDto"
            },
            "type": "array"
          },
          "id": {
            "description": "The unique identifier for the dialog in UUIDv7 format.",
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d",
            "format": "guid",
            "type": "string"
          },
          "org": {
            "description": "The service owner code representing the organization (service owner) related to this dialog.",
            "example": "ske",
            "type": "string"
          },
          "party": {
            "description": "The party code representing the organization or person that the dialog belongs to in URN format",
            "example": "urn:altinn:person:identifier-no:01125512345\nurn:altinn:organization:identifier-no:912345678",
            "type": "string"
          },
          "precedingProcess": {
            "description": "Optional preceding process identifier to indicate the business process that preceded the process indicated in the \u0022Process\u0022 field. Cannot be set without also \u0022Process\u0022 being set.",
            "nullable": true,
            "type": "string"
          },
          "process": {
            "description": "Optional process identifier used to indicate a business process this dialog belongs to",
            "nullable": true,
            "type": "string"
          },
          "progress": {
            "description": "Advisory indicator of progress, represented as 1-100 percentage value. 100% representing a dialog that has come\nto a natural completion (successful or not).",
            "format": "int32",
            "nullable": true,
            "type": "integer"
          },
          "revision": {
            "description": "The unique identifier for the revision in UUIDv4 format.",
            "example": "a312cb9c-7632-43c2-aa38-69b06aed56ca",
            "format": "guid",
            "type": "string"
          },
          "seenSinceLastUpdate": {
            "description": "The list of seen log entries for the dialog newer than the dialog ChangedAt date.",
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogsQueriesGet_GetDialogDialogSeenLogDto"
            },
            "type": "array"
          },
          "serviceResource": {
            "description": "The service identifier for the service that the dialog is related to in URN-format.\nThis corresponds to a service resource in the Altinn Resource Registry.",
            "example": "urn:altinn:resource:some-service-identifier",
            "type": "string"
          },
          "serviceResourceType": {
            "description": "The ServiceResource type, as defined in Altinn Resource Registry (see ResourceType)",
            "type": "string"
          },
          "status": {
            "description": "The aggregated status of the dialog.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntities_DialogStatus_Values"
              }
            ]
          },
          "systemLabel": {
            "description": "Current display state.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogEndUserContextsEntities_SystemLabel_Values"
              }
            ]
          },
          "transmissions": {
            "description": "The immutable list of transmissions associated with the dialog",
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogsQueriesGet_GetDialogDialogTransmissionDto"
            },
            "type": "array"
          },
          "updatedAt": {
            "description": "The date and time when the dialog was last updated.",
            "example": "2022-12-31T23:59:59Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1EndUserDialogsQueriesSearch_SearchDialogContentDto": {
        "additionalProperties": false,
        "properties": {
          "extendedStatus": {
            "description": "Used as the human-readable label used to describe the \u0022ExtendedStatus\u0022 field.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "senderName": {
            "description": "Overridden sender name. If not supplied, assume \u0022org\u0022 as the sender name.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "summary": {
            "description": "A short summary of the dialog and its current state.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "title": {
            "description": "The title of the dialog.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1EndUserDialogsQueriesSearch_SearchDialogDialogActivityDto": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "description": "The date and time when the activity was created.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Unstructured text describing the activity. Only set if the activity type is \u0022Information\u0022.",
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_LocalizationDto"
            },
            "type": "array"
          },
          "extendedType": {
            "description": "An arbitrary string with a service-specific activity type.\n            \nConsult the service-specific documentation provided by the service owner for details (if in use).",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The unique identifier for the activity in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "performedBy": {
            "description": "The actor that performed the activity.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1EndUserDialogsQueriesSearch_SearchDialogDialogActivityPerformedByActorDto"
              }
            ]
          },
          "transmissionId": {
            "description": "If the activity is related to a particular transmission, this field will contain the transmission identifier.",
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "The type of activity.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntitiesActivities_DialogActivityType_Values"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1EndUserDialogsQueriesSearch_SearchDialogDialogActivityPerformedByActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "description": "The identifier of the person or organization that performed the activity.\nMay be omitted if ActorType is \u0022ServiceOwner\u0022.",
            "nullable": true,
            "type": "string"
          },
          "actorName": {
            "description": "The name of the person or organization that performed the activity.\nOnly set if the actor type is \u0022PartyRepresentative\u0022.",
            "nullable": true,
            "type": "string"
          },
          "actorType": {
            "description": "What type of actor performed the activity.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainActors_ActorType_Values"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1EndUserDialogsQueriesSearch_SearchDialogDialogSeenLogDto": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "description": "The unique identifier for the seen log entry in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "isCurrentEndUser": {
            "description": "Flag indicating whether the seen log entry was created by the current end user.",
            "type": "boolean"
          },
          "isViaServiceOwner": {
            "description": "Flag indicating whether the seen log entry was created via the service owner.\n            \nThis is used when the service owner uses the service owner API to implement its own frontend.",
            "nullable": true,
            "type": "boolean"
          },
          "seenAt": {
            "description": "The timestamp when the dialog revision was seen",
            "format": "date-time",
            "type": "string"
          },
          "seenBy": {
            "description": "The actor that saw the dialog revision",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1EndUserDialogsQueriesSearch_SearchDialogDialogSeenLogSeenByActorDto"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1EndUserDialogsQueriesSearch_SearchDialogDialogSeenLogSeenByActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "description": "The identifier of the person/business that saw the dialog revision.",
            "example": "urn:altinn:person:identifier-no:01125512345\nurn:altinn:organization:identifier-no:912345678",
            "type": "string"
          },
          "actorName": {
            "description": "The natural name of the person/business that saw the dialog revision.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1EndUserDialogsQueriesSearch_SearchDialogDto": {
        "additionalProperties": false,
        "properties": {
          "content": {
            "description": "The content of the dialog in search results",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1EndUserDialogsQueriesSearch_SearchDialogContentDto"
              }
            ]
          },
          "createdAt": {
            "description": "The date and time when the dialog was created.",
            "example": "2022-12-31T23:59:59Z",
            "format": "date-time",
            "type": "string"
          },
          "dueAt": {
            "description": "The due date for the dialog. This is the last date when the dialog is expected to be completed.",
            "example": "2022-12-31T23:59:59Z",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "extendedStatus": {
            "description": "Arbitrary string with a service-specific indicator of status, typically used to indicate a fine-grained state of\nthe dialog to further specify the \u0022status\u0022 enum.\n            \nRefer to the service-specific documentation provided by the service owner for details on the possible values (if\nin use).",
            "nullable": true,
            "type": "string"
          },
          "guiAttachmentCount": {
            "description": "The number of attachments in the dialog made available for browser-based frontends.",
            "format": "int32",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier for the dialog in UUIDv7 format.",
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d",
            "format": "guid",
            "type": "string"
          },
          "latestActivity": {
            "description": "The latest entry in the dialog\u0027s activity log.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1EndUserDialogsQueriesSearch_SearchDialogDialogActivityDto"
              }
            ]
          },
          "org": {
            "description": "The service owner code representing the organization (service owner) related to this dialog.",
            "example": "ske",
            "type": "string"
          },
          "party": {
            "description": "The party code representing the organization or person that the dialog belongs to in URN format",
            "example": "urn:altinn:person:identifier-no:01125512345\nurn:altinn:organization:identifier-no:912345678",
            "type": "string"
          },
          "precedingProcess": {
            "description": "Optional preceding process identifier to indicate the business process that preceded the process indicated in the \u0022Process\u0022 field. Cannot be set without also \u0022Process\u0022 being set. ",
            "nullable": true,
            "type": "string"
          },
          "process": {
            "description": "Optional process identifier used to indicate a business process this dialog belongs to ",
            "nullable": true,
            "type": "string"
          },
          "progress": {
            "description": "Advisory indicator of progress, represented as 1-100 percentage value. 100% representing a dialog that has come\nto a natural completion (successful or not).",
            "format": "int32",
            "nullable": true,
            "type": "integer"
          },
          "seenSinceLastUpdate": {
            "description": "The list of seen log entries for the dialog newer than the dialog ChangedAt date.",
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogsQueriesSearch_SearchDialogDialogSeenLogDto"
            },
            "type": "array"
          },
          "serviceResource": {
            "description": "The service identifier for the service that the dialog is related to in URN-format.\nThis corresponds to a service resource in the Altinn Resource Registry.",
            "example": "urn:altinn:resource:some-service-identifier",
            "type": "string"
          },
          "serviceResourceType": {
            "description": "The ServiceResource type, as defined in Altinn Resource Registry (see ResourceType)",
            "type": "string"
          },
          "status": {
            "description": "The aggregated status of the dialog.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntities_DialogStatus_Values"
              }
            ]
          },
          "systemLabel": {
            "description": "Current display state.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogEndUserContextsEntities_SystemLabel_Values"
              }
            ]
          },
          "updatedAt": {
            "description": "The date and time when the dialog was last updated.",
            "example": "2022-12-31T23:59:59Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1EndUserDialogSystemLabelsCommandsSet_SetDialogSystemLabelCommand": {
        "additionalProperties": false,
        "properties": {
          "ifMatchDialogRevision": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "label": {
            "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogEndUserContextsEntities_SystemLabel_Values"
          }
        },
        "type": "object"
      },
      "V1EndUserDialogTransmissionsQueriesGet_GetDialogTransmissionAttachmentDto": {
        "additionalProperties": false,
        "properties": {
          "displayName": {
            "description": "The display name of the attachment that should be used in GUIs.",
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_LocalizationDto"
            },
            "type": "array"
          },
          "id": {
            "description": "The unique identifier for the attachment in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "urls": {
            "description": "The URLs associated with the attachment, each referring to a different representation of the attachment.",
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogTransmissionsQueriesGet_GetDialogTransmissionAttachmentUrlDto"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "V1EndUserDialogTransmissionsQueriesGet_GetDialogTransmissionAttachmentUrlDto": {
        "additionalProperties": false,
        "properties": {
          "consumerType": {
            "description": "The type of consumer the URL is intended for.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainAttachments_AttachmentUrlConsumerType_Values"
              }
            ]
          },
          "id": {
            "description": "The unique identifier for the attachment URL in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "mediaType": {
            "description": "The media type of the attachment.",
            "example": "application/pdf\napplication/zip",
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "The fully qualified URL of the attachment. Will be set to \u0022urn:dialogporten:unauthorized\u0022 if the user is\nnot authorized to access the transmission.",
            "example": "https://someendpoint.com/someattachment.pdf\nurn:dialogporten:unauthorized",
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1EndUserDialogTransmissionsQueriesGet_GetDialogTransmissionContentDto": {
        "additionalProperties": false,
        "properties": {
          "contentReference": {
            "description": "Front-channel embedded content. Used to dynamically embed content in the frontend from an external URL.\nAllowed media types: application/vnd.dialogporten.frontchannelembed\u002Bjson;type=markdown",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "summary": {
            "description": "The summary of the content.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "title": {
            "description": "The title of the content.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1EndUserDialogTransmissionsQueriesGet_GetDialogTransmissionDto": {
        "additionalProperties": false,
        "properties": {
          "attachments": {
            "description": "The attachments associated with the transmission.",
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogTransmissionsQueriesGet_GetDialogTransmissionAttachmentDto"
            },
            "type": "array"
          },
          "authorizationAttribute": {
            "description": "The authorization attribute associated with the transmission.",
            "nullable": true,
            "type": "string"
          },
          "content": {
            "description": "The content of the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1EndUserDialogTransmissionsQueriesGet_GetDialogTransmissionContentDto"
              }
            ]
          },
          "createdAt": {
            "description": "The date and time when the transmission was created.",
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "description": "The date and time when the transmission was deleted, if applicable.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "extendedType": {
            "description": "The extended type URI for the transmission.",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The unique identifier for the transmission in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "isAuthorized": {
            "description": "Flag indicating if the authenticated user is authorized for this transmission. If not, embedded content and\nthe attachments will not be available",
            "type": "boolean"
          },
          "relatedTransmissionId": {
            "description": "The unique identifier for the related transmission, if any.",
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "sender": {
            "description": "The sender actor information for the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1EndUserDialogTransmissionsQueriesGet_GetDialogTransmissionSenderActorDto"
              }
            ]
          },
          "type": {
            "description": "The type of the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntitiesTransmissions_DialogTransmissionType_Values"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1EndUserDialogTransmissionsQueriesGet_GetDialogTransmissionSenderActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "description": "The identifier of the actor.",
            "type": "string"
          },
          "actorName": {
            "description": "The name of the actor.",
            "type": "string"
          },
          "actorType": {
            "description": "The type of the actor.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainActors_ActorType_Values"
              }
            ]
          },
          "id": {
            "description": "The unique identifier for the sender actor in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1EndUserDialogTransmissionsQueriesSearch_SearchDialogTransmissionAttachmentDto": {
        "additionalProperties": false,
        "properties": {
          "displayName": {
            "description": "The display name of the attachment that should be used in GUIs.",
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_LocalizationDto"
            },
            "type": "array"
          },
          "id": {
            "description": "The unique identifier for the attachment in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "urls": {
            "description": "The URLs associated with the attachment, each referring to a different representation of the attachment.",
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogTransmissionsQueriesSearch_SearchDialogTransmissionAttachmentUrlDto"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "V1EndUserDialogTransmissionsQueriesSearch_SearchDialogTransmissionAttachmentUrlDto": {
        "additionalProperties": false,
        "properties": {
          "consumerType": {
            "description": "The type of consumer the URL is intended for.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainAttachments_AttachmentUrlConsumerType_Values"
              }
            ]
          },
          "id": {
            "description": "The unique identifier for the attachment URL in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "mediaType": {
            "description": "The media type of the attachment.",
            "example": "application/pdf\napplication/zip",
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "The fully qualified URL of the attachment. Will be set to \u0022urn:dialogporten:unauthorized\u0022 if the user is\nnot authorized to access the transmission.",
            "example": "https://someendpoint.com/someattachment.pdf\nurn:dialogporten:unauthorized",
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1EndUserDialogTransmissionsQueriesSearch_SearchDialogTransmissionContentDto": {
        "additionalProperties": false,
        "properties": {
          "contentReference": {
            "description": "Front-channel embedded content. Used to dynamically embed content in the frontend from an external URL.\nAllowed media types: application/vnd.dialogporten.frontchannelembed\u002Bjson;type=markdown",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "summary": {
            "description": "The summary of the content.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "title": {
            "description": "The title of the content.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1EndUserDialogTransmissionsQueriesSearch_SearchDialogTransmissionDto": {
        "additionalProperties": false,
        "properties": {
          "attachments": {
            "description": "The attachments associated with the transmission.",
            "items": {
              "$ref": "#/components/schemas/V1EndUserDialogTransmissionsQueriesSearch_SearchDialogTransmissionAttachmentDto"
            },
            "type": "array"
          },
          "authorizationAttribute": {
            "description": "The authorization attribute associated with the transmission.",
            "nullable": true,
            "type": "string"
          },
          "content": {
            "description": "The content of the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1EndUserDialogTransmissionsQueriesSearch_SearchDialogTransmissionContentDto"
              }
            ]
          },
          "createdAt": {
            "description": "The date and time when the transmission was created.",
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "description": "The date and time when the transmission was deleted, if applicable.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "extendedType": {
            "description": "The extended type URI for the transmission.",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The unique identifier for the transmission in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "isAuthorized": {
            "description": "Flag indicating if the authenticated user is authorized for this transmission. If not, embedded content and\nthe attachments will not be available",
            "type": "boolean"
          },
          "relatedTransmissionId": {
            "description": "The unique identifier for the related transmission, if any.",
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "sender": {
            "description": "The sender actor information for the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1EndUserDialogTransmissionsQueriesSearch_SearchDialogTransmissionSenderActorDto"
              }
            ]
          },
          "type": {
            "description": "The type of the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntitiesTransmissions_DialogTransmissionType_Values"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1EndUserDialogTransmissionsQueriesSearch_SearchDialogTransmissionSenderActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "description": "The identifier of the actor.",
            "type": "string"
          },
          "actorName": {
            "description": "The name of the actor.",
            "type": "string"
          },
          "actorType": {
            "description": "The type of the actor.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainActors_ActorType_Values"
              }
            ]
          },
          "id": {
            "description": "The unique identifier for the sender actor in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1EndUserPartiesQueriesGet_AuthorizedPartyDto": {
        "additionalProperties": false,
        "properties": {
          "hasKeyRole": {
            "type": "boolean"
          },
          "hasOnlyAccessToSubParties": {
            "type": "boolean"
          },
          "isAccessManager": {
            "type": "boolean"
          },
          "isCurrentEndUser": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isMainAdministrator": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "party": {
            "type": "string"
          },
          "partyType": {
            "type": "string"
          },
          "subParties": {
            "items": {
              "$ref": "#/components/schemas/V1EndUserPartiesQueriesGet_AuthorizedPartyDto"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "V1EndUserPartiesQueriesGet_GetPartiesDto": {
        "additionalProperties": false,
        "properties": {
          "authorizedParties": {
            "items": {
              "$ref": "#/components/schemas/V1EndUserPartiesQueriesGet_AuthorizedPartyDto"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogActivitiesCreate_CreateDialogActivityRequest": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "description": "If supplied, overrides the creating date and time for the transmission.\nIf not supplied, the current date /time will be used.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Unstructured text describing the activity. Only set if the activity type is \u0022Information\u0022.",
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_LocalizationDto"
            },
            "type": "array"
          },
          "extendedType": {
            "description": "Arbitrary URI/URN describing a service-specific transmission type.",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The UUDIv7 of the action may be provided to support idempotent additions to the list of activities.\nIf not supplied, a new UUIDv7 will be generated.",
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d",
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "performedBy": {
            "description": "The actor that performed the activity.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogDialogActivityPerformedByActorDto"
              }
            ]
          },
          "transmissionId": {
            "description": "If the activity is related to a particular transmission, this field will contain the transmission identifier.\nMust be present in the request body.",
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "The type of transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntitiesActivities_DialogActivityType_Values"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogActivitiesQueriesGet_GetDialogActivityDto": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_LocalizationDto"
            },
            "type": "array"
          },
          "extendedType": {
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "format": "guid",
            "type": "string"
          },
          "performedBy": {
            "$ref": "#/components/schemas/V1ServiceOwnerDialogActivitiesQueriesGet_GetDialogActivityPerformedByActorDto"
          },
          "transmissionId": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntitiesActivities_DialogActivityType_Values"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogActivitiesQueriesGet_GetDialogActivityPerformedByActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "nullable": true,
            "type": "string"
          },
          "actorName": {
            "nullable": true,
            "type": "string"
          },
          "actorType": {
            "$ref": "#/components/schemas/DigdirDomainDialogportenDomainActors_ActorType_Values"
          },
          "id": {
            "format": "guid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogActivitiesQueriesNotificationCondition_NotificationConditionDto": {
        "additionalProperties": false,
        "properties": {
          "sendNotification": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogActivitiesQueriesNotificationCondition_NotificationConditionType": {
        "description": "",
        "enum": [
          "NotExists",
          "Exists"
        ],
        "type": "string",
        "x-enumNames": [
          "NotExists",
          "Exists"
        ]
      },
      "V1ServiceOwnerDialogActivitiesQueriesSearch_SearchDialogActivityDto": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "extendedType": {
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "format": "guid",
            "type": "string"
          },
          "transmissionId": {
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntitiesActivities_DialogActivityType_Values"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsCommandsCreate_CreateDialogCommand": {
        "additionalProperties": false,
        "properties": {
          "activities": {
            "description": "An immutable list of activities associated with the dialog.",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsCreate_CreateDialogDialogActivityDto"
            },
            "type": "array"
          },
          "apiActions": {
            "description": "The API actions associated with the dialog. Should be used in specialized, non-browser-based integrations.",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsCreate_CreateDialogDialogApiActionDto"
            },
            "type": "array"
          },
          "attachments": {
            "description": "The attachments associated with the dialog (on an aggregate level)",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsCreate_CreateDialogDialogAttachmentDto"
            },
            "type": "array"
          },
          "content": {
            "description": "The dialog unstructured text content",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsCreate_CreateDialogContentDto"
              }
            ]
          },
          "createdAt": {
            "description": "If set, will override the date and time when the dialog is set as created\nIf not supplied, the current date /time will be used.",
            "example": "2022-12-31T23:59:59Z",
            "format": "date-time",
            "type": "string"
          },
          "dueAt": {
            "description": "The due date for the dialog. Dialogs past due date might be marked as such in frontends but will still be available.",
            "example": "2022-12-31T23:59:59Z",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "expiresAt": {
            "description": "The expiration date for the dialog. This is the last date when the dialog is available for the end user.\n            \nAfter this date is passed, the dialog will be considered expired and no longer available for the end user in any\nAPI. If not supplied, the dialog will be considered to never expire. This field can be changed after creation.",
            "example": "2022-12-31T23:59:59Z",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "extendedStatus": {
            "description": "Arbitrary string with a service-specific indicator of status, typically used to indicate a fine-grained state of\nthe dialog to further specify the \u0022status\u0022 enum.",
            "nullable": true,
            "type": "string"
          },
          "externalReference": {
            "description": "Arbitrary string with a service-specific reference to an external system or service.",
            "nullable": true,
            "type": "string"
          },
          "guiActions": {
            "description": "The GUI actions associated with the dialog. Should be used in browser-based interactive frontends.",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsCreate_CreateDialogDialogGuiActionDto"
            },
            "type": "array"
          },
          "id": {
            "description": "A self-defined UUIDv7 may be provided in order to support idempotent creation of dialogs. If not provided, a new UUIDv7 will be generated.",
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d",
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "party": {
            "description": "The party code representing the organization or person that the dialog belongs to in URN format",
            "example": "urn:altinn:person:identifier-no:01125512345\nurn:altinn:organization:identifier-no:912345678",
            "type": "string"
          },
          "precedingProcess": {
            "description": "Optional preceding process identifier to indicate the business process that preceded the process indicated in the \u0022Process\u0022 field. Cannot be set without also \u0022Process\u0022 being set.",
            "nullable": true,
            "type": "string"
          },
          "process": {
            "description": "Optional process identifier used to indicate a business process this dialog belongs to",
            "nullable": true,
            "type": "string"
          },
          "progress": {
            "description": "Advisory indicator of progress, represented as 1-100 percentage value. 100% representing a dialog that has come\nto a natural completion (successful or not).",
            "format": "int32",
            "nullable": true,
            "type": "integer"
          },
          "searchTags": {
            "description": "A list of words (tags) that will be used in dialog search queries. Not visible in end-user DTO.",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsCreate_CreateDialogSearchTagDto"
            },
            "type": "array"
          },
          "serviceResource": {
            "description": "The service identifier for the service that the dialog is related to in URN-format.\nThis corresponds to a resource in the Altinn Resource Registry, which the authenticated organization\nmust own, i.e., be listed as the \u0022competent authority\u0022 in the Resource Registry entry.",
            "example": "urn:altinn:resource:some-service-identifier",
            "type": "string"
          },
          "status": {
            "description": "The aggregated status of the dialog.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntities_DialogStatus_Values"
              }
            ]
          },
          "systemLabel": {
            "description": "Set the system label of the dialog Migration purposes",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogEndUserContextsEntities_SystemLabel_Values"
              }
            ]
          },
          "transmissions": {
            "description": "The immutable list of transmissions associated with the dialog",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsCreate_CreateDialogDialogTransmissionDto"
            },
            "type": "array"
          },
          "updatedAt": {
            "description": "If set, will override the date and time when the dialog is set as last updated\nIf not supplied, the current date /time will be used.",
            "example": "2022-12-31T23:59:59Z",
            "format": "date-time",
            "type": "string"
          },
          "visibleFrom": {
            "description": "The timestamp when the dialog should be made visible for authorized end users. If not provided, the dialog will be\nimmediately available.",
            "example": "2022-12-31T23:59:59Z",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsCommandsCreate_CreateDialogContentDto": {
        "additionalProperties": false,
        "properties": {
          "additionalInfo": {
            "description": "Additional information about the dialog.\nSupported media types: text/plain, text/markdown",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "extendedStatus": {
            "description": "Used as the human-readable label used to describe the \u0022ExtendedStatus\u0022 field.\nSupported media types: text/plain",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "mainContentReference": {
            "description": "Front-channel embedded content. Used to dynamically embed content in the frontend from an external URL. Must be HTTPS.\nSupported media types: application/vnd.dialogporten.frontchannelembed\u002Bjson;type=markdown",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "senderName": {
            "description": "Overridden sender name. If not supplied, assume \u0022org\u0022 as the sender name. Must be text/plain if supplied.\nSupported media types: text/plain",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "summary": {
            "description": "A short summary of the dialog and its current state.\nSupported media types: text/plain",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "title": {
            "description": "The title of the dialog.\nSupported media types: text/plain",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsCommandsCreate_CreateDialogDialogActivityDto": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "description": "If supplied, overrides the creating date and time for the transmission.\nIf not supplied, the current date /time will be used.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Unstructured text describing the activity. Only set if the activity type is \u0022Information\u0022.",
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_LocalizationDto"
            },
            "type": "array"
          },
          "extendedType": {
            "description": "Arbitrary URI/URN describing a service-specific transmission type.",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "A self-defined UUIDv7 may be provided in order to support idempotent creation of activities. If not provided, a new UUIDv7 will be generated.",
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d",
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "performedBy": {
            "description": "The actor that performed the activity.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsCreate_CreateDialogDialogActivityPerformedByActorDto"
              }
            ]
          },
          "transmissionId": {
            "description": "If the activity is related to a particular transmission, this field will contain the transmission identifier.\nMust be present in the request body.",
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "The type of transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntitiesActivities_DialogActivityType_Values"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsCommandsCreate_CreateDialogDialogActivityPerformedByActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "description": "The identifier of the person or organization that performed the activity. Mutually exclusive with ActorName.\nMight be omitted if ActorType is \u0022ServiceOwner\u0022.",
            "example": "urn:altinn:person:identifier-no:12018212345",
            "nullable": true,
            "type": "string"
          },
          "actorName": {
            "description": "Specifies the name of the entity that performed the activity. Mutually exclusive with ActorId. If ActorId\nis supplied, the name will be automatically populated from the name registries.",
            "example": "Ola Nordmann",
            "nullable": true,
            "type": "string"
          },
          "actorType": {
            "description": "What type of actor performed the activity.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainActors_ActorType_Values"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsCommandsCreate_CreateDialogDialogApiActionDto": {
        "additionalProperties": false,
        "properties": {
          "action": {
            "description": "String identifier for the action, corresponding to the \u0022action\u0022 attributeId used in the XACML service policy,\nwhich by default is the policy belonging to the service referred to by \u0022serviceResource\u0022 in the dialog",
            "example": "write",
            "type": "string"
          },
          "authorizationAttribute": {
            "description": "Contains an authorization resource attributeId, that can used in custom authorization rules in the XACML service\npolicy, which by default is the policy belonging to the service referred to by \u0022serviceResource\u0022 in the dialog.\n            \nCan also be used to refer to other service policies.",
            "example": "mycustomresource\n/* equivalent to the above */\nurn:altinn:subresource:mycustomresource\nurn:altinn:task:Task_1\n/* refer to another service */\nurn:altinn:resource:some-other-service-identifier",
            "nullable": true,
            "type": "string"
          },
          "endpoints": {
            "description": "The endpoints associated with the action.",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsCreate_CreateDialogDialogApiActionEndpointDto"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsCommandsCreate_CreateDialogDialogApiActionEndpointDto": {
        "additionalProperties": false,
        "properties": {
          "deprecated": {
            "description": "Boolean indicating if the endpoint is deprecated.",
            "type": "boolean"
          },
          "documentationUrl": {
            "description": "Link to documentation for the endpoint, providing documentation for integrators. Should be a URL to a\nhuman-readable page.",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "httpMethod": {
            "description": "The HTTP method that the endpoint expects for this action.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainHttp_HttpVerb_Values"
              }
            ]
          },
          "requestSchema": {
            "description": "Link to the request schema for the endpoint. Used to provide documentation for integrators.\nDialogporten will not validate information on this endpoint.",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "responseSchema": {
            "description": "Link to the response schema for the endpoint. Used to provide documentation for integrators.\nDialogporten will not validate information on this endpoint.",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "sunsetAt": {
            "description": "Date and time when the endpoint will no longer function. Only set if the endpoint is deprecated. Dialogporten\nwill not enforce this date.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "The fully qualified URL of the API endpoint.",
            "format": "uri",
            "type": "string"
          },
          "version": {
            "description": "Arbitrary string indicating the version of the endpoint.",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsCommandsCreate_CreateDialogDialogAttachmentDto": {
        "additionalProperties": false,
        "properties": {
          "displayName": {
            "description": "The display name of the attachment that should be used in GUIs.",
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_LocalizationDto"
            },
            "type": "array"
          },
          "urls": {
            "description": "The URLs associated with the attachment, each referring to a different representation of the attachment.",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsCreate_CreateDialogDialogAttachmentUrlDto"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsCommandsCreate_CreateDialogDialogAttachmentUrlDto": {
        "additionalProperties": false,
        "properties": {
          "consumerType": {
            "description": "The type of consumer the URL is intended for.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainAttachments_AttachmentUrlConsumerType_Values"
              }
            ]
          },
          "mediaType": {
            "description": "The media type of the attachment.",
            "example": "application/pdf\napplication/zip",
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "The fully qualified URL of the attachment.",
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsCommandsCreate_CreateDialogDialogGuiActionDto": {
        "additionalProperties": false,
        "properties": {
          "action": {
            "description": "The action identifier for the action, corresponding to the \u0022action\u0022 attributeId used in the XACML service policy,",
            "type": "string"
          },
          "authorizationAttribute": {
            "description": "Contains an authorization resource attributeId, that can used in custom authorization rules in the XACML service\npolicy, which by default is the policy belonging to the service referred to by \u0022serviceResource\u0022 in the dialog.\n            \nCan also be used to refer to other service policies.",
            "example": "mycustomresource\n/* equivalent to the above */\nurn:altinn:subresource:mycustomresource\nurn:altinn:task:Task_1\n/* refer to another service */\nurn:altinn:resource:some-other-service-identifier",
            "nullable": true,
            "type": "string"
          },
          "httpMethod": {
            "description": "The HTTP method that the frontend should use when redirecting the user.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainHttp_HttpVerb_Values"
              }
            ]
          },
          "isDeleteDialogAction": {
            "description": "Indicates whether the action results in the dialog being deleted. Used by frontends to implement custom UX\nfor delete actions.",
            "type": "boolean"
          },
          "priority": {
            "description": "Indicates a priority for the action, making it possible for frontends to adapt GUI elements based on action\npriority.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntitiesActions_DialogGuiActionPriority_Values"
              }
            ]
          },
          "prompt": {
            "description": "If there should be a prompt asking the user for confirmation before the action is executed,\nthis field should contain the prompt text.",
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_LocalizationDto"
            },
            "nullable": true,
            "type": "array"
          },
          "title": {
            "description": "The title of the action, this should be short and in verb form. Must be text/plain.",
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_LocalizationDto"
            },
            "type": "array"
          },
          "url": {
            "description": "The fully qualified URL of the action, to which the user will be redirected when the action is triggered. Will be set to\n\u0022urn:dialogporten:unauthorized\u0022 if the user is not authorized to perform the action.",
            "example": "urn:dialogporten:unauthorized\nhttps://someendpoint.com/gui/some-service-instance-id",
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsCommandsCreate_CreateDialogDialogTransmissionContentDto": {
        "additionalProperties": false,
        "properties": {
          "contentReference": {
            "description": "Front-channel embedded content. Used to dynamically embed content in the frontend from an external URL. Must be HTTPS.\nAllowed media types: application/vnd.dialogporten.frontchannelembed\u002Bjson;type=markdown",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "summary": {
            "description": "The transmission summary.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "title": {
            "description": "The transmission title. Must be text/plain.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsCommandsCreate_CreateDialogDialogTransmissionDto": {
        "additionalProperties": false,
        "properties": {
          "attachments": {
            "description": "The transmission-level attachments",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsCreate_CreateDialogTransmissionAttachmentDto"
            },
            "type": "array"
          },
          "authorizationAttribute": {
            "description": "Contains an authorization resource attributeId, that can used in custom authorization rules in the XACML service\npolicy, which by default is the policy belonging to the service referred to by \u0022serviceResource\u0022 in the dialog.\n            \nCan also be used to refer to other service policies.",
            "example": "mycustomresource\n/* equivalent to the above */\nurn:altinn:subresource:mycustomresource\nurn:altinn:task:Task_1\n/* refer to another service */\nurn:altinn:resource:some-other-service-identifier",
            "nullable": true,
            "type": "string"
          },
          "content": {
            "description": "The transmission unstructured text content",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsCreate_CreateDialogDialogTransmissionContentDto"
              }
            ]
          },
          "createdAt": {
            "description": "If supplied, overrides the creating date and time for the transmission\nIf not supplied, the current date /time will be used.",
            "format": "date-time",
            "type": "string"
          },
          "extendedType": {
            "description": "Arbitrary URI/URN describing a service-specific transmission type.\n            \nRefer to the service-specific documentation provided by the service owner for details (if in use).",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "A self-defined UUIDv7 may be provided in order to support idempotent creation of transmissions. If not provided, a new UUIDv7 will be generated.",
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d",
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "relatedTransmissionId": {
            "description": "Reference to any other transmission that this transmission is related to.",
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "sender": {
            "description": "The actor that sent the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsCreate_CreateDialogDialogTransmissionSenderActorDto"
              }
            ]
          },
          "type": {
            "description": "The type of transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntitiesTransmissions_DialogTransmissionType_Values"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsCommandsCreate_CreateDialogDialogTransmissionSenderActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "description": "The identifier of the person or organization that sent the transmission. Mutually exclusive with ActorName.\nMight be omitted if ActorType is \u0022ServiceOwner\u0022.",
            "example": "urn:altinn:person:identifier-no:12018212345",
            "nullable": true,
            "type": "string"
          },
          "actorName": {
            "description": "Specifies the name of the entity that sent the transmission. Mutually exclusive with ActorId. If ActorId\nis supplied, the name will be automatically populated from the name registries.",
            "example": "Ola Nordmann",
            "nullable": true,
            "type": "string"
          },
          "actorType": {
            "description": "The type of actor that sent the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainActors_ActorType_Values"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsCommandsCreate_CreateDialogSearchTagDto": {
        "additionalProperties": false,
        "properties": {
          "value": {
            "description": "A search tag value.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsCommandsCreate_CreateDialogTransmissionAttachmentDto": {
        "additionalProperties": false,
        "properties": {
          "displayName": {
            "description": "The display name of the attachment that should be used in GUIs.",
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_LocalizationDto"
            },
            "type": "array"
          },
          "id": {
            "description": "A self-defined UUIDv7 may be provided to support idempotent creation of transmission attachments. If not provided, a new UUIDv7 will be generated.",
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d",
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "urls": {
            "description": "The URLs associated with the attachment, each referring to a different representation of the attachment.",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsCreate_CreateDialogTransmissionAttachmentUrlDto"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsCommandsCreate_CreateDialogTransmissionAttachmentUrlDto": {
        "additionalProperties": false,
        "properties": {
          "consumerType": {
            "description": "The type of consumer the URL is intended for.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainAttachments_AttachmentUrlConsumerType_Values"
              }
            ]
          },
          "mediaType": {
            "description": "The media type of the attachment.",
            "example": "application/pdf\napplication/zip",
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "The fully qualified URL of the attachment.",
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogContentDto": {
        "additionalProperties": false,
        "properties": {
          "additionalInfo": {
            "description": "Additional information about the dialog, this may contain Markdown.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "extendedStatus": {
            "description": "Used as the human-readable label used to describe the \u0022ExtendedStatus\u0022 field. Must be text/plain.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "mainContentReference": {
            "description": "Front-channel embedded content. Used to dynamically embed content in the frontend from an external URL. Must be HTTPS.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "senderName": {
            "description": "Overridden sender name. If not supplied, assume \u0022org\u0022 as the sender name. Must be text/plain if supplied.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "summary": {
            "description": "A short summary of the dialog and its current state. Must be text/plain.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "title": {
            "description": "The title of the dialog. Must be text/plain.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogDialogActivityDto": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "description": "If supplied, overrides the creating date and time for the transmission.\nIf not supplied, the current date /time will be used.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Unstructured text describing the activity. Only set if the activity type is \u0022Information\u0022.",
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_LocalizationDto"
            },
            "type": "array"
          },
          "extendedType": {
            "description": "Arbitrary URI/URN describing a service-specific transmission type.",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The UUDIv7 of the action may be provided to support idempotent additions to the list of activities.\nIf not supplied, a new UUIDv7 will be generated.",
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d",
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "performedBy": {
            "description": "The actor that performed the activity.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogDialogActivityPerformedByActorDto"
              }
            ]
          },
          "transmissionId": {
            "description": "If the activity is related to a particular transmission, this field will contain the transmission identifier.\nMust be present in the request body.",
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "The type of transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntitiesActivities_DialogActivityType_Values"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogDialogActivityPerformedByActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "description": "The identifier of the person or organization that performed the activity. Mutually exclusive with ActorName.\nMight be omitted if ActorType is \u0022ServiceOwner\u0022.",
            "example": "urn:altinn:person:identifier-no:12018212345",
            "nullable": true,
            "type": "string"
          },
          "actorName": {
            "description": "Specifies the name of the entity that performed the activity. Mutually exclusive with ActorId. If ActorId\nis supplied, the name will be automatically populated from the name registries.",
            "example": "Ola Nordmann",
            "nullable": true,
            "type": "string"
          },
          "actorType": {
            "description": "What type of actor performed the activity.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainActors_ActorType_Values"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogDialogApiActionDto": {
        "additionalProperties": false,
        "properties": {
          "action": {
            "description": "String identifier for the action, corresponding to the \u0022action\u0022 attributeId used in the XACML service policy,\nwhich by default is the policy belonging to the service referred to by \u0022serviceResource\u0022 in the dialog",
            "example": "write",
            "type": "string"
          },
          "authorizationAttribute": {
            "description": "Contains an authorization resource attributeId, that can used in custom authorization rules in the XACML service\npolicy, which by default is the policy belonging to the service referred to by \u0022serviceResource\u0022 in the dialog.\n            \nCan also be used to refer to other service policies.",
            "example": "mycustomresource\n/* equivalent to the above */\nurn:altinn:subresource:mycustomresource\nurn:altinn:task:Task_1\n/* refer to another service */\nurn:altinn:resource:some-other-service-identifier",
            "nullable": true,
            "type": "string"
          },
          "endpoints": {
            "description": "The endpoints associated with the action.",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogDialogApiActionEndpointDto"
            },
            "type": "array"
          },
          "id": {
            "description": "A UUIDv7 used for merging existing data, unknown IDs will be ignored as this entity does not support user-defined IDs.",
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d",
            "format": "guid",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogDialogApiActionEndpointDto": {
        "additionalProperties": false,
        "properties": {
          "deprecated": {
            "description": "Boolean indicating if the endpoint is deprecated.",
            "type": "boolean"
          },
          "documentationUrl": {
            "description": "Link to documentation for the endpoint, providing documentation for integrators. Should be a URL to a\nhuman-readable page.",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "httpMethod": {
            "description": "The HTTP method that the endpoint expects for this action.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainHttp_HttpVerb_Values"
              }
            ]
          },
          "id": {
            "description": "A UUIDv7 used for merging existing data, unknown IDs will be ignored as this entity does not support user-defined IDs.",
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d",
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "requestSchema": {
            "description": "Link to the request schema for the endpoint. Used to provide documentation for integrators.\nDialogporten will not validate information on this endpoint.",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "responseSchema": {
            "description": "Link to the response schema for the endpoint. Used to provide documentation for integrators.\nDialogporten will not validate information on this endpoint.",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "sunsetAt": {
            "description": "Date and time when the endpoint will no longer function. Only set if the endpoint is deprecated. Dialogporten\nwill not enforce this date.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "The fully qualified URL of the API endpoint.",
            "format": "uri",
            "type": "string"
          },
          "version": {
            "description": "Arbitrary string indicating the version of the endpoint.",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogDialogAttachmentDto": {
        "additionalProperties": false,
        "properties": {
          "displayName": {
            "description": "The display name of the attachment that should be used in GUIs.",
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_LocalizationDto"
            },
            "type": "array"
          },
          "id": {
            "description": "A UUIDv7 used for merging existing data, unknown IDs will be ignored as this entity does not support user-defined IDs.",
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d",
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "urls": {
            "description": "The URLs associated with the attachment, each referring to a different representation of the attachment.",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogDialogAttachmentUrlDto"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogDialogAttachmentUrlDto": {
        "additionalProperties": false,
        "properties": {
          "consumerType": {
            "description": "The type of consumer the URL is intended for.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainAttachments_AttachmentUrlConsumerType_Values"
              }
            ]
          },
          "id": {
            "description": "A UUIDv7 used for merging existing data, unknown IDs will be ignored as this entity does not support user-defined IDs.",
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d",
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "mediaType": {
            "description": "The media type of the attachment.",
            "example": "application/pdf\napplication/zip",
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "The fully qualified URL of the attachment.",
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogDialogGuiActionDto": {
        "additionalProperties": false,
        "properties": {
          "action": {
            "description": "The action identifier for the action, corresponding to the \u0022action\u0022 attributeId used in the XACML service policy,",
            "type": "string"
          },
          "authorizationAttribute": {
            "description": "Contains an authorization resource attributeId, that can used in custom authorization rules in the XACML service\npolicy, which by default is the policy belonging to the service referred to by \u0022serviceResource\u0022 in the dialog.\n            \nCan also be used to refer to other service policies.",
            "example": "mycustomresource\n/* equivalent to the above */\nurn:altinn:subresource:mycustomresource\nurn:altinn:task:Task_1\n/* refer to another service */\nurn:altinn:resource:some-other-service-identifier",
            "nullable": true,
            "type": "string"
          },
          "httpMethod": {
            "description": "The HTTP method that the frontend should use when redirecting the user.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainHttp_HttpVerb_Values"
              }
            ]
          },
          "id": {
            "description": "A UUIDv7 used for merging existing data, unknown IDs will be ignored as this entity does not support user-defined IDs.",
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d",
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "isDeleteDialogAction": {
            "description": "Indicates whether the action results in the dialog being deleted. Used by frontends to implement custom UX\nfor delete actions.",
            "type": "boolean"
          },
          "priority": {
            "description": "Indicates a priority for the action, making it possible for frontends to adapt GUI elements based on action\npriority.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntitiesActions_DialogGuiActionPriority_Values"
              }
            ]
          },
          "prompt": {
            "description": "If there should be a prompt asking the user for confirmation before the action is executed,\nthis field should contain the prompt text.",
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_LocalizationDto"
            },
            "nullable": true,
            "type": "array"
          },
          "title": {
            "description": "The title of the action, this should be short and in verb form. Must be text/plain.",
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_LocalizationDto"
            },
            "type": "array"
          },
          "url": {
            "description": "The fully qualified URL of the action, to which the user will be redirected when the action is triggered. Will be set to\n\u0022urn:dialogporten:unauthorized\u0022 if the user is not authorized to perform the action.",
            "example": "urn:dialogporten:unauthorized\nhttps://someendpoint.com/gui/some-service-instance-id",
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogDialogTransmissionContentDto": {
        "additionalProperties": false,
        "properties": {
          "contentReference": {
            "description": "Front-channel embedded content. Used to dynamically embed content in the frontend from an external URL. Must be HTTPS.\nAllowed media types: application/vnd.dialogporten.frontchannelembed\u002Bjson;type=markdown",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "summary": {
            "description": "The transmission summary.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "title": {
            "description": "The transmission title. Must be text/plain.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogDialogTransmissionDto": {
        "additionalProperties": false,
        "properties": {
          "attachments": {
            "description": "The transmission-level attachments",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogTransmissionAttachmentDto"
            },
            "type": "array"
          },
          "authorizationAttribute": {
            "description": "Contains an authorization resource attributeId, that can used in custom authorization rules in the XACML service\npolicy, which by default is the policy belonging to the service referred to by \u0022serviceResource\u0022 in the dialog.\n            \nCan also be used to refer to other service policies.",
            "example": "mycustomresource\n/* equivalent to the above */\nurn:altinn:subresource:mycustomresource\nurn:altinn:task:Task_1\n/* refer to another service */\nurn:altinn:resource:some-other-service-identifier",
            "nullable": true,
            "type": "string"
          },
          "content": {
            "description": "The transmission unstructured text content",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogDialogTransmissionContentDto"
              }
            ]
          },
          "createdAt": {
            "description": "If supplied, overrides the creating date and time for the transmission.\nIf not supplied, the current date /time will be used.",
            "format": "date-time",
            "type": "string"
          },
          "extendedType": {
            "description": "Arbitrary URI/URN describing a service-specific transmission type.\n            \nRefer to the service-specific documentation provided by the service owner for details (if in use).",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The UUDIv7 of the action may be provided to support idempotent additions to the list of transmissions.\nIf not supplied, a new UUIDv7 will be generated.",
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d",
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "relatedTransmissionId": {
            "description": "Reference to any other transmission that this transmission is related to.",
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "sender": {
            "description": "The actor that sent the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogDialogTransmissionSenderActorDto"
              }
            ]
          },
          "type": {
            "description": "The type of transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntitiesTransmissions_DialogTransmissionType_Values"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogDialogTransmissionSenderActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "description": "The identifier of the person or organization that sent the transmission. Mutually exclusive with ActorName.\nMight be omitted if ActorType is \u0022ServiceOwner\u0022.",
            "example": "urn:altinn:person:identifier-no:12018212345",
            "nullable": true,
            "type": "string"
          },
          "actorName": {
            "description": "Specifies the name of the entity that sent the transmission. Mutually exclusive with ActorId. If ActorId\nis supplied, the name will be automatically populated from the name registries.",
            "example": "Ola Nordmann",
            "nullable": true,
            "type": "string"
          },
          "actorType": {
            "description": "The type of actor that sent the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainActors_ActorType_Values"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogDto": {
        "additionalProperties": false,
        "properties": {
          "activities": {
            "description": "An immutable list of activities associated with the dialog. When updating via PUT, any activities added here\nwill be appended to the existing list of activities.",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogDialogActivityDto"
            },
            "type": "array"
          },
          "apiActions": {
            "description": "The API actions associated with the dialog. Should be used in specialized, non-browser-based integrations.",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogDialogApiActionDto"
            },
            "type": "array"
          },
          "attachments": {
            "description": "The attachments associated with the dialog (on an aggregate level)",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogDialogAttachmentDto"
            },
            "type": "array"
          },
          "content": {
            "description": "The dialog unstructured text content",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogContentDto"
              }
            ]
          },
          "dueAt": {
            "description": "The due date for the dialog. Dialogs past due date might be marked as such in frontends but will still be available.",
            "example": "2022-12-31T23:59:59Z",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "expiresAt": {
            "description": "The expiration date for the dialog. This is the last date when the dialog is available for the end user.\n            \nAfter this date is passed, the dialog will be considered expired and no longer available for the end user in any\nAPI. If not supplied, the dialog will be considered to never expire. This field can be changed after creation.",
            "example": "2022-12-31T23:59:59Z",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "extendedStatus": {
            "description": "Arbitrary string with a service-specific indicator of status, typically used to indicate a fine-grained state of\nthe dialog to further specify the \u0022status\u0022 enum.",
            "nullable": true,
            "type": "string"
          },
          "externalReference": {
            "description": "Arbitrary string with a service-specific reference to an external system or service.",
            "nullable": true,
            "type": "string"
          },
          "guiActions": {
            "description": "The GUI actions associated with the dialog. Should be used in browser-based interactive frontends.",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogDialogGuiActionDto"
            },
            "type": "array"
          },
          "progress": {
            "description": "Advisory indicator of progress, represented as 1-100 percentage value. 100% representing a dialog that has come\nto a natural completion (successful or not).",
            "format": "int32",
            "nullable": true,
            "type": "integer"
          },
          "searchTags": {
            "description": "A list of words (tags) that will be used in dialog search queries. Not visible in end-user DTO.",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogSearchTagDto"
            },
            "type": "array"
          },
          "status": {
            "description": "The aggregated status of the dialog.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntities_DialogStatus_Values"
              }
            ]
          },
          "transmissions": {
            "description": "The immutable list of transmissions associated with the dialog. When updating via PUT, any transmissions\nadded here will be appended to the existing list of transmissions.",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogDialogTransmissionDto"
            },
            "type": "array"
          },
          "visibleFrom": {
            "description": "The timestamp when the dialog should be made visible for authorized end users. If not provided, the dialog will be\nimmediately available.",
            "example": "2022-12-31T23:59:59Z",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogSearchTagDto": {
        "additionalProperties": false,
        "properties": {
          "value": {
            "description": "A search tag value.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogTransmissionAttachmentDto": {
        "additionalProperties": false,
        "properties": {
          "displayName": {
            "description": "The display name of the attachment that should be used in GUIs.",
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_LocalizationDto"
            },
            "type": "array"
          },
          "id": {
            "description": "A self-defined UUIDv7 may be provided to support idempotent creation of transmission attachments. If not provided, a new UUIDv7 will be generated.",
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d",
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "urls": {
            "description": "The URLs associated with the attachment, each referring to a different representation of the attachment.",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogTransmissionAttachmentUrlDto"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogTransmissionAttachmentUrlDto": {
        "additionalProperties": false,
        "properties": {
          "consumerType": {
            "description": "The type of consumer the URL is intended for.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainAttachments_AttachmentUrlConsumerType_Values"
              }
            ]
          },
          "mediaType": {
            "description": "The media type of the attachment.",
            "example": "application/pdf\napplication/zip",
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "The fully qualified URL of the attachment.",
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogSeenLogsQueriesGet_GetDialogSeenLogDto": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "format": "guid",
            "type": "string"
          },
          "isViaServiceOwner": {
            "nullable": true,
            "type": "boolean"
          },
          "seenAt": {
            "format": "date-time",
            "type": "string"
          },
          "seenBy": {
            "$ref": "#/components/schemas/V1ServiceOwnerDialogSeenLogsQueriesGet_GetDialogSeenLogSeenByActorDto"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogSeenLogsQueriesGet_GetDialogSeenLogSeenByActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "type": "string"
          },
          "actorName": {
            "type": "string"
          },
          "id": {
            "format": "guid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogSeenLogsQueriesSearch_SearchSeenLogDto": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "format": "guid",
            "type": "string"
          },
          "isViaServiceOwner": {
            "nullable": true,
            "type": "boolean"
          },
          "seenAt": {
            "format": "date-time",
            "type": "string"
          },
          "seenBy": {
            "$ref": "#/components/schemas/V1ServiceOwnerDialogSeenLogsQueriesSearch_SearchSeenLogSeenByActorDto"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogSeenLogsQueriesSearch_SearchSeenLogSeenByActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "type": "string"
          },
          "actorName": {
            "type": "string"
          },
          "id": {
            "format": "guid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsQueriesGet_GetDialogContentDto": {
        "additionalProperties": false,
        "properties": {
          "additionalInfo": {
            "description": "Additional information about the dialog, this may contain Markdown.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "extendedStatus": {
            "description": "Used as the human-readable label used to describe the \u0022ExtendedStatus\u0022 field.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "mainContentReference": {
            "description": "Front-channel embedded content. Used to dynamically embed content in the frontend from an external URL. Must be HTTPS.\nAllowed media types: application/vnd.dialogporten.frontchannelembed\u002Bjson;type=markdown",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "senderName": {
            "description": "Overridden sender name. If not supplied, assume \u0022org\u0022 as the sender name.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "summary": {
            "description": "A short summary of the dialog and its current state.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "title": {
            "description": "The title of the dialog.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsQueriesGet_GetDialogDialogActivityDto": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "description": "The date and time when the activity was created.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Unstructured text describing the activity. Only set if the activity type is \u0022Information\u0022.",
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_LocalizationDto"
            },
            "type": "array"
          },
          "extendedType": {
            "description": "An arbitrary URI/URN with a service-specific activity type.\n            \nConsult the service-specific documentation provided by the service owner for details (if in use).",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The unique identifier for the activity in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "performedBy": {
            "description": "The actor that performed the activity.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_GetDialogDialogActivityPerformedByActorDto"
              }
            ]
          },
          "transmissionId": {
            "description": "If the activity is related to a particular transmission, this field will contain the transmission identifier.",
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "The type of activity.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntitiesActivities_DialogActivityType_Values"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsQueriesGet_GetDialogDialogActivityPerformedByActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "description": "The identifier of the person or organization that performed the activity.\nMay be omitted if ActorType is \u0022ServiceOwner\u0022.",
            "nullable": true,
            "type": "string"
          },
          "actorName": {
            "description": "The name of the person or organization that performed the activity.\nOnly set if the actor type is \u0022PartyRepresentative\u0022.",
            "nullable": true,
            "type": "string"
          },
          "actorType": {
            "description": "What type of actor performed the activity.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainActors_ActorType_Values"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsQueriesGet_GetDialogDialogApiActionDto": {
        "additionalProperties": false,
        "properties": {
          "action": {
            "description": "String identifier for the action, corresponding to the \u0022action\u0022 attributeId used in the XACML service policy,\nwhich by default is the policy belonging to the service referred to by \u0022serviceResource\u0022 in the dialog",
            "example": "write",
            "type": "string"
          },
          "authorizationAttribute": {
            "description": "Contains an authorization resource attributeId, that can used in custom authorization rules in the XACML service\npolicy, which by default is the policy belonging to the service referred to by \u0022serviceResource\u0022 in the dialog.\n            \nCan also be used to refer to other service policies.",
            "example": "mycustomresource\n/* equivalent to the above */\nurn:altinn:subresource:mycustomresource\nurn:altinn:task:Task_1\n/* refer to another service */\nurn:altinn:resource:some-other-service-identifier",
            "nullable": true,
            "type": "string"
          },
          "endpoints": {
            "description": "The endpoints associated with the action.",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_GetDialogDialogApiActionEndpointDto"
            },
            "type": "array"
          },
          "id": {
            "description": "The unique identifier for the action in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "isAuthorized": {
            "description": "True if the authenticated user (set in the query) is authorized for this action.",
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsQueriesGet_GetDialogDialogApiActionEndpointDto": {
        "additionalProperties": false,
        "properties": {
          "deprecated": {
            "description": "Boolean indicating if the endpoint is deprecated. Integrators should migrate to endpoints with a higher version.",
            "type": "boolean"
          },
          "documentationUrl": {
            "description": "Link to service provider documentation for the endpoint. Used for service owners to provide documentation for\nintegrators. Should be a URL to a human-readable page.",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "httpMethod": {
            "description": "The HTTP method that the endpoint expects for this action.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainHttp_HttpVerb_Values"
              }
            ]
          },
          "id": {
            "description": "The unique identifier for the endpoint in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "requestSchema": {
            "description": "Link to the request schema for the endpoint. Used by service owners to provide documentation for integrators.\nDialogporten will not validate information on this endpoint.",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "responseSchema": {
            "description": "Link to the response schema for the endpoint. Used for service owners to provide documentation for integrators.\nDialogporten will not validate information on this endpoint.",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "sunsetAt": {
            "description": "Date and time when the service owner has indicated that endpoint will no longer function. Only set if the endpoint\nis deprecated. Dialogporten will not enforce this date.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "The fully qualified URL of the API endpoint.",
            "format": "uri",
            "type": "string"
          },
          "version": {
            "description": "Arbitrary string indicating the version of the endpoint.\n            \nConsult the service-specific documentation provided by the service owner for details (if in use).",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsQueriesGet_GetDialogDialogAttachmentDto": {
        "additionalProperties": false,
        "properties": {
          "displayName": {
            "description": "The display name of the attachment that should be used in GUIs.",
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_LocalizationDto"
            },
            "type": "array"
          },
          "id": {
            "description": "The unique identifier for the attachment in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "urls": {
            "description": "The URLs associated with the attachment, each referring to a different representation of the attachment.",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_GetDialogDialogAttachmentUrlDto"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsQueriesGet_GetDialogDialogAttachmentUrlDto": {
        "additionalProperties": false,
        "properties": {
          "consumerType": {
            "description": "What type of consumer the URL is intended for.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainAttachments_AttachmentUrlConsumerType_Values"
              }
            ]
          },
          "id": {
            "description": "The unique identifier for the attachment URL in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "mediaType": {
            "description": "The media type of the attachment.",
            "example": "application/pdf\napplication/zip",
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "The fully qualified URL of the attachment.",
            "example": "https://someendpoint.com/someattachment.pdf",
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsQueriesGet_GetDialogDialogGuiActionDto": {
        "additionalProperties": false,
        "properties": {
          "action": {
            "description": "The action identifier for the action, corresponding to the \u0022action\u0022 attributeId used in the XACML service policy,",
            "type": "string"
          },
          "authorizationAttribute": {
            "description": "Contains an authorization resource attributeId, that can used in custom authorization rules in the XACML service\npolicy, which by default is the policy belonging to the service referred to by \u0022serviceResource\u0022 in the dialog.\n            \nCan also be used to refer to other service policies.",
            "example": "mycustomresource\n/* equivalent to the above */\nurn:altinn:subresource:mycustomresource\nurn:altinn:task:Task_1\n/* refer to another service */\nurn:altinn:resource:some-other-service-identifier",
            "nullable": true,
            "type": "string"
          },
          "httpMethod": {
            "description": "The HTTP method that the frontend should use when redirecting the user.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainHttp_HttpVerb_Values"
              }
            ]
          },
          "id": {
            "description": "The unique identifier for the action in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "isAuthorized": {
            "description": "Whether the user, if supplied in the query, is authorized to perform the action.",
            "nullable": true,
            "type": "boolean"
          },
          "isDeleteDialogAction": {
            "description": "Indicates whether the action results in the dialog being deleted. Used by frontends to implement custom UX\nfor delete actions.",
            "type": "boolean"
          },
          "priority": {
            "description": "Indicates a priority for the action, making it possible for frontends to adapt GUI elements based on action\npriority.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntitiesActions_DialogGuiActionPriority_Values"
              }
            ]
          },
          "prompt": {
            "description": "If there should be a prompt asking the user for confirmation before the action is executed,\nthis field should contain the prompt text.",
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_LocalizationDto"
            },
            "nullable": true,
            "type": "array"
          },
          "title": {
            "description": "The title of the action, this should be short and in verb form.",
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_LocalizationDto"
            },
            "type": "array"
          },
          "url": {
            "description": "The fully qualified URL of the action, to which the user will be redirected when the action is triggered.",
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsQueriesGet_GetDialogDialogSeenLogDto": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "description": "The unique identifier for the seen log entry in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "isCurrentEndUser": {
            "description": "Flag indicating whether the seen log entry was created by the current end user, if provided in the query",
            "type": "boolean"
          },
          "isViaServiceOwner": {
            "description": "Flag indicating whether the seen log entry was created via the service owner.\n            \nThis is used when the service owner uses the service owner API to implement its own frontend.",
            "nullable": true,
            "type": "boolean"
          },
          "seenAt": {
            "description": "The timestamp when the dialog revision was seen",
            "format": "date-time",
            "type": "string"
          },
          "seenBy": {
            "description": "The actor that saw the dialog revision",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_GetDialogDialogSeenLogSeenByActorDto"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsQueriesGet_GetDialogDialogSeenLogSeenByActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "description": "The identifier of the person/business that saw the dialog revision.",
            "example": "urn:altinn:person:identifier-no:01125512345\nurn:altinn:organization:identifier-no:912345678",
            "type": "string"
          },
          "actorName": {
            "description": "The natural name of the person/business that saw the dialog revision.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsQueriesGet_GetDialogDialogTransmissionAttachmentDto": {
        "additionalProperties": false,
        "properties": {
          "displayName": {
            "description": "The display name of the attachment that should be used in GUIs.",
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_LocalizationDto"
            },
            "type": "array"
          },
          "id": {
            "description": "The unique identifier for the attachment in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "urls": {
            "description": "The URLs associated with the attachment, each referring to a different representation of the attachment.",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_GetDialogDialogTransmissionAttachmentUrlDto"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsQueriesGet_GetDialogDialogTransmissionAttachmentUrlDto": {
        "additionalProperties": false,
        "properties": {
          "consumerType": {
            "description": "The type of consumer the URL is intended for.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainAttachments_AttachmentUrlConsumerType_Values"
              }
            ]
          },
          "mediaType": {
            "description": "The media type of the attachment.",
            "example": "application/pdf\napplication/zip",
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "The fully qualified URL of the attachment. Will be set to \u0022urn:dialogporten:unauthorized\u0022 if the user is\nnot authorized to access the transmission.",
            "example": "https://someendpoint.com/someattachment.pdf\nurn:dialogporten:unauthorized",
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsQueriesGet_GetDialogDialogTransmissionContentDto": {
        "additionalProperties": false,
        "properties": {
          "contentReference": {
            "description": "Front-channel embedded content. Used to dynamically embed content in the frontend from an external URL. Must be HTTPS.\nAllowed media types: application/vnd.dialogporten.frontchannelembed\u002Bjson;type=markdown",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "summary": {
            "description": "The transmission summary.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "title": {
            "description": "The transmission title.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsQueriesGet_GetDialogDialogTransmissionDto": {
        "additionalProperties": false,
        "properties": {
          "attachments": {
            "description": "The transmission-level attachments",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_GetDialogDialogTransmissionAttachmentDto"
            },
            "type": "array"
          },
          "authorizationAttribute": {
            "description": "Contains an authorization resource attributeId, that can used in custom authorization rules in the XACML service\npolicy, which by default is the policy belonging to the service referred to by \u0022serviceResource\u0022 in the dialog.\n            \nCan also be used to refer to other service policies.",
            "example": "mycustomresource\n/* equivalent to the above */\nurn:altinn:subresource:mycustomresource\nurn:altinn:task:Task_1\n/* refer to another service */\nurn:altinn:resource:some-other-service-identifier",
            "nullable": true,
            "type": "string"
          },
          "content": {
            "description": "The transmission unstructured text content",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_GetDialogDialogTransmissionContentDto"
              }
            ]
          },
          "createdAt": {
            "description": "The date and time when the transmission was created.",
            "format": "date-time",
            "type": "string"
          },
          "extendedType": {
            "description": "Arbitrary URI/URN describing a service-specific transmission type.\n            \nRefer to the service-specific documentation provided by the service owner for details (if in use).",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The unique identifier for the transmission in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "isAuthorized": {
            "description": "Flag indicating if the authenticated user supplied in the query is authorized for this transmission.",
            "nullable": true,
            "type": "boolean"
          },
          "relatedTransmissionId": {
            "description": "Reference to any other transmission that this transmission is related to.",
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "sender": {
            "description": "The actor that sent the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_GetDialogDialogTransmissionSenderActorDto"
              }
            ]
          },
          "type": {
            "description": "The type of transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntitiesTransmissions_DialogTransmissionType_Values"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsQueriesGet_GetDialogDialogTransmissionSenderActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "description": "The identifier of the person or organization that sent the transmission.",
            "example": "urn:altinn:person:identifier-no:12018212345",
            "type": "string"
          },
          "actorName": {
            "description": "The name of the person or organization that sent the transmission.",
            "example": "Ola Nordmann",
            "type": "string"
          },
          "actorType": {
            "description": "The type of actor that sent the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainActors_ActorType_Values"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsQueriesGet_GetDialogDto": {
        "additionalProperties": false,
        "properties": {
          "activities": {
            "description": "An immutable list of activities associated with the dialog.",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_GetDialogDialogActivityDto"
            },
            "type": "array"
          },
          "apiActions": {
            "description": "The API actions associated with the dialog. Should be used in specialized, non-browser-based integrations.",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_GetDialogDialogApiActionDto"
            },
            "type": "array"
          },
          "attachments": {
            "description": "The attachments associated with the dialog (on an aggregate level)",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_GetDialogDialogAttachmentDto"
            },
            "type": "array"
          },
          "content": {
            "description": "The dialog unstructured text content",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_GetDialogContentDto"
              }
            ]
          },
          "createdAt": {
            "description": "The date and time when the dialog was created.",
            "example": "2022-12-31T23:59:59Z",
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "description": "If deleted, the date and time when the deletion was performed.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "dueAt": {
            "description": "The due date for the dialog. Dialogs past due date might be marked as such in frontends but will still be available.",
            "example": "2022-12-31T23:59:59Z",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "expiresAt": {
            "description": "The expiration date for the dialog. This is the last date when the dialog is available for the end user.\n            \nAfter this date is passed, the dialog will be considered expired and no longer available for the end user in any\nAPI. If not supplied, the dialog will be considered to never expire. This field can be changed by the service\nowner after the dialog has been created.",
            "example": "2022-12-31T23:59:59Z",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "extendedStatus": {
            "description": "Arbitrary string with a service-specific indicator of status, typically used to indicate a fine-grained state of\nthe dialog to further specify the \u0022status\u0022 enum.\n            \nRefer to the service-specific documentation provided by the service owner for details on the possible values (if\nin use).",
            "nullable": true,
            "type": "string"
          },
          "externalReference": {
            "description": "Arbitrary string with a service-specific reference to an external system or service.\n            \nRefer to the service-specific documentation provided by the service owner for details (if in use).",
            "nullable": true,
            "type": "string"
          },
          "guiActions": {
            "description": "The GUI actions associated with the dialog. Should be used in browser-based interactive frontends.",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_GetDialogDialogGuiActionDto"
            },
            "type": "array"
          },
          "id": {
            "description": "The unique identifier for the dialog in UUIDv7 format.",
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d",
            "format": "guid",
            "type": "string"
          },
          "org": {
            "description": "The service owner code representing the organization (service owner) related to this dialog.",
            "example": "ske",
            "type": "string"
          },
          "party": {
            "description": "The party code representing the organization or person that the dialog belongs to in URN format",
            "example": "urn:altinn:person:identifier-no:01125512345\nurn:altinn:organization:identifier-no:912345678",
            "type": "string"
          },
          "precedingProcess": {
            "description": "Optional preceding process identifier to indicate the business process that preceded the process indicated in the \u0022Process\u0022 field. Cannot be set without also \u0022Process\u0022 being set.",
            "nullable": true,
            "type": "string"
          },
          "process": {
            "description": "Optional process identifier used to indicate a business process this dialog belongs to",
            "nullable": true,
            "type": "string"
          },
          "progress": {
            "description": "Advisory indicator of progress, represented as 1-100 percentage value. 100% representing a dialog that has come\nto a natural completion (successful or not).",
            "format": "int32",
            "nullable": true,
            "type": "integer"
          },
          "revision": {
            "description": "The unique identifier for the revision in UUIDv4 format.",
            "example": "a312cb9c-7632-43c2-aa38-69b06aed56ca",
            "format": "guid",
            "type": "string"
          },
          "searchTags": {
            "description": "The list of words (tags) that will be used in dialog search queries. Not visible in end-user DTO.",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_GetDialogSearchTagDto"
            },
            "nullable": true,
            "type": "array"
          },
          "seenSinceLastUpdate": {
            "description": "The list of seen log entries for the dialog newer than the dialog ChangedAt date.",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_GetDialogDialogSeenLogDto"
            },
            "type": "array"
          },
          "serviceResource": {
            "description": "The service identifier for the service that the dialog is related to in URN-format.\nThis corresponds to a service resource in the Altinn Resource Registry.",
            "example": "urn:altinn:resource:some-service-identifier",
            "type": "string"
          },
          "serviceResourceType": {
            "description": "The ServiceResource type, as defined in Altinn Resource Registry (see ResourceType)",
            "type": "string"
          },
          "status": {
            "description": "The aggregated status of the dialog.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntities_DialogStatus_Values"
              }
            ]
          },
          "systemLabel": {
            "description": "Current display state.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogEndUserContextsEntities_SystemLabel_Values"
              }
            ]
          },
          "transmissions": {
            "description": "The immutable list of transmissions associated with the dialog",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_GetDialogDialogTransmissionDto"
            },
            "type": "array"
          },
          "updatedAt": {
            "description": "The date and time when the dialog was last updated.",
            "example": "2022-12-31T23:59:59Z",
            "format": "date-time",
            "type": "string"
          },
          "visibleFrom": {
            "description": "The timestamp when the dialog will be made visible for authorized end users.",
            "example": "2022-12-31T23:59:59Z",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsQueriesGet_GetDialogSearchTagDto": {
        "additionalProperties": false,
        "properties": {
          "value": {
            "description": "A search tag value.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsQueriesSearch_SearchDialogContentDto": {
        "additionalProperties": false,
        "properties": {
          "extendedStatus": {
            "description": "Used as the human-readable label used to describe the \u0022ExtendedStatus\u0022 field.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "senderName": {
            "description": "Overridden sender name. If not supplied, assume \u0022org\u0022 as the sender name.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "summary": {
            "description": "A short summary of the dialog and its current state.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "title": {
            "description": "The title of the dialog.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsQueriesSearch_SearchDialogDialogActivityDto": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "description": "The date and time when the activity was created.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Unstructured text describing the activity. Only set if the activity type is \u0022Information\u0022.",
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_LocalizationDto"
            },
            "type": "array"
          },
          "extendedType": {
            "description": "An arbitrary string with a service-specific activity type.\n            \nConsult the service-specific documentation provided by the service owner for details (if in use).",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The unique identifier for the activity in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "performedBy": {
            "description": "The actor that performed the activity.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesSearch_SearchDialogDialogActivityPerformedByActorDto"
              }
            ]
          },
          "transmissionId": {
            "description": "If the activity is related to a particular transmission, this field will contain the transmission identifier.",
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "The type of activity.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntitiesActivities_DialogActivityType_Values"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsQueriesSearch_SearchDialogDialogActivityPerformedByActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "description": "The identifier of the person or organization that performed the activity.\nMay be omitted if ActorType is \u0022ServiceOwner\u0022.",
            "nullable": true,
            "type": "string"
          },
          "actorName": {
            "description": "The name of the person or organization that performed the activity.\nOnly set if the actor type is \u0022PartyRepresentative\u0022.",
            "nullable": true,
            "type": "string"
          },
          "actorType": {
            "description": "What type of actor performed the activity.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainActors_ActorType_Values"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsQueriesSearch_SearchDialogDialogSeenLogDto": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "description": "The unique identifier for the seen log entry in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "isCurrentEndUser": {
            "description": "Flag indicating whether the seen log entry was created by the end user supplied in the query.",
            "type": "boolean"
          },
          "isViaServiceOwner": {
            "description": "Flag indicating whether the seen log entry was created via the service owner.\n            \nThis is used when the service owner uses the service owner API to implement its own frontend.",
            "nullable": true,
            "type": "boolean"
          },
          "seenAt": {
            "description": "The timestamp when the dialog revision was seen",
            "format": "date-time",
            "type": "string"
          },
          "seenBy": {
            "description": "The actor that saw the dialog revision",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesSearch_SearchDialogDialogSeenLogSeenByActorDto"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsQueriesSearch_SearchDialogDialogSeenLogSeenByActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "description": "The identifier of the person/business that saw the dialog revision.",
            "example": "urn:altinn:person:identifier-no:01125512345\nurn:altinn:organization:identifier-no:912345678",
            "type": "string"
          },
          "actorName": {
            "description": "The natural name of the person/business that saw the dialog revision.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsQueriesSearch_SearchDialogDto": {
        "additionalProperties": false,
        "properties": {
          "content": {
            "description": "The content of the dialog in search results",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesSearch_SearchDialogContentDto"
              }
            ]
          },
          "createdAt": {
            "description": "The date and time when the dialog was created.",
            "example": "2022-12-31T23:59:59Z",
            "format": "date-time",
            "type": "string"
          },
          "dueAt": {
            "description": "The due date for the dialog. This is the last date when the dialog is expected to be completed.",
            "example": "2022-12-31T23:59:59Z",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "extendedStatus": {
            "description": "Arbitrary string with a service-specific indicator of status, typically used to indicate a fine-grained state of\nthe dialog to further specify the \u0022status\u0022 enum.\n            \nRefer to the service-specific documentation provided by the service owner for details on the possible values (if\nin use).",
            "nullable": true,
            "type": "string"
          },
          "guiAttachmentCount": {
            "description": "The number of attachments in the dialog made available for browser-based frontends.",
            "format": "int32",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "The unique identifier for the dialog in UUIDv7 format.",
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d",
            "format": "guid",
            "type": "string"
          },
          "latestActivity": {
            "description": "The latest entry in the dialog\u0027s activity log.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesSearch_SearchDialogDialogActivityDto"
              }
            ]
          },
          "org": {
            "description": "The service owner code representing the organization (service owner) related to this dialog.",
            "example": "ske",
            "type": "string"
          },
          "party": {
            "description": "The party code representing the organization or person that the dialog belongs to in URN format",
            "example": "urn:altinn:person:identifier-no:01125512345\nurn:altinn:organization:identifier-no:912345678",
            "type": "string"
          },
          "precedingProcess": {
            "description": "Optional preceding process identifier to indicate the business process that preceded the process indicated in the \u0022Process\u0022 field. Cannot be set without also \u0022Process\u0022 being set.",
            "nullable": true,
            "type": "string"
          },
          "process": {
            "description": "Optional process identifier used to indicate a business process this dialog belongs to",
            "nullable": true,
            "type": "string"
          },
          "progress": {
            "description": "Advisory indicator of progress, represented as 1-100 percentage value. 100% representing a dialog that has come\nto a natural completion (successful or not).",
            "format": "int32",
            "nullable": true,
            "type": "integer"
          },
          "revision": {
            "description": "The unique identifier for the revision in UUIDv4 format.",
            "example": "a312cb9c-7632-43c2-aa38-69b06aed56ca",
            "format": "guid",
            "type": "string"
          },
          "seenSinceLastUpdate": {
            "description": "The list of seen log entries for the dialog newer than the dialog ChangedAt date.",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesSearch_SearchDialogDialogSeenLogDto"
            },
            "type": "array"
          },
          "serviceResource": {
            "description": "The service identifier for the service that the dialog is related to in URN-format.\nThis corresponds to a service resource in the Altinn Resource Registry.",
            "example": "urn:altinn:resource:some-service-identifier",
            "type": "string"
          },
          "serviceResourceType": {
            "description": "The ServiceResource type, as defined in Altinn Resource Registry (see ResourceType)",
            "type": "string"
          },
          "status": {
            "description": "The aggregated status of the dialog.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntities_DialogStatus_Values"
              }
            ]
          },
          "systemLabel": {
            "description": "Current display state.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogEndUserContextsEntities_SystemLabel_Values"
              }
            ]
          },
          "updatedAt": {
            "description": "The date and time when the dialog was last updated.",
            "example": "2022-12-31T23:59:59Z",
            "format": "date-time",
            "type": "string"
          },
          "visibleFrom": {
            "description": "The timestamp when the dialog will be made visible for authorized end users.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogsUpdate_UpdateDialogRequest": {
        "additionalProperties": false,
        "properties": {
          "dto": {
            "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogDto"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogTransmissionsCreate_CreateDialogTransmissionRequest": {
        "additionalProperties": false,
        "properties": {
          "attachments": {
            "description": "The transmission-level attachments",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogTransmissionAttachmentDto"
            },
            "type": "array"
          },
          "authorizationAttribute": {
            "description": "Contains an authorization resource attributeId, that can used in custom authorization rules in the XACML service\npolicy, which by default is the policy belonging to the service referred to by \u0022serviceResource\u0022 in the dialog.\n            \nCan also be used to refer to other service policies.",
            "example": "mycustomresource\n/* equivalent to the above */\nurn:altinn:subresource:mycustomresource\nurn:altinn:task:Task_1\n/* refer to another service */\nurn:altinn:resource:some-other-service-identifier",
            "nullable": true,
            "type": "string"
          },
          "content": {
            "description": "The transmission unstructured text content",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogDialogTransmissionContentDto"
              }
            ]
          },
          "createdAt": {
            "description": "If supplied, overrides the creating date and time for the transmission.\nIf not supplied, the current date /time will be used.",
            "format": "date-time",
            "type": "string"
          },
          "extendedType": {
            "description": "Arbitrary URI/URN describing a service-specific transmission type.\n            \nRefer to the service-specific documentation provided by the service owner for details (if in use).",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The UUDIv7 of the action may be provided to support idempotent additions to the list of transmissions.\nIf not supplied, a new UUIDv7 will be generated.",
            "example": "01913cd5-784f-7d3b-abef-4c77b1f0972d",
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "relatedTransmissionId": {
            "description": "Reference to any other transmission that this transmission is related to.",
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "sender": {
            "description": "The actor that sent the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogDialogTransmissionSenderActorDto"
              }
            ]
          },
          "type": {
            "description": "The type of transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntitiesTransmissions_DialogTransmissionType_Values"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogTransmissionsQueriesGet_GetDialogTransmissionAttachmentDto": {
        "additionalProperties": false,
        "properties": {
          "displayName": {
            "description": "The display name of the attachment that should be used in GUIs.",
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_LocalizationDto"
            },
            "type": "array"
          },
          "id": {
            "description": "The unique identifier for the attachment in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "urls": {
            "description": "The URLs associated with the attachment, each referring to a different representation of the attachment.",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogTransmissionsQueriesGet_GetDialogTransmissionAttachmentUrlDto"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogTransmissionsQueriesGet_GetDialogTransmissionAttachmentUrlDto": {
        "additionalProperties": false,
        "properties": {
          "consumerType": {
            "description": "The type of consumer the URL is intended for.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainAttachments_AttachmentUrlConsumerType_Values"
              }
            ]
          },
          "id": {
            "description": "The unique identifier for the attachment URL in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "mediaType": {
            "description": "The media type of the attachment.",
            "example": "application/pdf\napplication/zip",
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "The fully qualified URL of the attachment. Will be set to \u0022urn:dialogporten:unauthorized\u0022 if the user is\nnot authorized to access the transmission.",
            "example": "https://someendpoint.com/someattachment.pdf\nurn:dialogporten:unauthorized",
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogTransmissionsQueriesGet_GetDialogTransmissionContentDto": {
        "additionalProperties": false,
        "properties": {
          "contentReference": {
            "description": "Front-channel embedded content. Used to dynamically embed content in the frontend from an external URL.\nAllowed media types: application/vnd.dialogporten.frontchannelembed\u002Bjson;type=markdown",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "summary": {
            "description": "The summary of the content.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "title": {
            "description": "The title of the content.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogTransmissionsQueriesGet_GetDialogTransmissionDto": {
        "additionalProperties": false,
        "properties": {
          "attachments": {
            "description": "The attachments associated with the transmission.",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogTransmissionsQueriesGet_GetDialogTransmissionAttachmentDto"
            },
            "type": "array"
          },
          "authorizationAttribute": {
            "description": "The authorization attribute associated with the transmission.",
            "nullable": true,
            "type": "string"
          },
          "content": {
            "description": "The content of the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogTransmissionsQueriesGet_GetDialogTransmissionContentDto"
              }
            ]
          },
          "createdAt": {
            "description": "The date and time when the transmission was created.",
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "description": "The date and time when the transmission was deleted, if applicable.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "extendedType": {
            "description": "The extended type URI for the transmission.",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The unique identifier for the transmission in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "relatedTransmissionId": {
            "description": "The unique identifier for the related transmission, if any.",
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "sender": {
            "description": "The sender actor information for the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogTransmissionsQueriesGet_GetDialogTransmissionSenderActorDto"
              }
            ]
          },
          "type": {
            "description": "The type of the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntitiesTransmissions_DialogTransmissionType_Values"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogTransmissionsQueriesGet_GetDialogTransmissionSenderActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "description": "The identifier of the actor.",
            "type": "string"
          },
          "actorName": {
            "description": "The name of the actor.",
            "type": "string"
          },
          "actorType": {
            "description": "The type of the actor.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainActors_ActorType_Values"
              }
            ]
          },
          "id": {
            "description": "The unique identifier for the sender actor in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogTransmissionsQueriesSearch_SearchDialogTransmissionAttachmentDto": {
        "additionalProperties": false,
        "properties": {
          "displayName": {
            "description": "The display name of the attachment that should be used in GUIs.",
            "items": {
              "$ref": "#/components/schemas/V1CommonLocalizations_LocalizationDto"
            },
            "type": "array"
          },
          "id": {
            "description": "The unique identifier for the attachment in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "urls": {
            "description": "The URLs associated with the attachment, each referring to a different representation of the attachment.",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogTransmissionsQueriesSearch_SearchDialogTransmissionAttachmentUrlDto"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogTransmissionsQueriesSearch_SearchDialogTransmissionAttachmentUrlDto": {
        "additionalProperties": false,
        "properties": {
          "consumerType": {
            "description": "The type of consumer the URL is intended for.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainAttachments_AttachmentUrlConsumerType_Values"
              }
            ]
          },
          "id": {
            "description": "The unique identifier for the attachment URL in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "mediaType": {
            "description": "The media type of the attachment.",
            "example": "application/pdf\napplication/zip",
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "The fully qualified URL of the attachment. Will be set to \u0022urn:dialogporten:unauthorized\u0022 if the user is\nnot authorized to access the transmission.",
            "example": "https://someendpoint.com/someattachment.pdf\nurn:dialogporten:unauthorized",
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogTransmissionsQueriesSearch_SearchDialogTransmissionContentDto": {
        "additionalProperties": false,
        "properties": {
          "contentReference": {
            "description": "Front-channel embedded content. Used to dynamically embed content in the frontend from an external URL.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "summary": {
            "description": "The summary of the content.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          },
          "title": {
            "description": "The title of the content.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1CommonContent_ContentValueDto"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogTransmissionsQueriesSearch_SearchDialogTransmissionDto": {
        "additionalProperties": false,
        "properties": {
          "attachments": {
            "description": "The attachments associated with the transmission.",
            "items": {
              "$ref": "#/components/schemas/V1ServiceOwnerDialogTransmissionsQueriesSearch_SearchDialogTransmissionAttachmentDto"
            },
            "type": "array"
          },
          "authorizationAttribute": {
            "description": "The authorization attribute associated with the transmission.",
            "nullable": true,
            "type": "string"
          },
          "content": {
            "description": "The content of the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogTransmissionsQueriesSearch_SearchDialogTransmissionContentDto"
              }
            ]
          },
          "createdAt": {
            "description": "The date and time when the transmission was created.",
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "description": "The date and time when the transmission was deleted, if applicable.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "extendedType": {
            "description": "The extended type URI for the transmission.",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The unique identifier for the transmission in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          },
          "relatedTransmissionId": {
            "description": "The unique identifier for the related transmission, if any.",
            "format": "guid",
            "nullable": true,
            "type": "string"
          },
          "sender": {
            "description": "The sender actor information for the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogTransmissionsQueriesSearch_SearchDialogTransmissionSenderActorDto"
              }
            ]
          },
          "type": {
            "description": "The type of the transmission.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntitiesTransmissions_DialogTransmissionType_Values"
              }
            ]
          }
        },
        "type": "object"
      },
      "V1ServiceOwnerDialogTransmissionsQueriesSearch_SearchDialogTransmissionSenderActorDto": {
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "description": "The identifier of the actor.",
            "type": "string"
          },
          "actorName": {
            "description": "The name of the actor.",
            "type": "string"
          },
          "actorType": {
            "description": "The type of the actor.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainActors_ActorType_Values"
              }
            ]
          },
          "id": {
            "description": "The unique identifier for the sender actor in UUIDv7 format.",
            "format": "guid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1WellKnownJwksQueriesGet_GetJwksDto": {
        "additionalProperties": false,
        "properties": {
          "keys": {
            "items": {
              "$ref": "#/components/schemas/V1WellKnownJwksQueriesGet_Jwk"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "V1WellKnownJwksQueriesGet_Jwk": {
        "additionalProperties": false,
        "properties": {
          "alg": {
            "type": "string"
          },
          "crv": {
            "type": "string"
          },
          "kid": {
            "type": "string"
          },
          "kty": {
            "type": "string"
          },
          "use": {
            "type": "string"
          },
          "x": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "V1WellKnownOauthAuthorizationServerQueriesGet_GetOauthAuthorizationServerDto": {
        "additionalProperties": false,
        "properties": {
          "issuer": {
            "type": "string"
          },
          "jwks_uri": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "JWTBearerAuth": {
        "bearerFormat": "JWT",
        "description": "Enter a JWT token to authorize the requests...",
        "scheme": "Bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "title": "Dialogporten",
    "version": "v1"
  },
  "openapi": "3.0.0",
  "paths": {
    "/api/v1/.well-known/jwks.json": {
      "get": {
        "description": "This endpoint can be used by client integrations supporting automatic discovery of \u0022OAuth 2.0 Authorization Server\u0022 metadata, enabling verification of dialog tokens issues by Dialogporten.",
        "operationId": "V1WellKnownJwksGet_GetJwks",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1WellKnownJwksQueriesGet_GetJwksDto"
                }
              }
            },
            "description": "The OAuth 2.0 Authorization Server Metadata"
          }
        },
        "summary": "Gets the JSON Web Key Set (JWKS) containing the public keys used to verify dialog token signatures",
        "tags": [
          "Metadata"
        ]
      }
    },
    "/api/v1/.well-known/oauth-authorization-server": {
      "get": {
        "description": "This endpoint can be used by client integrations supporting automatic discovery of \u0022OAuth 2.0 Authorization Server\u0022 metadata, enabling verification of dialog tokens issues by Dialogporten.",
        "operationId": "V1WellKnownOauthAuthorizationServerGet_GetOauthAuthorizationServer",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1WellKnownOauthAuthorizationServerQueriesGet_GetOauthAuthorizationServerDto"
                }
              }
            },
            "description": "The OAuth 2.0 Authorization Server Metadata"
          }
        },
        "summary": "Gets the OAuth 2.0 Metadata for automatic configuration of clients verifying dialog tokens",
        "tags": [
          "Metadata"
        ]
      }
    },
    "/api/v1/enduser/dialogs": {
      "get": {
        "description": "Performs a search for dialogs, returning a paginated list of dialogs. For more information see the documentation (link TBD).\n\n* All date parameters must contain explicit time zone. Example: 2023-10-27T10:00:00Z or 2023-10-27T10:00:00\u002B01:00\n* See \u0022continuationToken\u0022 in the response for how to get the next page of results.\n* hasNextPage will be set to true if there are more items to get.",
        "operationId": "V1EndUserDialogsSearch_SearchDialog",
        "parameters": [
          {
            "description": "Filter by one or more service owner codes",
            "explode": true,
            "in": "query",
            "name": "org",
            "schema": {
              "items": {
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Filter by one or more service resources",
            "explode": true,
            "in": "query",
            "name": "serviceResource",
            "schema": {
              "items": {
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Filter by one or more owning parties",
            "explode": true,
            "in": "query",
            "name": "party",
            "schema": {
              "items": {
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Filter by one or more extended statuses",
            "explode": true,
            "in": "query",
            "name": "extendedStatus",
            "schema": {
              "items": {
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Filter by external reference",
            "in": "query",
            "name": "externalReference",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filter by status",
            "explode": true,
            "in": "query",
            "name": "status",
            "schema": {
              "items": {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntities_DialogStatus_Values"
              },
              "nullable": true,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Only return dialogs created after this date",
            "in": "query",
            "name": "createdAfter",
            "schema": {
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Only return dialogs created before this date",
            "in": "query",
            "name": "createdBefore",
            "schema": {
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Only return dialogs updated after this date",
            "in": "query",
            "name": "updatedAfter",
            "schema": {
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Only return dialogs updated before this date",
            "in": "query",
            "name": "updatedBefore",
            "schema": {
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Only return dialogs with due date after this date",
            "in": "query",
            "name": "dueAfter",
            "schema": {
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Only return dialogs with due date before this date",
            "in": "query",
            "name": "dueBefore",
            "schema": {
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filter by process",
            "in": "query",
            "name": "process",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filter by Display state ",
            "explode": true,
            "in": "query",
            "name": "systemLabel",
            "schema": {
              "items": {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogEndUserContextsEntities_SystemLabel_Values"
              },
              "nullable": true,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Search string for free text search. Will attempt to fuzzily match in all free text fields in the aggregate",
            "in": "query",
            "name": "search",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Limit free text search to texts with this language code, e.g. \u0027no\u0027, \u0027en\u0027. Culture codes will be normalized to neutral language codes (ISO 639). Default: search all culture codes",
            "in": "query",
            "name": "searchLanguageCode",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OrderSetOfTOrderDefinitionAndTTarget"
                }
              ]
            }
          },
          {
            "description": "Supply \u0022continuationToken\u0022 for the response to get the next page of results, if hasNextPage is true",
            "in": "query",
            "name": "continuationToken",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ContinuationTokenSetOfTOrderDefinitionAndTTarget"
                }
              ]
            }
          },
          {
            "description": "Limit the number of results per page (1-1000, default: 100)",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "nullable": true,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfV1EndUserDialogsQueriesSearch_SearchDialogDto"
                }
              }
            },
            "description": "Successfully returned the dialog list."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten\u0022."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets a list of dialogs",
        "tags": [
          "Enduser"
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}": {
      "get": {
        "description": "Gets a single dialog aggregate. For more information see the documentation (link TBD).",
        "operationId": "V1EndUserDialogsGet_GetDialog",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1EndUserDialogsQueriesGet_GetDialogDto"
                }
              }
            },
            "description": "Successfully returned the dialog aggregate."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten\u0022."
          },
          "403": {
            "description": "Unauthorized to get the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The given dialog ID was not found or is already deleted."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets a single dialog",
        "tags": [
          "Enduser"
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}/activities": {
      "get": {
        "description": "Gets the list of activities belonging to a dialog",
        "operationId": "V1EndUserDialogActivitiesSearch_SearchDialogActivity",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/V1EndUserDialogActivitiesQueriesSearch_SearchDialogActivityDto"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successfully returned the dialog activity list."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten\u0022."
          },
          "403": {
            "description": "Unauthorized to get the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets a list of dialog activities",
        "tags": [
          "Enduser"
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}/activities/{activityId}": {
      "get": {
        "description": "Gets a single activity belonging to a dialog. For more information see the documentation (link TBD).",
        "operationId": "V1EndUserDialogActivitiesGet_GetDialogActivity",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "activityId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1EndUserDialogActivitiesQueriesGet_GetDialogActivityDto"
                }
              }
            },
            "description": "Successfully returned the dialog activity."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten\u0022."
          },
          "403": {
            "description": "Unauthorized to get child entity for the given dialog (dialog not owned by authenticated organization or has additional scope requirements defined in service identifiers policy)."
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The given dialog ID was not found or was deleted, or the given activity ID was not found."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets a single dialog activity",
        "tags": [
          "Enduser"
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}/labellog": {
      "get": {
        "operationId": "V1EndUserDialogLabelAssignmentLogsSearch_SearchDialogLabelAssignmentLog",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/V1EndUserDialogLabelAssignmentLogQueriesSearch_SearchDialogLabelAssignmentLogDto"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Not Found"
          },
          "410": {
            "description": ""
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "tags": [
          "Enduser"
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}/seenlog": {
      "get": {
        "description": "Gets all seen log records for a dialog. For more information see the documentation (link TBD).",
        "operationId": "V1EndUserDialogSeenLogsSearch_SearchDialogSeenLog",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/V1EndUserDialogSeenLogsQueriesSearch_SearchDialogSeenLogDto"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successfully returned the dialog seen log records."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten\u0022."
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets all seen log records for a dialog",
        "tags": [
          "Enduser"
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}/seenlog/{seenLogId}": {
      "get": {
        "description": "Gets a single dialog seen log record. For more information see the documentation (link TBD).",
        "operationId": "V1EndUserDialogSeenLogsGet_GetDialogSeenLog",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "seenLogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1EndUserDialogSeenLogsQueriesGet_GetDialogSeenLogDto"
                }
              }
            },
            "description": "Successfully returned the dialog seen log record."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten\u0022."
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets a single dialog seen log record",
        "tags": [
          "Enduser"
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}/systemlabels": {
      "put": {
        "operationId": "V1EndUserDialogSystemLabelsSet_SetDialogSystemLabel",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1EndUserDialogSystemLabelsCommandsSet_SetDialogSystemLabelCommand"
              }
            }
          },
          "description": "",
          "required": true,
          "x-name": "SetDialogSystemLabelCommand",
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Not Found"
          },
          "410": {
            "description": ""
          },
          "412": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": ""
          },
          "422": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": ""
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "tags": [
          "Enduser"
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}/transmissions": {
      "get": {
        "description": "Gets the list of transmissions belonging to a dialog",
        "operationId": "V1EndUserDialogTransmissionsSearch_SearchDialogTransmission",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/V1EndUserDialogTransmissionsQueriesSearch_SearchDialogTransmissionDto"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successfully returned the dialog transmission list."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten\u0022."
          },
          "403": {
            "description": "Unauthorized to get the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets a list of dialog transmissions",
        "tags": [
          "Enduser"
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}/transmissions/{transmissionId}": {
      "get": {
        "description": "Gets a single transmission belonging to a dialog. For more information see the documentation (link TBD).",
        "operationId": "V1EndUserDialogTransmissionsGet_GetDialogTransmission",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "transmissionId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1EndUserDialogTransmissionsQueriesGet_GetDialogTransmissionDto"
                }
              }
            },
            "description": "Successfully returned the dialog transmission."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten\u0022."
          },
          "403": {
            "description": "Unauthorized to get child entity for the given dialog (dialog not owned by authenticated organization or has additional scope requirements defined in service identifiers policy)."
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The given dialog ID was not found or was deleted, or the given transmission ID was not found."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets a single dialog transmission",
        "tags": [
          "Enduser"
        ]
      }
    },
    "/api/v1/enduser/parties": {
      "get": {
        "description": "Gets the list of authorized parties for the end user. For more information see the documentation (link TBD).",
        "operationId": "V1EndUserPartiesGet_GetParties",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/V1EndUserPartiesQueriesGet_GetPartiesDto"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The list of authorized parties for the end user"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets the list of authorized parties for the end user",
        "tags": [
          "Enduser"
        ]
      }
    },
    "/api/v1/serviceowner/dialogs": {
      "get": {
        "description": "Performs a search for dialogs, returning a paginated list of dialogs. For more information see the documentation (link TBD).\n\n* All date parameters must contain explicit time zone. Example: 2023-10-27T10:00:00Z or 2023-10-27T10:00:00\u002B01:00\n* See \u0022continuationToken\u0022 in the response for how to get the next page of results.\n* hasNextPage will be set to true if there are more items to get.",
        "operationId": "V1ServiceOwnerDialogsSearch_SearchDialog",
        "parameters": [
          {
            "description": "Filter by one or more service resources",
            "explode": true,
            "in": "query",
            "name": "serviceResource",
            "schema": {
              "items": {
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Filter by one or more owning parties",
            "explode": true,
            "in": "query",
            "name": "party",
            "schema": {
              "items": {
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Filter by end user id",
            "in": "query",
            "name": "endUserId",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filter by one or more extended statuses",
            "explode": true,
            "in": "query",
            "name": "extendedStatus",
            "schema": {
              "items": {
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Filter by external reference",
            "in": "query",
            "name": "externalReference",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filter by status",
            "explode": true,
            "in": "query",
            "name": "status",
            "schema": {
              "items": {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntities_DialogStatus_Values"
              },
              "nullable": true,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Only return dialogs created after this date",
            "in": "query",
            "name": "createdAfter",
            "schema": {
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Only return dialogs created before this date",
            "in": "query",
            "name": "createdBefore",
            "schema": {
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Only return dialogs updated after this date",
            "in": "query",
            "name": "updatedAfter",
            "schema": {
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Only return dialogs updated before this date",
            "in": "query",
            "name": "updatedBefore",
            "schema": {
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Only return dialogs with due date after this date",
            "in": "query",
            "name": "dueAfter",
            "schema": {
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Only return dialogs with due date before this date",
            "in": "query",
            "name": "dueBefore",
            "schema": {
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Only return dialogs with visible-from date after this date",
            "in": "query",
            "name": "visibleAfter",
            "schema": {
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Only return dialogs with visible-from date before this date",
            "in": "query",
            "name": "visibleBefore",
            "schema": {
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filter by process",
            "in": "query",
            "name": "process",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filter by Display state",
            "explode": true,
            "in": "query",
            "name": "systemLabel",
            "schema": {
              "items": {
                "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogEndUserContextsEntities_SystemLabel_Values"
              },
              "nullable": true,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Search string for free text search. Will attempt to fuzzily match in all free text fields in the aggregate",
            "in": "query",
            "name": "search",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Limit free text search to texts with this language code, e.g. \u0027no\u0027, \u0027en\u0027. Culture codes will be normalized to neutral language codes (ISO 639). Default: search all culture codes",
            "in": "query",
            "name": "searchLanguageCode",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OrderSetOfTOrderDefinitionAndTTarget"
                }
              ]
            }
          },
          {
            "description": "Supply \u0022continuationToken\u0022 for the response to get the next page of results, if hasNextPage is true",
            "in": "query",
            "name": "continuationToken",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ContinuationTokenSetOfTOrderDefinitionAndTTarget"
                }
              ]
            }
          },
          {
            "description": "Limit the number of results per page (1-1000, default: 100)",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "nullable": true,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfV1ServiceOwnerDialogsQueriesSearch_SearchDialogDto"
                }
              }
            },
            "description": "Successfully returned the dialog list."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten.serviceprovider.search\u0022."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets a list of dialogs",
        "tags": [
          "Serviceowner"
        ]
      },
      "post": {
        "description": "The dialog is created with the given configuration. For more information see the documentation (link TBD).\n\nFor detailed information on validation rules, see [the source for CreateDialogCommandValidator](https://github.com/digdir/dialogporten/blob/main/src/Digdir.Domain.Dialogporten.Application/Features/V1/ServiceOwner/Dialogs/Commands/Create/CreateDialogCommandValidator.cs)",
        "operationId": "V1ServiceOwnerDialogsCreate_CreateDialog",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsCreate_CreateDialogCommand"
              }
            }
          },
          "description": "",
          "required": true,
          "x-name": "CreateDialogCommand",
          "x-position": 1
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "018bb8e5-d9d0-7434-8ec5-569a6c8e01fc",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "The UUID of the created the dialog aggregate. A relative URL to the newly created activity is set in the \u0022Location\u0022 header."
          },
          "400": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Validation error occured. See problem details for a list of errors."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten.serviceprovider\u0022."
          },
          "403": {
            "description": "Unauthorized to create a dialog for the given serviceResource (not owned by authenticated organization or has additional scope requirements defined in policy)."
          },
          "422": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Domain error occured. See problem details for a list of errors."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Creates a new dialog",
        "tags": [
          "Serviceowner"
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}": {
      "delete": {
        "description": "Deletes a given dialog (soft delete). For more information see the documentation (link TBD).\n\nNote that the dialog will still be available on the single details endpoint, but will have a deleted status. It will not appear on the list endpoint for either service owners nor end users.\nIf end users attempt to access the dialog via the details endpoint, they will get a 410 Gone response.\n\nOptimistic concurrency control is implemented using the If-Match header. Supply the Revision value from the GetDialog endpoint to ensure that the dialog is not deleted by another request in the meantime.",
        "operationId": "V1ServiceOwnerDialogsDelete_DeleteDialog",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "if-Match",
            "schema": {
              "format": "guid",
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The dialog aggregate was deleted successfully."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten.serviceprovider\u0022."
          },
          "403": {
            "description": "Unauthorized to delete the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The given dialog ID was not found or is already deleted."
          },
          "412": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The supplied If-Match header did not match the current Revision value for the dialog. The request was not applied."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Deletes a dialog",
        "tags": [
          "Serviceowner"
        ]
      },
      "get": {
        "description": "Gets a single dialog aggregate. For more information see the documentation (link TBD).\n\nNote that this operation may return deleted dialogs (see the field \u0060DeletedAt\u0060).",
        "operationId": "V1ServiceOwnerDialogsGet_GetDialog",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          },
          {
            "description": "Filter by end user id",
            "in": "query",
            "name": "endUserId",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1ServiceOwnerDialogsQueriesGet_GetDialogDto"
                }
              }
            },
            "description": "Successfully returned the dialog aggregate."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten.serviceprovider\u0022."
          },
          "403": {
            "description": "Unauthorized to get the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The given dialog ID was not found or is already deleted."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets a single dialog",
        "tags": [
          "Serviceowner"
        ]
      },
      "patch": {
        "description": "Patches a dialog aggregate with a RFC6902 JSON Patch document. The patch document must be a JSON array of RFC6902 operations.\nSee [https://tools.ietf.org/html/rfc6902](https://tools.ietf.org/html/rfc6902) for more information.\n            \nOptimistic concurrency control is implemented using the If-Match header. Supply the Revision value from the GetDialog endpoint to ensure that the dialog is not modified/deleted by another request in the meantime.",
        "operationId": "PatchDialogs_Patch",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            },
            "x-position": 1
          },
          {
            "in": "header",
            "name": "If-Match",
            "schema": {
              "format": "guid",
              "nullable": true,
              "type": "string"
            },
            "x-originalName": "etag",
            "x-position": 2
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/MicrosoftAspNetCoreJsonPatchOperations_Operation"
                },
                "type": "array"
              }
            }
          },
          "required": true,
          "x-name": "patchDocument",
          "x-position": 3
        },
        "responses": {
          "204": {
            "description": "Patch was successfully applied."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Validation error occured. See problem details for a list of errors."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \\\u0022digdir:dialogporten.serviceprovider\\\u0022"
          },
          "403": {
            "description": "Unauthorized to update a dialog for the given serviceResource (not owned by authenticated organization or has additional scope requirements defined in policy)"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The given dialog ID was not found or is deleted"
          },
          "412": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The supplied Revision does not match the current Revision of the dialog"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Domain error occured. See problem details for a list of errors."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Patch a single dialog",
        "tags": [
          "Serviceowner"
        ]
      },
      "put": {
        "description": "Replaces a given dialog with the supplied model. For more information see the documentation (link TBD).\n\nOptimistic concurrency control is implemented using the If-Match header. Supply the Revision value from the GetDialog endpoint to ensure that the dialog is not modified/deleted by another request in the meantime.",
        "operationId": "V1ServiceOwnerDialogsUpdate_UpdateDialog",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "if-Match",
            "schema": {
              "format": "guid",
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "Activities": [
                  {
                    "CreatedAt": null,
                    "Description": [
                      {
                        "LanguageCode": "en",
                        "Value": "Some description"
                      },
                      {
                        "LanguageCode": "nb",
                        "Value": "En beskrivelse"
                      }
                    ],
                    "ExtendedType": null,
                    "Id": "8b95d42d-d2b6-4c01-8ca0-a817a4b3c50d",
                    "PerformedBy": {
                      "ActorId": null,
                      "ActorName": null,
                      "ActorType": 2
                    },
                    "TransmissionId": null,
                    "Type": 3
                  }
                ],
                "ApiActions": [
                  {
                    "Action": "submit",
                    "AuthorizationAttribute": null,
                    "Endpoints": [
                      {
                        "Deprecated": false,
                        "DocumentationUrl": "https://example.com/some-api-action-doc",
                        "HttpMethod": 2,
                        "Id": null,
                        "RequestSchema": "https://example.com/some-api-action-request-schema",
                        "ResponseSchema": "https://example.com/some-api-action-response-schema",
                        "SunsetAt": null,
                        "Url": "https://example.com/some-api-action",
                        "Version": "20231015"
                      }
                    ],
                    "Id": "948b07ba-1a82-403e-8eaa-2e5784af07a9"
                  }
                ],
                "Attachments": [
                  {
                    "DisplayName": [
                      {
                        "LanguageCode": "en",
                        "Value": "Some display name"
                      }
                    ],
                    "Id": "02a72809-eddd-4192-864d-8f1755d72f4e",
                    "Urls": [
                      {
                        "ConsumerType": 0,
                        "Id": "858177cb-8584-4d10-a086-3a5defa7a6c3",
                        "MediaType": null,
                        "Url": "https://example.com/some-url"
                      }
                    ]
                  }
                ],
                "Content": {
                  "AdditionalInfo": {
                    "MediaType": "text/markdown",
                    "Value": [
                      {
                        "LanguageCode": "en",
                        "Value": "Some description with *markdown* support"
                      }
                    ]
                  },
                  "ExtendedStatus": null,
                  "MainContentReference": null,
                  "SenderName": null,
                  "Summary": {
                    "MediaType": "text/plain",
                    "Value": [
                      {
                        "LanguageCode": "en",
                        "Value": "Some Summary"
                      }
                    ]
                  },
                  "Title": {
                    "MediaType": "text/plain",
                    "Value": [
                      {
                        "LanguageCode": "en",
                        "Value": "Some title"
                      }
                    ]
                  }
                },
                "DueAt": "2084-04-04T12:13:10.01344\u002B00:00",
                "ExpiresAt": "2095-05-04T12:13:10.01344\u002B00:00",
                "ExtendedStatus": "Some extended status",
                "ExternalReference": "Some external reference",
                "GuiActions": [
                  {
                    "Action": "submit",
                    "AuthorizationAttribute": null,
                    "HttpMethod": 1,
                    "Id": "8c64ecc8-7678-44b2-8788-0b5852dd8fa0",
                    "IsDeleteDialogAction": false,
                    "Priority": 1,
                    "Prompt": null,
                    "Title": [
                      {
                        "LanguageCode": "en",
                        "Value": "GUI action title"
                      },
                      {
                        "LanguageCode": "nb",
                        "Value": "GUI action-tittel"
                      }
                    ],
                    "Url": "https://example.com/some-url"
                  }
                ],
                "Progress": 42,
                "SearchTags": [
                  {
                    "Value": "searchTag"
                  },
                  {
                    "Value": "anotherSearchTag"
                  }
                ],
                "Status": 1,
                "VisibleFrom": "2054-03-04T12:13:10.01344\u002B00:00"
              },
              "schema": {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogsCommandsUpdate_UpdateDialogDto"
              }
            }
          },
          "required": true,
          "x-name": "dto"
        },
        "responses": {
          "204": {
            "description": "The dialog aggregate was updated successfully."
          },
          "400": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Validation error occured. See problem details for a list of errors."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten.serviceprovider\u0022."
          },
          "403": {
            "description": "Unauthorized to update the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The given dialog ID was not found or is already deleted."
          },
          "412": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The supplied If-Match header did not match the current Revision value for the dialog. The request was not applied."
          },
          "422": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Domain error occured. See problem details for a list of errors."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Replaces a dialog",
        "tags": [
          "Serviceowner"
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/actions/purge": {
      "post": {
        "description": "Deletes a given dialog (hard delete). For more information see the documentation (link TBD).\n\nOptimistic concurrency control is implemented using the If-Match header. Supply the Revision value from the GetDialog endpoint to ensure that the dialog is not deleted by another request in the meantime.",
        "operationId": "V1ServiceOwnerDialogsPurge_PurgeDialog",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "if-Match",
            "schema": {
              "format": "guid",
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The dialog aggregate was deleted successfully."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten.serviceprovider\u0022."
          },
          "403": {
            "description": "Unauthorized to delete the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The given dialog ID was not found or is already deleted."
          },
          "412": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The supplied If-Match header did not match the current Revision value for the dialog. The request was not applied."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Permanently deletes a dialog",
        "tags": [
          "Serviceowner"
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/actions/should-send-notification": {
      "get": {
        "description": "Used by Altinn Notification only. Takes a dialogId and returns a boolean value based on conditions used to determine if a notification is to be sent.",
        "operationId": "V1ServiceOwnerDialogActivitiesNotificationCondition_NotificationCondition",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "conditionType",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/V1ServiceOwnerDialogActivitiesQueriesNotificationCondition_NotificationConditionType"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "activityType",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DigdirDomainDialogportenDomainDialogsEntitiesActivities_DialogActivityType_Values"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "transmissionId",
            "schema": {
              "format": "guid",
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1ServiceOwnerDialogActivitiesQueriesNotificationCondition_NotificationConditionDto"
                }
              }
            },
            "description": "Successfully returned the notification determination."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022altinn:system/notifications.condition.check\u0022."
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Returns a boolean value based on conditions used to determine if a notification is to be sent",
        "tags": [
          "Serviceowner"
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/activities": {
      "get": {
        "description": "Gets the list of activities belonging to a dialog",
        "operationId": "GetDialogActivityListSO",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/V1ServiceOwnerDialogActivitiesQueriesSearch_SearchDialogActivityDto"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successfully returned the dialog activity list."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten.serviceprovider\u0022."
          },
          "403": {
            "description": "Unauthorized to get the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets a list of dialog activities",
        "tags": [
          "Serviceowner"
        ]
      },
      "post": {
        "description": "The activity is created with the given configuration. For more information see the documentation (link TBD).\n\nOptimistic concurrency control is implemented using the If-Match header. Supply the Revision value from the GetDialog endpoint to ensure that the dialog is not modified/deleted by another request in the meantime.",
        "operationId": "V1ServiceOwnerDialogActivitiesCreate_CreateDialogActivity",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "if-Match",
            "schema": {
              "format": "guid",
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogActivitiesCreate_CreateDialogActivityRequest"
              }
            }
          },
          "description": "",
          "required": true,
          "x-name": "CreateDialogActivityRequest",
          "x-position": 1
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "018bb8e5-d9d0-7434-8ec5-569a6c8e01fc",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "The UUID of the created the dialog activity. A relative URL to the newly created activity is set in the \u0022Location\u0022 header."
          },
          "400": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Validation error occured. See problem details for a list of errors."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten.serviceprovider\u0022."
          },
          "403": {
            "description": "Unauthorized to create child entity for the given dialog (dialog not owned by authenticated organization or has additional scope requirements defined in service identifiers policy)."
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The given dialog ID was not found or is already deleted."
          },
          "412": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The supplied If-Match header did not match the current Revision value for the dialog. The request was not applied."
          },
          "422": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Domain error occured. See problem details for a list of errors."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Adds a activity to a dialogs activity history",
        "tags": [
          "Serviceowner"
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/activities/{activityId}": {
      "get": {
        "description": "Gets a single activity belonging to a dialog. For more information see the documentation (link TBD).",
        "operationId": "V1ServiceOwnerDialogActivitiesGet_GetDialogActivity",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "activityId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1ServiceOwnerDialogActivitiesQueriesGet_GetDialogActivityDto"
                }
              }
            },
            "description": "Successfully returned the dialog activity."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten.serviceprovider\u0022."
          },
          "403": {
            "description": "Unauthorized to get child entity for the given dialog (dialog not owned by authenticated organization or has additional scope requirements defined in service identifiers policy)."
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The given dialog ID was not found or was deleted, or the given activity ID was not found."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets a single dialog activity",
        "tags": [
          "Serviceowner"
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/seenlog": {
      "get": {
        "description": "Gets all seen log records for a dialog. For more information see the documentation (link TBD).",
        "operationId": "V1ServiceOwnerDialogSeenLogsSearch_SearchDialogSeenLog",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/V1ServiceOwnerDialogSeenLogsQueriesSearch_SearchSeenLogDto"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successfully returned the dialog seen log records."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets all seen log records for a dialog",
        "tags": [
          "Serviceowner"
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/seenlog/{seenLogId}": {
      "get": {
        "description": "Gets a single dialog seen log record. For more information see the documentation (link TBD).",
        "operationId": "V1ServiceOwnerDialogSeenLogsGet_GetDialogSeenLog",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "seenLogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1ServiceOwnerDialogSeenLogsQueriesGet_GetDialogSeenLogDto"
                }
              }
            },
            "description": "Successfully returned the dialog seen log record."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets a single dialog seen log record",
        "tags": [
          "Serviceowner"
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/transmissions": {
      "get": {
        "description": "Gets the list of transmissions belonging to a dialog",
        "operationId": "V1ServiceOwnerDialogTransmissionsSearch_SearchDialogTransmission",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/V1ServiceOwnerDialogTransmissionsQueriesSearch_SearchDialogTransmissionDto"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successfully returned the dialog transmission list."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten.serviceprovider\u0022."
          },
          "403": {
            "description": "Unauthorized to get the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets a list of dialog transmissions",
        "tags": [
          "Serviceowner"
        ]
      },
      "post": {
        "description": "The transmission is created with the given configuration. For more information see the documentation (link TBD).\n\nOptimistic concurrency control is implemented using the If-Match header. Supply the Revision value from the GetDialog endpoint to ensure that the dialog is not modified/deleted by another request in the meantime.",
        "operationId": "V1ServiceOwnerDialogTransmissionsCreate_CreateDialogTransmission",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "if-Match",
            "schema": {
              "format": "guid",
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1ServiceOwnerDialogTransmissionsCreate_CreateDialogTransmissionRequest"
              }
            }
          },
          "description": "",
          "required": true,
          "x-name": "CreateDialogTransmissionRequest",
          "x-position": 1
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "018bb8e5-d9d0-7434-8ec5-569a6c8e01fc",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "The UUID of the created the dialog transmission. A relative URL to the newly created activity is set in the \u0022Location\u0022 header."
          },
          "400": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Validation error occured. See problem details for a list of errors."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten.serviceprovider\u0022."
          },
          "403": {
            "description": "Unauthorized to create child entity for the given dialog (dialog not owned by authenticated organization or has additional scope requirements defined in service identifiers policy)."
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The given dialog ID was not found or is already deleted."
          },
          "412": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The supplied If-Match header did not match the current Revision value for the dialog. The request was not applied."
          },
          "422": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "Domain error occured. See problem details for a list of errors."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Adds a transmission to a dialog",
        "tags": [
          "Serviceowner"
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/transmissions/{transmissionId}": {
      "get": {
        "description": "Gets a single transmission belonging to a dialog. For more information see the documentation (link TBD).",
        "operationId": "V1ServiceOwnerDialogTransmissionsGet_GetDialogTransmission",
        "parameters": [
          {
            "in": "path",
            "name": "dialogId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "transmissionId",
            "required": true,
            "schema": {
              "format": "guid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1ServiceOwnerDialogTransmissionsQueriesGet_GetDialogTransmissionDto"
                }
              }
            },
            "description": "Successfully returned the dialog transmission."
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \u0022digdir:dialogporten.serviceprovider\u0022."
          },
          "403": {
            "description": "Unauthorized to get child entity for the given dialog (dialog not owned by authenticated organization or has additional scope requirements defined in service identifiers policy)."
          },
          "404": {
            "content": {
              "application/problem\u002Bjson": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description": "The given dialog ID was not found or was deleted, or the given transmission ID was not found."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ],
        "summary": "Gets a single dialog transmission",
        "tags": [
          "Serviceowner"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://altinn-dev-api.azure-api.net/dialogporten"
    }
  ]
}
